{
  "version": 3,
  "sources": ["src/content/examples/pipes/src/app/precedence.component.ts", "src/content/examples/pipes/src/app/precedence.component.html"],
  "sourcesContent": ["import {Component} from '@angular/core';\nimport {UpperCasePipe} from '@angular/common';\n\n@Component({\n  selector: 'app-pipe-precedence',\n  templateUrl: './precedence.component.html',\n  imports: [UpperCasePipe],\n  styles: ['code {font-family: monospace; background-color: #eee; padding: 0.5em;}'],\n})\nexport class PrecedenceComponent {\n  isLeft = true;\n  toggleDirection() {\n    this.isLeft = !this.isLeft;\n  }\n\n  isGood = true;\n  toggleGood() {\n    this.isGood = !this.isGood;\n  }\n\n  isUpper = true;\n  toggleCase() {\n    this.isUpper = !this.isUpper;\n  }\n}\n", "<!-- #docregion -->\n<!-- #docregion precedence -->\n<p>\n  In most cases, you'll wrap the entire ternary expression in parentheses before passing the result to a pipe.\n</p>\n\n<p>\n  Example: <code>(isLeft ? 'left' : 'right') | uppercase</code>\n  <b>\n    {{ (isLeft ? 'left' : 'right') | uppercase }}\n  </b>\n</p>\n<button type=\"button\" (click)=\"toggleDirection()\">Toggle 'isLeft'</button>\n\n\n<p>Without parentheses, only the second value is uppercased.</p>\n\n<p>Example: <code>isGood ? 'good' : 'bad' | uppercase</code>\n  <b>\n    {{ isGood ? 'good' : 'bad' | uppercase }}\n  </b>\n</p>\n\n<p>Same as: <code>isGood ? 'good' : ('bad' | uppercase)</code>\n  <b>\n    {{ isGood ? 'good' : ('bad' | uppercase) }}\n  </b>\n</p>\n<button type=\"button\" (click)=\"toggleGood()\">Toggle 'isGood'</button>\n\n\n<p>If only one of the values should be passed to a pipe,\n  be explicit and surround that value with parentheses.</p>\n\n<p>Example: <code>isUpper ? ('upper' | uppercase) : 'lower'</code>\n  <b>\n    {{ isUpper ? ('upper' | uppercase) : 'lower' }}\n  </b>\n</p>\n<button type=\"button\" (click)=\"toggleCase()\">Toggle 'isUpper'</button>\n<!-- #enddocregion precedence -->\n"],
  "mappings": "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",
  "names": []
}
