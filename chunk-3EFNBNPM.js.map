{
  "version": 3,
  "sources": ["src/content/examples/forms/src/app/actor.ts", "src/content/examples/forms/src/app/actor-form/actor-form.component.ts", "src/content/examples/forms/src/app/actor-form/actor-form.component.html"],
  "sourcesContent": ["// #docregion\nexport class Actor {\n  constructor(\n    public id: number,\n    public name: string,\n    public skill: string,\n    public studio?: string,\n  ) {}\n}\n", "// #docplaster\n// #docregion , v1, final\nimport {Component} from '@angular/core';\n\nimport {Actor} from '../actor';\nimport {FormsModule} from '@angular/forms';\nimport {JsonPipe} from '@angular/common';\n\n// #docregion imports\n@Component({\n  selector: 'app-actor-form',\n  templateUrl: './actor-form.component.html',\n  imports: [FormsModule, JsonPipe],\n})\nexport class ActorFormComponent {\n  // #enddocregion imports\n  skills = ['Method Acting', 'Singing', 'Dancing', 'Swordfighting'];\n\n  model = new Actor(18, 'Tom Cruise', this.skills[3], 'CW Productions');\n\n  // #docregion submitted\n  submitted = false;\n\n  onSubmit() {\n    this.submitted = true;\n  }\n  // #enddocregion submitted\n\n  // #enddocregion final\n  // #enddocregion v1\n\n  // #docregion final, new-actor\n  newActor() {\n    this.model = new Actor(42, '', '');\n  }\n  // #enddocregion final, new-actor\n\n  heroine(): Actor {\n    // #docregion Marilyn\n    const myActress = new Actor(42, 'Marilyn Monroe', 'Singing');\n    console.log('My actress is called ' + myActress.name); // \"My actress is called Marilyn\"\n    // #enddocregion Marilyn\n    return myActress;\n  }\n\n  //////// NOT SHOWN IN DOCS ////////\n\n  // Reveal in html:\n  //   Name via form.controls = {{showFormControls(actorForm)}}\n  showFormControls(form: any) {\n    return form && form.controls.name && form.controls.name.value; // Tom Cruise\n  }\n\n  /////////////////////////////\n\n  // #docregion v1, final\n}\n", "<!-- #docplaster -->\n<!-- #docregion final -->\n<div class=\"container\">\n  <!-- #docregion edit-div -->\n  <div [hidden]=\"submitted\">\n    <h1>Actor Form</h1>\n    <!-- #docregion ngSubmit -->\n    <form (ngSubmit)=\"onSubmit()\" #actorForm=\"ngForm\">\n      <!-- #enddocregion ngSubmit, edit-div -->\n      <div class=\"form-group\">\n        <!-- #docregion name-with-error-msg -->\n        <label for=\"name\">Name</label>\n        <input type=\"text\" class=\"form-control\" id=\"name\"\n               required [(ngModel)]=\"model.name\" name=\"name\"\n               #name=\"ngModel\">\n        <!-- #docregion hidden-error-msg -->\n        <div [hidden]=\"name.valid || name.pristine\"\n             class=\"alert alert-danger\">\n        <!-- #enddocregion hidden-error-msg -->\n          Name is required\n        </div>\n        <!-- #enddocregion name-with-error-msg -->\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"studio\">Studio Affiliation</label>\n        <input type=\"text\" class=\"form-control\" id=\"studio\"\n               [(ngModel)]=\"model.studio\" name=\"studio\">\n      </div>\n\n      <div class=\"form-group\">\n        <label for=\"skill\">Skill</label>\n        <select class=\"form-control\" id=\"skill\"\n                required [(ngModel)]=\"model.skill\" name=\"skill\"\n                #skill=\"ngModel\">\n          @for (skill of skills; track $index) {\n            <option [value]=\"skill\">{{ skill }}</option>\n          }\n        </select>\n        <div [hidden]=\"skill.valid || skill.pristine\" class=\"alert alert-danger\">\n          skill is required\n        </div>\n      </div>\n\n      <!-- #docregion submit-button -->\n      <button type=\"submit\" class=\"btn btn-success\"\n        [disabled]=\"!actorForm.form.valid\">Submit</button>\n      <!-- #enddocregion submit-button -->\n      <!-- #docregion new-actor-button-form-reset -->\n      <button type=\"button\" class=\"btn btn-default\"\n        (click)=\"newActor(); actorForm.reset()\">New Actor</button>\n      <!-- #enddocregion new-actor-button-form-reset -->\n <!-- #enddocregion final -->\n      <em>with</em> reset\n\n      &nbsp;&nbsp;\n      <!-- #docregion new-actor-button-no-reset -->\n      <button type=\"button\" class=\"btn btn-default\"\n        (click)=\"newActor()\">New Actor</button>\n      <!-- #enddocregion new-actor-button-no-reset -->\n      <em>without</em> reset\n\n     <!-- NOT SHOWN IN DOCS -->\n      <div>\n        <hr>\n        Name via form.controls = {{ showFormControls(actorForm) }}\n      </div>\n     <!-- - -->\n<!-- #docregion final -->\n    </form>\n  </div>\n\n  <!-- #docregion submitted -->\n  <div [hidden]=\"!submitted\">\n    <h2>You submitted the following:</h2>\n    <div class=\"row\">\n      <div class=\"col-xs-3\">Name</div>\n      <div class=\"col-xs-9\">{{ model.name }}</div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-xs-3\">Studio</div>\n      <div class=\"col-xs-9\">{{ model.studio }}</div>\n    </div>\n    <div class=\"row\">\n      <div class=\"col-xs-3\">Skill</div>\n      <div class=\"col-xs-9\">{{ model.skill }}</div>\n    </div>\n    <br>\n    <button type=\"button\" class=\"btn btn-primary\" (click)=\"submitted=false\">\n      Edit\n    </button>\n  </div>\n  <!-- #enddocregion submitted -->\n</div>\n <!-- #enddocregion final -->\n\n<!-- ====================================================  -->\n  <div>\n    <form>\n<!-- #docregion edit-div -->\n\n       <!-- ... all of the form ... -->\n\n    </form>\n  </div>\n<!-- #enddocregion edit-div -->\n\n<!-- ====================================================  -->\n<hr>\n<style>\n  .no-style .ng-valid {\n  border-left: 1px  solid #CCC\n}\n\n  .no-style .ng-invalid {\n  border-left: 1px  solid #CCC\n}\n</style>\n<div class=\"no-style\" style=\"margin-left: 4px\">\n  <div class=\"container\">\n      <h1>Actor Form</h1>\n      <form>\n        <div class=\"form-group\">\n          <label for=\"name\">Name</label>\n          <input type=\"text\" class=\"form-control\" id=\"name\" required>\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"studio\">Studio</label>\n          <input type=\"text\" class=\"form-control\" id=\"studio\">\n        </div>\n\n        <!-- #docregion skills -->\n        <div class=\"form-group\">\n          <label for=\"skill\">Skill</label>\n          <select class=\"form-control\" id=\"skill\" required>\n            @for(skill of skills; track $index) {\n              <option [value]=\"skill\">{{ skill }}</option>\n            }\n          </select>\n        </div>\n        <!-- #enddocregion skills -->\n        <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n\n      </form>\n  </div>\n\n  <!-- ====================================================  -->\n  <hr>\n  <div class=\"container\">\n      <h1>Actor Form</h1>\n      <!-- #docregion template-variable-->\n      <form #actorForm=\"ngForm\">\n      <!-- #enddocregion template-variable-->\n    <!-- #docregion ngModel-2-->\n        {{ model | json }}\n        <div class=\"form-group\">\n          <label for=\"name\">Name</label>\n          <input type=\"text\" class=\"form-control\" id=\"name\"\n                 required\n                 [(ngModel)]=\"model.name\" name=\"name\">\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"studio\">Studio</label>\n          <input type=\"text\"  class=\"form-control\" id=\"studio\"\n                 [(ngModel)]=\"model.studio\" name=\"studio\">\n        </div>\n\n        <div class=\"form-group\">\n          <label for=\"skill\">Skill</label>\n          <select class=\"form-control\"  id=\"skill\"\n                  required\n                  [(ngModel)]=\"model.skill\" name=\"skill\">\n            @for (skill of skills; track $index) {\n              <option [value]=\"skill\">{{ skill }}</option>\n            }\n          </select>\n        </div>\n\n    <!-- #enddocregion ngModel-2-->\n        <button type=\"submit\" class=\"btn btn-success\">Submit</button>\n\n      </form>\n  </div>\n\n  <!-- EXTRA MATERIAL FOR DOCUMENTATION -->\n  <hr>\n  <!-- #docregion ngModelName-1 -->\n    <input type=\"text\" class=\"form-control\" id=\"name\"\n           required\n           [(ngModel)]=\"model.name\" name=\"name\">\n    TODO: remove this: {{ model.name}}\n  <!-- #enddocregion ngModelName-1 -->\n  <hr>\n    <input type=\"text\" class=\"form-control\" id=\"name\"\n           required\n           [ngModel]=\"model.name\" name=\"name\"\n           (ngModelChange)=\"model.name = $event\">\n    TODO: remove this: {{ model.name}}\n</div>\n"],
  "mappings": "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",
  "names": []
}
