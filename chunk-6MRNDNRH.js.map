{
  "version": 3,
  "sources": ["src/content/examples/animations/src/app/animations-package/reorder.component.ts", "src/content/examples/animations/src/app/animations-package/reorder.component.html"],
  "sourcesContent": ["// #docplaster\nimport {Component, signal} from '@angular/core';\nimport {trigger, transition, animate, query, style} from '@angular/animations';\n\n@Component({\n  selector: 'app-reorder',\n  templateUrl: './reorder.component.html',\n  styleUrls: ['reorder.component.css'],\n  animations: [\n    trigger('itemAnimation', [\n      transition(':enter', [\n        style({opacity: 0, transform: 'translateX(-10px)'}),\n        animate('300ms', style({opacity: 1, transform: 'translateX(none)'})),\n      ]),\n      transition(':leave', [\n        style({opacity: 1, transform: 'translateX(none)'}),\n        animate('300ms', style({opacity: 0, transform: 'translateX(-10px)'})),\n      ]),\n    ]),\n  ],\n})\nexport class ReorderComponent {\n  show = signal(true);\n  items = ['stuff', 'things', 'cheese', 'paper', 'scissors', 'rock'];\n\n  randomize() {\n    const randItems = [...this.items];\n    const newItems = [];\n    for (let i of this.items) {\n      const max: number = this.items.length - newItems.length;\n      const randNum = Math.floor(Math.random() * max);\n      newItems.push(...randItems.splice(randNum, 1));\n    }\n\n    this.items = newItems;\n  }\n}\n", "<!-- #docplaster -->\n<h1>Reordering List Example</h1>\n<button type=\"button\" (click)=\"randomize()\">Randomize</button>\n\n<ul class=\"items\">\n  @for(item of items; track item) {\n    <li @itemAnimation class=\"item\">{{ item }}</li>\n  }\n</ul>\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACMI,IAAA,4BAAA,GAAA,MAAA,CAAA;AAAgC,IAAA,iBAAA,CAAA;AAAU,IAAA,0BAAA;;;;AAAtC,IAAA,qBAAA,kBAAA,MAAA;AAA4B,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA;;;;ADe9B,IAAO,oBAAP,MAAO,kBAAgB;EAC3B,OAAO,OAAO,MAAI,GAAA,YAAA,CAAA,EAAA,WAAA,OAAA,CAAA,IAAA,CAAA,CAAA;EAClB,QAAQ,CAAC,SAAS,UAAU,UAAU,SAAS,YAAY,MAAM;EAEjE,YAAS;AACP,UAAM,YAAY,CAAC,GAAG,KAAK,KAAK;AAChC,UAAM,WAAW,CAAA;AACjB,aAAS,KAAK,KAAK,OAAO;AACxB,YAAM,MAAc,KAAK,MAAM,SAAS,SAAS;AACjD,YAAM,UAAU,KAAK,MAAM,KAAK,OAAM,IAAK,GAAG;AAC9C,eAAS,KAAK,GAAG,UAAU,OAAO,SAAS,CAAC,CAAC;IAC/C;AAEA,SAAK,QAAQ;EACf;;AAd2B;cAAhB;mCAAA,mBAAgB;AAAA;cAAhB,oFAAA,mBAAgB,WAAA,CAAA,CAAA,aAAA,CAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,QAAA,UAAA,GAAA,OAAA,GAAA,CAAA,GAAA,OAAA,GAAA,CAAA,GAAA,MAAA,CAAA,GAAA,UAAA,gCAAA,0BAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;ACpB7B,IAAA,4BAAA,GAAA,IAAA;AAAI,IAAA,iBAAA,GAAA,yBAAA;AAAuB,IAAA,0BAAA;AAC3B,IAAA,4BAAA,GAAA,UAAA,CAAA;AAAsB,IAAA,wBAAA,SAAA,gCAAA,oDAAA;AAAA,aAAS,IAAA,UAAA;IAAW,GAApB,oDAAoB;AAAE,IAAA,iBAAA,GAAA,WAAA;AAAS,IAAA,0BAAA;AAErD,IAAA,4BAAA,GAAA,MAAA,CAAA;AACE,IAAA,2BAAA,GAAA,iCAAA,GAAA,GAAA,MAAA,GAAA,mCAAA;AAGF,IAAA,0BAAA;;;AAHE,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,IAAA,KAAA;;GDgB2B,sMAbf;EACV,QAAQ,iBAAiB;IACvB,WAAW,UAAU;MACnB,MAAM,EAAC,SAAS,GAAG,WAAW,oBAAmB,CAAC;MAClD,QAAQ,SAAS,MAAM,EAAC,SAAS,GAAG,WAAW,mBAAkB,CAAC,CAAC;KACpE;IACD,WAAW,UAAU;MACnB,MAAM,EAAC,SAAS,GAAG,WAAW,mBAAkB,CAAC;MACjD,QAAQ,SAAS,MAAM,EAAC,SAAS,GAAG,WAAW,oBAAmB,CAAC,CAAC;KACrE;GACF;EACF,EAAA,CAAA;AAEG,IAAO,mBAAP;;sEAAO,kBAAgB,CAAA;UAjB5B;uBACW,eAAa,YAGX;MACV,QAAQ,iBAAiB;QACvB,WAAW,UAAU;UACnB,MAAM,EAAC,SAAS,GAAG,WAAW,oBAAmB,CAAC;UAClD,QAAQ,SAAS,MAAM,EAAC,SAAS,GAAG,WAAW,mBAAkB,CAAC,CAAC;SACpE;QACD,WAAW,UAAU;UACnB,MAAM,EAAC,SAAS,GAAG,WAAW,mBAAkB,CAAC;UACjD,QAAQ,SAAS,MAAM,EAAC,SAAS,GAAG,WAAW,oBAAmB,CAAC,CAAC;SACrE;OACF;OACF,UAAA,wPAAA,QAAA,CAAA,4MAAA,EAAA,CAAA;;;;6EAEU,kBAAgB,EAAA,WAAA,oBAAA,UAAA,mFAAA,YAAA,GAAA,CAAA;AAAA,GAAA;",
  "names": []
}
