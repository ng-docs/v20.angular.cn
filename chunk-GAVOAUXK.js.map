{
  "version": 3,
  "sources": ["src/content/examples/drag-drop/src/connected-sorting-group/app/app.component.ts", "src/content/examples/drag-drop/src/connected-sorting-group/app/app.component.html"],
  "sourcesContent": ["import {\n  CdkDrag,\n  CdkDragDrop,\n  CdkDropList,\n  CdkDropListGroup,\n  moveItemInArray,\n  transferArrayItem,\n} from '@angular/cdk/drag-drop';\nimport {Component} from '@angular/core';\n\n/**\n * @title Drag&Drop connected sorting group\n */\n@Component({\n  selector: 'cdk-drag-drop-connected-sorting-group-example',\n  templateUrl: 'app.component.html',\n  styleUrl: 'app.component.css',\n  standalone: true,\n  imports: [CdkDropListGroup, CdkDropList, CdkDrag],\n})\nexport class CdkDragDropConnectedSortingGroupExample {\n  todo = ['Get to work', 'Pick up groceries', 'Go home', 'Fall asleep'];\n\n  done = ['Get up', 'Brush teeth', 'Take a shower', 'Check e-mail', 'Walk dog'];\n\n  drop(event: CdkDragDrop<string[]>) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(\n        event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex,\n      );\n    }\n  }\n}\n", "<div cdkDropListGroup>\n  <div class=\"example-container\">\n    <h2>To do</h2>\n\n    <div\n      cdkDropList\n      [cdkDropListData]=\"todo\"\n      class=\"example-list\"\n      (cdkDropListDropped)=\"drop($event)\">\n      @for (item of todo; track item) {\n        <div class=\"example-box\" cdkDrag>{{item}}</div>\n      }\n    </div>\n  </div>\n\n  <div class=\"example-container\">\n    <h2>Done</h2>\n\n    <div\n      cdkDropList\n      [cdkDropListData]=\"done\"\n      class=\"example-list\"\n      (cdkDropListDropped)=\"drop($event)\">\n      @for (item of done; track item) {\n        <div class=\"example-box\" cdkDrag>{{item}}</div>\n      }\n    </div>\n  </div>\n</div>\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACUQ,IAAA,yBAAA,GAAA,OAAA,CAAA;AAAiC,IAAA,iBAAA,CAAA;AAAQ,IAAA,uBAAA;;;;AAAR,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA;;;;;;AAcjC,IAAA,yBAAA,GAAA,OAAA,CAAA;AAAiC,IAAA,iBAAA,CAAA;AAAQ,IAAA,uBAAA;;;;AAAR,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA;;;;ADJnC,IAAO,2CAAP,MAAO,yCAAuC;EAClD,OAAO,CAAC,eAAe,qBAAqB,WAAW,aAAa;EAEpE,OAAO,CAAC,UAAU,eAAe,iBAAiB,gBAAgB,UAAU;EAE5E,KAAK,OAA4B;AAC/B,QAAI,MAAM,sBAAsB,MAAM,WAAW;AAC/C,sBAAgB,MAAM,UAAU,MAAM,MAAM,eAAe,MAAM,YAAY;IAC/E,OAAO;AACL,wBACE,MAAM,kBAAkB,MACxB,MAAM,UAAU,MAChB,MAAM,eACN,MAAM,YAAY;IAEtB;EACF;;AAhBkD;cAAvC;mCAAA,0CAAuC;AAAA;cAAvC,2GAAA,0CAAuC,WAAA,CAAA,CAAA,+CAAA,CAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,oBAAA,EAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,CAAA,eAAA,IAAA,GAAA,gBAAA,GAAA,sBAAA,iBAAA,GAAA,CAAA,WAAA,IAAA,GAAA,aAAA,CAAA,GAAA,UAAA,gCAAA,iDAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;ACpBpD,IAAA,yBAAA,GAAA,OAAA,CAAA,EAAsB,GAAA,OAAA,CAAA,EACW,GAAA,IAAA;AACzB,IAAA,iBAAA,GAAA,OAAA;AAAK,IAAA,uBAAA;AAET,IAAA,yBAAA,GAAA,OAAA,CAAA;AAIE,IAAA,qBAAA,sBAAA,gCAAA,mFAAA,QAAA;AAAA,aAAsB,IAAA,KAAA,MAAA;IAAY,GAAlC,qFAAkC;AAClC,IAAA,2BAAA,GAAA,wDAAA,GAAA,GAAA,OAAA,GAAA,mCAAA;AAGF,IAAA,uBAAA,EAAM;AAGR,IAAA,yBAAA,GAAA,OAAA,CAAA,EAA+B,GAAA,IAAA;AACzB,IAAA,iBAAA,GAAA,MAAA;AAAI,IAAA,uBAAA;AAER,IAAA,yBAAA,IAAA,OAAA,CAAA;AAIE,IAAA,qBAAA,sBAAA,gCAAA,oFAAA,QAAA;AAAA,aAAsB,IAAA,KAAA,MAAA;IAAY,GAAlC,sFAAkC;AAClC,IAAA,2BAAA,IAAA,yDAAA,GAAA,GAAA,OAAA,GAAA,mCAAA;AAGF,IAAA,uBAAA,EAAM,EACF;;;AArBF,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,mBAAA,IAAA,IAAA;AAGA,IAAA,oBAAA;AAAA,IAAA,qBAAA,IAAA,IAAA;AAWA,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,mBAAA,IAAA,IAAA;AAGA,IAAA,oBAAA;AAAA,IAAA,qBAAA,IAAA,IAAA;;GDH8C,oEAFxC,kBAAkB,aAAa,OAAO,GAAA,QAAA,CAAA,yzCAAA,EAAA,CAAA;AAE5C,IAAO,0CAAP;;sEAAO,yCAAuC,CAAA;UAPnD;uBACW,iDAA+C,YAG7C,MAAI,SACP,CAAC,kBAAkB,aAAa,OAAO,GAAC,UAAA,mqBAAA,QAAA,CAAA,kuCAAA,EAAA,CAAA;;;;6EAEtC,yCAAuC,EAAA,WAAA,2CAAA,UAAA,mFAAA,YAAA,GAAA,CAAA;AAAA,GAAA;",
  "names": []
}
