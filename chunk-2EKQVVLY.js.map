{
  "version": 3,
  "sources": ["src/content/examples/animations/src/app/open-close.component.ts", "src/content/examples/animations/src/app/open-close.component.html"],
  "sourcesContent": ["// #docplaster\nimport {Component, input} from '@angular/core';\nimport {trigger, transition, state, animate, style, AnimationEvent} from '@angular/animations';\n\n// #docregion component, events1\n@Component({\n  selector: 'app-open-close',\n  // #docregion trigger-wildcard1, trigger-transition\n  animations: [\n    trigger('openClose', [\n      // #docregion state1\n      // ...\n      // #enddocregion events1\n      state(\n        'open',\n        style({\n          height: '200px',\n          opacity: 1,\n          backgroundColor: 'yellow',\n        }),\n      ),\n      // #enddocregion state1\n      // #docregion state2\n      state(\n        'closed',\n        style({\n          height: '100px',\n          opacity: 0.8,\n          backgroundColor: 'blue',\n        }),\n      ),\n      // #enddocregion state2, trigger-wildcard1\n      // #docregion transition1\n      transition('open => closed', [animate('1s')]),\n      // #enddocregion transition1\n      // #docregion transition2\n      transition('closed => open', [animate('0.5s')]),\n      // #enddocregion transition2, component\n      // #docregion trigger-wildcard1\n      transition('* => closed', [animate('1s')]),\n      transition('* => open', [animate('0.5s')]),\n      // #enddocregion trigger-wildcard1\n      // #docregion trigger-wildcard2\n      transition('open <=> closed', [animate('0.5s')]),\n      // #enddocregion trigger-wildcard2\n      // #docregion transition4\n      transition('* => open', [animate('1s', style({opacity: '*'}))]),\n      // #enddocregion transition4\n      transition('* => *', [animate('1s')]),\n      // #enddocregion trigger-transition\n      // #docregion component, trigger-wildcard1, events1\n    ]),\n  ],\n  // #enddocregion trigger-wildcard1\n  templateUrl: 'open-close.component.html',\n  styleUrls: ['open-close.component.css'],\n})\n// #docregion events\nexport class OpenCloseComponent {\n  // #enddocregion events1, events, component\n  logging = input(false);\n  // #docregion component\n  isOpen = true;\n\n  toggle() {\n    this.isOpen = !this.isOpen;\n  }\n\n  // #enddocregion component\n  // #docregion events1, events\n  onAnimationEvent(event: AnimationEvent) {\n    // #enddocregion events1, events\n    if (!this.logging) {\n      return;\n    }\n    // #docregion events\n    // openClose is trigger name in this example\n    console.warn(`Animation Trigger: ${event.triggerName}`);\n\n    // phaseName is \"start\" or \"done\"\n    console.warn(`Phase: ${event.phaseName}`);\n\n    // in our example, totalTime is 1000 (number of milliseconds in a second)\n    console.warn(`Total time: ${event.totalTime}`);\n\n    // in our example, fromState is either \"open\" or \"closed\"\n    console.warn(`From: ${event.fromState}`);\n\n    // in our example, toState either \"open\" or \"closed\"\n    console.warn(`To: ${event.toState}`);\n\n    // the HTML element itself, the button in this case\n    console.warn(`Element: ${event.element}`);\n    // #docregion events1\n  }\n  // #docregion component\n}\n// #enddocregion component\n", "<button type=\"button\" (click)=\"toggle()\">Toggle Open/Close</button>\n\n<div [@openClose]=\"isOpen ? 'open' : 'closed'\"\n  (@openClose.start)=\"onAnimationEvent($event)\"\n  (@openClose.done)=\"onAnimationEvent($event)\"\n  class=\"open-close-container\">\n  <p>The box is now {{ isOpen ? 'Open' : 'Closed' }}!</p>\n</div>\n"],
  "mappings": "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",
  "names": []
}
