{"version":3,"sources":["src/app/features/update/recommendations.ts","node_modules/@angular/material/fesm2022/internal-form-field.mjs","node_modules/@angular/material/fesm2022/checkbox.mjs","node_modules/@angular/cdk/fesm2022/text-field.mjs","node_modules/@angular/material/fesm2022/input-value-accessor.mjs","node_modules/@angular/material/fesm2022/form-field-module.mjs","node_modules/@angular/material/fesm2022/input.mjs","node_modules/@angular/material/fesm2022/card.mjs","node_modules/@angular/material/fesm2022/public-api.mjs","node_modules/@angular/material/fesm2022/line.mjs","node_modules/@angular/material/fesm2022/grid-list.mjs","node_modules/@angular/cdk/fesm2022/selection-model.mjs","node_modules/@angular/material/fesm2022/pseudo-checkbox.mjs","node_modules/@angular/material/fesm2022/button-toggle.mjs","src/app/features/update/update.component.ts","src/app/features/update/update.component.html"],"sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nexport enum ApplicationComplexity {\n  Basic = 1,\n  Medium = 2,\n  Advanced = 3,\n}\n\nexport interface Step {\n  step: string;\n  action: string;\n  possibleIn: number;\n  necessaryAsOf: number;\n  level: ApplicationComplexity;\n  angularCLI?: boolean;\n  ngUpgrade?: boolean;\n  pwa?: boolean;\n  material?: boolean;\n  renderedStep?: string;\n  windows?: boolean;\n}\n\nexport const RECOMMENDATIONS: Step[] = [\n  {\n    possibleIn: 200,\n    necessaryAsOf: 400,\n    level: ApplicationComplexity.Basic,\n    step: '扩展 OnInit',\n    action:\n      '确保不要使用 `extends OnInit`，或者将 `extends` 与任何生命周期事件合用。而应该使用 `implements <生命周期事件>`。',\n  },\n  {\n    possibleIn: 200,\n    necessaryAsOf: 400,\n    level: ApplicationComplexity.Advanced,\n    step: '深层导入',\n    action: '停止使用深层导入，这些符号现在已标记为 ɵ，并不是我们公共 API 的一部分。',\n  },\n  {\n    possibleIn: 200,\n    necessaryAsOf: 400,\n    level: ApplicationComplexity.Advanced,\n    step: 'invokeElementMethod',\n    action: '停止使用 `Renderer.invokeElementMethod`，因为该方法已被移除。目前没有替代方法。',\n  },\n  {\n    possibleIn: 400,\n    necessaryAsOf: 400,\n    level: ApplicationComplexity.Basic,\n    step: '非动画模块',\n    action:\n      '如果你的应用中使用了动画，请在你的应用 `NgModule` 中从 `@angular/platform-browser/animations` 导入 `BrowserAnimationsModule`。',\n  },\n  {\n    possibleIn: 400,\n    necessaryAsOf: 400,\n    level: ApplicationComplexity.Medium,\n    step: '原生表单验证',\n    action:\n      '当你包含 `FormsModule` 时，Angular 就会开始向表单元素添加 `novalidate` 属性。要重新启用原生表单行为，请使用 `ngNoForm` 或添加 `ngNativeValidate`。',\n  },\n  {\n    possibleIn: 400,\n    necessaryAsOf: 400,\n    level: ApplicationComplexity.Advanced,\n    step: 'RootRenderer',\n    action: '用 `RendererFactoryV2` 替换 `RootRenderer`。',\n  },\n  {\n    possibleIn: 400,\n    necessaryAsOf: 400,\n    level: ApplicationComplexity.Advanced,\n    ngUpgrade: true,\n    step: 'downgradeInjectable',\n    action: '`upgrade/static/downgradeInjectable` 的返回值已更改。',\n  },\n  {\n    possibleIn: 400,\n    necessaryAsOf: 400,\n    level: ApplicationComplexity.Advanced,\n    step: '动画测试',\n    action:\n      '如果你使用了动画和测试，请在你的 `TestBed.initTestEnvironment` 调用中添加 `mods[1].NoopAnimationsModule`。',\n  },\n  {\n    possibleIn: 200,\n    necessaryAsOf: 500,\n    level: ApplicationComplexity.Advanced,\n    step: 'DefaultIterableDiffer',\n    action:\n      '停止使用 `DefaultIterableDiffer`、`KeyValueDiffers#factories` 或 `IterableDiffers#factories`。',\n  },\n  {\n    possibleIn: 400,\n    necessaryAsOf: 500,\n    level: ApplicationComplexity.Basic,\n    step: '模板标签',\n    action: '将你的 `template` 标签重命名为 `ng-template`。',\n  },\n  {\n    possibleIn: 400,\n    necessaryAsOf: 500,\n    level: ApplicationComplexity.Medium,\n    step: 'OpaqueToken',\n    action: '用 `InjectionToken` 替换任何 `OpaqueToken`。',\n  },\n  {\n    possibleIn: 400,\n    necessaryAsOf: 500,\n    level: ApplicationComplexity.Advanced,\n    step: 'DifferFactory',\n    action: '如果调用了 `DifferFactory.create(...)`，就移除 `ChangeDetectorRef` 参数。',\n  },\n  {\n    possibleIn: 400,\n    necessaryAsOf: 500,\n    level: ApplicationComplexity.Advanced,\n    step: 'ErrorHandler 参数',\n    action: '停止向 ErrorHandler 构造函数传递任何参数。',\n  },\n  {\n    possibleIn: 400,\n    necessaryAsOf: 500,\n    level: ApplicationComplexity.Advanced,\n    step: 'ngProbeToken',\n    action:\n      '如果使用了 ngProbeToken，请确保从 @angular/core 而不是 @angular/platform-browser 导入它。',\n  },\n  {\n    possibleIn: 400,\n    necessaryAsOf: 500,\n    level: ApplicationComplexity.Advanced,\n    step: 'TrackByFn',\n    action: '如果使用了 TrackByFn，改用 TrackByFunction。',\n  },\n  {\n    possibleIn: 500,\n    necessaryAsOf: 500,\n    level: ApplicationComplexity.Basic,\n    step: 'i18n 管道更改',\n    action:\n      '如果依赖于日期、货币、小数或百分比管道，在 5 中将看到格式的轻微更改。对于使用其他区域设置而不是 en-us 的应用程序，你需要导入它，可选择从 `@angular/common/i18n_data/locale_fr` 导入 `locale_extended_fr` 并注册 locale。',\n  },\n  {\n    possibleIn: 500,\n    necessaryAsOf: 500,\n    level: ApplicationComplexity.Advanced,\n    step: 'gendir',\n    action:\n      '不要依赖于 `gendir`，而是考虑使用 `skipTemplateCodeGen`。 <a href=https://github.com/angular/angular/issues/19339#issuecomment-332607471\" target=\"_blank\">阅读更多</a>',\n  },\n  {\n    possibleIn: 220,\n    necessaryAsOf: 600,\n    level: ApplicationComplexity.Basic,\n    ngUpgrade: true,\n    step: '动态 ngUpgrade',\n    action:\n      '用 `@angular/upgrade/static` 中的新版本替换从 `@angular/upgrade` 导入的 `downgradeComponent`、`downgradeInjectable`、`UpgradeComponent` 和 `UpgradeModule`。',\n  },\n  {\n    possibleIn: 400,\n    necessaryAsOf: 600,\n    level: ApplicationComplexity.Medium,\n    step: '核心中的动画',\n    action: '如果从 @angular/core 导入了任何动画服务或工具，应该从 @angular/animations 导入。',\n  },\n  {\n    possibleIn: 400,\n    necessaryAsOf: 600,\n    level: ApplicationComplexity.Advanced,\n    step: 'ngOutletContext',\n    action: '用 `ngTemplateOutletContext` 替换 `ngOutletContext`。',\n  },\n  {\n    possibleIn: 400,\n    necessaryAsOf: 600,\n    level: ApplicationComplexity.Advanced,\n    step: 'collectionChangeRecord',\n    action: '用 `IterableChangeRecord` 替换 `CollectionChangeRecord`。',\n  },\n  {\n    possibleIn: 400,\n    necessaryAsOf: 900,\n    level: ApplicationComplexity.Advanced,\n    step: 'Renderer',\n    action: '任何使用 Renderer 的地方，现在使用 Renderer2。',\n  },\n  {\n    possibleIn: 400,\n    necessaryAsOf: 600,\n    level: ApplicationComplexity.Advanced,\n    step: '路由器查询参数',\n    action: '如果使用了 preserveQueryParams，改用 queryParamsHandling。',\n  },\n  {\n    possibleIn: 430,\n    necessaryAsOf: 800,\n    level: ApplicationComplexity.Basic,\n    step: 'Http',\n    action:\n      '如果使用传统的 `HttpModule` 和 `Http` 服务，请切换到 `HttpClientModule` 和 `HttpClient` 服务。HttpClient 简化了默认的人体工程学（你不再需要映射到 JSON），现在支持类型化返回值和拦截器。在 [angular.dev](https://angular.io/guide/http) 上阅读更多。',\n  },\n  {\n    possibleIn: 430,\n    necessaryAsOf: 600,\n    level: ApplicationComplexity.Advanced,\n    step: '@angular/platform-browser 中的 DOCUMENT',\n    action: '如果使用 @angular/platform-browser 中的 DOCUMENT，请开始从 @angular/common 导入。',\n  },\n  {\n    possibleIn: 500,\n    necessaryAsOf: 600,\n    level: ApplicationComplexity.Advanced,\n    step: 'ReflectiveInjector',\n    action: '任何使用 ReflectiveInjector 的地方，现在使用 StaticInjector。',\n  },\n  {\n    possibleIn: 500,\n    necessaryAsOf: 550,\n    level: ApplicationComplexity.Medium,\n    step: '空白字符',\n    action:\n      '在你的 `tsconfig.json` 的 `angularCompilerOptions` 键下选择 `off` 作为 `preserveWhitespaces` 的值，以获得此设置的好处，该设置在 v6 中默认设置为 `off`。',\n  },\n  {\n    possibleIn: 600,\n    necessaryAsOf: 600,\n    level: ApplicationComplexity.Basic,\n    step: 'Node 8',\n    action:\n      '确保你正在使用<a href=\"http://www.hostingadvice.com/how-to/update-node-js-latest-version/\" target=\"_blank\">Node 8或更高版本</a>。',\n  },\n  {\n    possibleIn: 600,\n    necessaryAsOf: 600,\n    level: ApplicationComplexity.Basic,\n    windows: false,\n    step: '更新到 CLI v6',\n    action:\n      '更新你的 Angular CLI，并将配置迁移到<a href=\"https://github.com/angular/angular-cli/wiki/angular-workspace\" target=\"_blank\">新的 angular.json 格式</a>，方法如下：<br/><br/>`NG_DISABLE_VERSION_CHECK=1 npx @angular/cli@6 update @angular/cli@6`<br/>',\n  },\n  {\n    possibleIn: 600,\n    necessaryAsOf: 600,\n    level: ApplicationComplexity.Basic,\n    windows: true,\n    step: '更新到 CLI v6',\n    action:\n      '更新你的 Angular CLI，并将配置迁移到<a href=\"https://github.com/angular/angular-cli/wiki/angular-workspace\" target=\"_blank\">新的 angular.json 格式</a>，方法如下：<br/><br/>`cmd /C \"set \"NG_DISABLE_VERSION_CHECK=1\" && npx @angular/cli@6 update @angular/cli@6 @angular/core@6\"`<br/>',\n  },\n  {\n    possibleIn: 600,\n    necessaryAsOf: 600,\n    level: ApplicationComplexity.Medium,\n    step: 'CLI v6 脚本',\n    action:\n      '更新你在 `package.json` 中可能有的任何 `scripts`，以使用最新的 Angular CLI 命令。所有 CLI 命令现在使用两个短横线作为标志（例如 `ng build --prod --source-map`）以符合 POSIX 规范。',\n  },\n  {\n    possibleIn: 600,\n    necessaryAsOf: 600,\n    level: ApplicationComplexity.Basic,\n    windows: false,\n    step: '更新到 Angular v6',\n    action:\n      '将你的所有 Angular 框架包更新到 v6，并正确安装 RxJS 和 TypeScript 的版本。<br/><br/>`NG_DISABLE_VERSION_CHECK=1 npx @angular/cli@6 update @angular/core@6`<br/><br/>更新后，TypeScript 和 RxJS 将更准确地流经你的应用程序的类型，这可能会暴露出应用程序类型的现有错误',\n  },\n  {\n    possibleIn: 600,\n    necessaryAsOf: 600,\n    level: ApplicationComplexity.Basic,\n    windows: true,\n    step: '更新到 Angular v6',\n    action:\n      '将你的所有 Angular 框架包更新到 v6，并正确安装 RxJS 和 TypeScript 的版本。<br/><br/>`cmd /C \"set \"NG_DISABLE_VERSION_CHECK=1\" && npx @angular/cli@6 update @angular/cli@6 @angular/core@6\"`<br/><br/>更新后，TypeScript 和 RxJS 将更准确地流经你的应用程序的类型，这可能会暴露出应用程序类型的现有错误',\n  },\n  {\n    possibleIn: 600,\n    necessaryAsOf: 600,\n    level: ApplicationComplexity.Advanced,\n    step: 'forms v6',\n    action:\n      '在 Angular Forms 中，当调用 `AbstractControl#markAsPending` 时，`AbstractControl#statusChanges` 现在会发出 `PENDING` 事件。确保如果你在调用 `markAsPending` 时过滤或检查 `statusChanges` 事件，你要考虑到调用 `markAsPending` 时的新事件。',\n  },\n  {\n    possibleIn: 600,\n    necessaryAsOf: 600,\n    level: ApplicationComplexity.Advanced,\n    step: '动画时序',\n    action:\n      '如果在禁用的 Zone 中使用 `AnimationEvent` 的 `totalTime`，它将不再报告为 0。要检测动画事件是否报告为禁用的动画，则可以使用 `event.disabled` 属性。',\n  },\n  {\n    possibleIn: 600,\n    necessaryAsOf: 700,\n    level: ApplicationComplexity.Advanced,\n    step: '表单控件上的 ngModel',\n    action:\n      '在 v6 中已弃用并在 v7 中删除了对使用 ngModel 输入属性和 ngModelChange 事件与响应式表单指令一起使用的支持。',\n  },\n  {\n    possibleIn: 600,\n    necessaryAsOf: 600,\n    level: ApplicationComplexity.Medium,\n    step: 'ngModelChange 顺序',\n    action:\n      '现在，在更新控件的值/有效性后，`ngModelChange` 被发出，而不是之前，以更好地匹配预期。如果你依赖于这些事件的顺序，你需要开始在你的组件中跟踪旧值。',\n  },\n  {\n    possibleIn: 600,\n    necessaryAsOf: 600,\n    level: ApplicationComplexity.Basic,\n    windows: false,\n    material: true,\n    step: '更新到 v6 的依赖项',\n    action:\n      '将 Angular Material 更新到最新版本。<br/><br/>`NG_DISABLE_VERSION_CHECK=1 npx @angular/cli@6 update @angular/material@6`<br/><br/>这也将自动迁移已弃用的 API。',\n  },\n  {\n    possibleIn: 600,\n    necessaryAsOf: 600,\n    level: ApplicationComplexity.Basic,\n    windows: true,\n    material: true,\n    step: '更新到 v6 的依赖项',\n    action:\n      '将 Angular Material 更新到最新版本。<br/><br/>`cmd /C \"set \"NG_DISABLE_VERSION_CHECK=1\" && npx @angular/cli@6 update @angular/material@6\"`<br/><br/>这也将自动迁移已弃用的 API。',\n  },\n  {\n    possibleIn: 600,\n    necessaryAsOf: 600,\n    level: ApplicationComplexity.Medium,\n    step: 'strictPropertyInitializer',\n    action:\n      '如果 TypeScript 配置为严格模式（如果你在 `tsconfig.json` 文件中将 `strict` 设置为 `true`），请更新你的 `tsconfig.json` 以禁用 `strictPropertyInitialization` 或将属性初始化从 `ngOnInit` 移动到你的构造函数。你可以在<a href=\"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-2-7.html#strict-class-initialization\">TypeScript 2.7 发布说明</a>中了解更多关于此标志的信息。',\n  },\n  {\n    possibleIn: 600,\n    necessaryAsOf: 700,\n    level: ApplicationComplexity.Basic,\n    step: '更新到 RxJS 6',\n    action:\n      '使用<a href=\"https://github.com/ReactiveX/rxjs-tslint\" target=\"_blank\">rxjs-tslint 自动更新规则</a>删除已弃用的 RxJS 5 特性<br/><br/>对于大多数应用程序，这意味着运行以下两个命令：<br/><br/>`npx rxjs-tslint`<br/>`rxjs-5-to-6-migrate -p src/tsconfig.app.json`',\n  },\n  {\n    possibleIn: 600,\n    necessaryAsOf: 800,\n    level: ApplicationComplexity.Medium,\n    step: '移除 rxjs-compat',\n    action: '一旦你和你所有的依赖项都已更新到 RxJS 6，请移除 `rxjs-compat`。',\n  },\n  {\n    possibleIn: 610,\n    necessaryAsOf: 800,\n    level: ApplicationComplexity.Medium,\n    step: '使用文件而不是 versionedFiles',\n    action:\n      '如果你使用 Angular Service Worker，请将任何 `versionedFiles` 迁移到 `files` 数组中。行为是一样的。',\n  },\n  {\n    possibleIn: 700,\n    necessaryAsOf: 700,\n    level: ApplicationComplexity.Basic,\n    step: 'TypeScript 3.1',\n    action:\n      'Angular 现在使用 TypeScript 3.1，请阅读有关任何潜在的破坏性变化：<a href=\"https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-1.html\">TypeScript 3.1 发布说明</a>',\n  },\n  {\n    possibleIn: 700,\n    necessaryAsOf: 700,\n    level: ApplicationComplexity.Basic,\n    step: 'Node 10',\n    action:\n      'Angular 现在添加了对 Node 10 的支持：<a href=\"https://nodejs.org/en/blog/release/v10.0.0/\" target=\"_blank\">Node 10 发布说明</a>',\n  },\n  {\n    possibleIn: 700,\n    necessaryAsOf: 700,\n    level: ApplicationComplexity.Basic,\n    windows: false,\n    step: '更新到 v7',\n    action:\n      '在终端中运行`NG_DISABLE_VERSION_CHECK=1 npx @angular/cli@7 update @angular/cli@7 @angular/core@7`来更新核心框架和 CLI 到 v7。',\n  },\n  {\n    possibleIn: 700,\n    necessaryAsOf: 700,\n    level: ApplicationComplexity.Basic,\n    windows: true,\n    step: '更新到 v7',\n    action:\n      '在终端中运行`cmd /C \"set \"NG_DISABLE_VERSION_CHECK=1\" && npx @angular/cli@7 update @angular/cli@7 @angular/core@7\"`来更新核心框架和 CLI 到 v7。',\n  },\n  {\n    possibleIn: 700,\n    necessaryAsOf: 700,\n    level: ApplicationComplexity.Basic,\n    windows: false,\n    material: true,\n    step: '更新到 v7 的 Material',\n    action:\n      '在终端中运行`NG_DISABLE_VERSION_CHECK=1 npx @angular/cli@7 update @angular/material@7`来更新 Angular Material 到 v7。你应该测试你的应用程序是否有大小和布局的变化。',\n  },\n  {\n    possibleIn: 700,\n    necessaryAsOf: 700,\n    level: ApplicationComplexity.Basic,\n    windows: true,\n    material: true,\n    step: '更新到 v7 的 Material',\n    action:\n      '在终端中运行`cmd /C \"set \"NG_DISABLE_VERSION_CHECK=1\" && npx @angular/cli@7 update @angular/material@7\"`来更新 Angular Material 到 v7。你应该测试你的应用程序是否有大小和布局的变化。',\n  },\n  {\n    possibleIn: 700,\n    necessaryAsOf: 700,\n    level: ApplicationComplexity.Medium,\n    material: true,\n    step: 'v7 的 Material 变化',\n    action:\n      '如果你使用屏幕截图测试，你需要重新生成你的屏幕截图黄金文件，因为许多次要的视觉调整已经完成。',\n  },\n  {\n    possibleIn: 700,\n    necessaryAsOf: 800,\n    level: ApplicationComplexity.Advanced,\n    material: true,\n    step: 'v7 的 Material 弃用',\n    action: '停止使用 `matRippleSpeedFactor` 和 `baseSpeedFactor` 来进行涟漪，改用动画配置。',\n  },\n  {\n    possibleIn: 800,\n    necessaryAsOf: 800,\n    level: ApplicationComplexity.Basic,\n    windows: false,\n    step: '更新到 v8',\n    action:\n      '在终端中运行 `NG_DISABLE_VERSION_CHECK=1 npx @angular/cli@8 update @angular/cli@8 @angular/core@8`，然后查看并提交更改。',\n  },\n  {\n    possibleIn: 800,\n    necessaryAsOf: 800,\n    level: ApplicationComplexity.Basic,\n    windows: true,\n    step: '更新到 v8',\n    action:\n      '在终端中运行 `cmd /C \"set \"NG_DISABLE_VERSION_CHECK=1\" && npx @angular/cli@8 update @angular/cli@8 @angular/core@8\"`，然后查看并提交更改。',\n  },\n  {\n    possibleIn: 800,\n    necessaryAsOf: 800,\n    level: ApplicationComplexity.Basic,\n    step: '使用 ::ng-deep 替代 /deep/',\n    action:\n      '在你的样式中用 `::ng-deep` 替换 `/deep/`，[了解更多关于 Angular 组件样式和 ::ng-deep](https://angular.io/guide/component-styles#deprecated-deep--and-ng-deep)。 `/deep/` 和 `::ng-deep` 都已弃用，但在完全从浏览器和工具中移除影子穿透后，使用 `::ng-deep` 更可取。',\n  },\n  {\n    possibleIn: 800,\n    necessaryAsOf: 800,\n    level: ApplicationComplexity.Basic,\n    step: 'TypeScript 3.4',\n    action:\n      'Angular 现在使用 TypeScript 3.4，[了解更多可能由改进的类型检查引起的错误](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-4.html)。',\n  },\n  {\n    possibleIn: 800,\n    necessaryAsOf: 800,\n    level: ApplicationComplexity.Basic,\n    step: 'node 10',\n    action:\n      '确保你正在使用 <a href=\"http://www.hostingadvice.com/how-to/update-node-js-latest-version/\" target=\"_blank\">Node 10 或更高版本</a>。',\n  },\n  {\n    possibleIn: 800,\n    necessaryAsOf: 800,\n    level: ApplicationComplexity.Basic,\n    step: '差异化加载',\n    action:\n      'CLI 的构建命令现在会自动创建一个现代的 ES2015 构建，带有最小的 polyfills，并为旧版浏览器创建兼容的 ES5 构建，并根据浏览器加载适当的文件。 你可以通过将 `tsconfig.json` 中的 `target` 设置回 `es5` 来选择退出此更改。在 [angular.io](https://angular.io/guide/deployment#differential-loading) 上了解更多。',\n  },\n  {\n    possibleIn: 800,\n    necessaryAsOf: 800,\n    level: ApplicationComplexity.Basic,\n    step: 'CLI 遥测',\n    action:\n      '使用 CLI 的新版本时，你将被询问是否要选择加入共享 CLI 使用数据。你也可以添加自己的 Google Analytics 帐户。这样我们可以更好地决定优先考虑哪些 CLI 功能，并衡量我们改进的影响。在 [angular.io](https://angular.io/analytics) 上了解更多。',\n  },\n  {\n    possibleIn: 800,\n    necessaryAsOf: 800,\n    level: ApplicationComplexity.Basic,\n    step: '静态查询时机',\n    action:\n      \"如果你使用 `ViewChild` 或 `ContentChild`，我们正在更新解析这些查询的方式，以给开发者更多控制。你现在必须指定变更检测应该在设置结果之前运行。示例：`@ContentChild('foo', {static: false}) foo !: ElementRef;`。 `ng update` 将自动更新你的查询，但它会倾向于使你的查询为 `static`，以保证兼容性。在 [angular.io](https://angular.io/guide/static-query-migration) 上了解更多。\",\n  },\n  {\n    possibleIn: 800,\n    necessaryAsOf: 800,\n    level: ApplicationComplexity.Basic,\n    windows: false,\n    material: true,\n    step: '更新到 v8 的 Material',\n    action:\n      '在终端中运行 `NG_DISABLE_VERSION_CHECK=1 npx @angular/cli@8 update @angular/material@8`。',\n  },\n  {\n    possibleIn: 800,\n    necessaryAsOf: 800,\n    level: ApplicationComplexity.Basic,\n    windows: true,\n    material: true,\n    step: '更新到 v8 的 Material',\n    action:\n      '在终端中运行 `cmd /C \"set \"NG_DISABLE_VERSION_CHECK=1\" && npx @angular/cli@8 update @angular/material@8\"`。',\n  },\n  {\n    possibleIn: 800,\n    necessaryAsOf: 900,\n    level: ApplicationComplexity.Basic,\n    material: true,\n    step: '深度导入',\n    action:\n      '不要直接从 `@angular/material` 导入，而是从特定组件进行深度导入。例如 `@angular/material/button`。`ng update` 将为你自动完成此操作。',\n  },\n  {\n    possibleIn: 800,\n    necessaryAsOf: 900,\n    level: ApplicationComplexity.Basic,\n    step: '新的 loadChildren',\n    action:\n      '对于通过路由器进行的惰性加载的模块，请确保你正在[使用动态导入](https://angular.io/guide/deprecations#loadchildren-string-syntax)。在 v9 中，通过字符串进行导入已被移除。`ng update` 应该会自动处理这个。在 [angular.io](https://angular.io/guide/deprecations#loadchildren-string-syntax) 上了解更多。',\n  },\n  {\n    possibleIn: 900,\n    necessaryAsOf: 900,\n    level: ApplicationComplexity.Advanced,\n    step: '平台废弃',\n    action:\n      '我们正在废弃对 `@angular/platform-webworker` 的支持，因为它与 CLI 不兼容。在 Web Worker 中运行 Angular 的渲染架构不符合开发者的需求。你仍然可以在 Angular 中使用 Web Worker。在我们的 [Web Worker 指南](https://v9.angular.io/guide/web-worker) 中了解更多。如果你有需要这方面的用例，请通过 devrel@angular.io 与我们联系！',\n  },\n  {\n    possibleIn: 900,\n    necessaryAsOf: 900,\n    level: ApplicationComplexity.Advanced,\n    step: 'node-sass',\n    action:\n      '我们已经从本地 Sass 编译器切换到 JavaScript 编译器。要切换回本地版本，请将其安装为 devDependency：`npm install node-sass --save-dev`。',\n  },\n  {\n    possibleIn: 900,\n    necessaryAsOf: 900,\n    level: ApplicationComplexity.Advanced,\n    step: 'schematics 异步',\n    action:\n      '如果你正在构建自己的 Schematics，它们之前*可能*是异步的。从 8.0 开始，所有的 Schematics 都将是异步的。',\n  },\n  {\n    possibleIn: 900,\n    necessaryAsOf: 900,\n    level: ApplicationComplexity.Basic,\n    step: 'node 10.13',\n    action:\n      '确保你正在使用 <a href=\"http://www.hostingadvice.com/how-to/update-node-js-latest-version/\" target=\"_blank\">Node 10.13 或更高版本</a>。',\n  },\n  {\n    possibleIn: 900,\n    necessaryAsOf: 900,\n    level: ApplicationComplexity.Basic,\n    windows: false,\n    step: '更新到 CLI v8 最新版本',\n    action:\n      '在你的工作空间目录中运行 `NG_DISABLE_VERSION_CHECK=1 npx @angular/cli@8 update @angular/core@8 @angular/cli@8`，以更新到最新的 8.x 版本的 `@angular/core` 和 `@angular/cli` 并提交这些更改。',\n  },\n  {\n    possibleIn: 900,\n    necessaryAsOf: 900,\n    level: ApplicationComplexity.Basic,\n    windows: true,\n    step: '更新到 CLI v8 最新版本',\n    action:\n      '在你的工作空间目录中运行 `cmd /C \"set \"NG_DISABLE_VERSION_CHECK=1\" && npx @angular/cli@8 update @angular/cli@8 @angular/core@8`，以更新到最新的 8.x 版本的 `@angular/core` 和 `@angular/cli` 并提交这些更改。',\n  },\n  {\n    possibleIn: 900,\n    necessaryAsOf: 900,\n    level: ApplicationComplexity.Medium,\n    step: '创建提交',\n    action:\n      '你可以选择向 [ng update](https://angular.io/cli/update) 命令传递 `--create-commits`（或 `-C`）标志，以每个独立迁移创建一个 git 提交。',\n  },\n  {\n    possibleIn: 900,\n    necessaryAsOf: 900,\n    level: ApplicationComplexity.Basic,\n    windows: false,\n    step: 'ng update v9',\n    action:\n      '运行 `NG_DISABLE_VERSION_CHECK=1 npx @angular/cli@9 update @angular/core@9 @angular/cli@9`，应该将你升级到 Angular 的 9 版本。',\n  },\n  {\n    possibleIn: 900,\n    necessaryAsOf: 900,\n    level: ApplicationComplexity.Basic,\n    windows: true,\n    step: 'ng update v9',\n    action:\n      '运行 `cmd /C \"set \"NG_DISABLE_VERSION_CHECK=1\" && npx @angular/cli@9 update @angular/cli@9 @angular/core@9\"`，应该将你升级到 Angular 的 9 版本。',\n  },\n  {\n    possibleIn: 900,\n    necessaryAsOf: 900,\n    level: ApplicationComplexity.Basic,\n    step: 'typescript 3.8',\n    action:\n      '你的项目现在已更新到 TypeScript 3.8，请阅读有关新编译器检查和可能需要修复代码中问题的错误的更多信息，可在 [TypeScript 3.7](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-7.html) 或 [TypeScript 3.8](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-8.html) 公告中了解更多。',\n  },\n  {\n    possibleIn: 900,\n    necessaryAsOf: 900,\n    level: ApplicationComplexity.Basic,\n    windows: false,\n    material: true,\n    step: '更新 @angular/material',\n    action: '运行 `NG_DISABLE_VERSION_CHECK=1 npx @angular/cli@9 update @angular/material@9`。',\n  },\n  {\n    possibleIn: 900,\n    necessaryAsOf: 900,\n    level: ApplicationComplexity.Basic,\n    windows: true,\n    material: true,\n    step: '更新 @angular/material',\n    action:\n      '运行 `cmd /C \"set \"NG_DISABLE_VERSION_CHECK=1\" && npx @angular/cli@9 update @angular/material@9\"`。',\n  },\n  {\n    possibleIn: 900,\n    necessaryAsOf: 900,\n    level: ApplicationComplexity.Advanced,\n    windows: false,\n    step: '更新 @nguniversal/hapi-engine',\n    action:\n      '如果你使用 Angular Universal，请运行 `NG_DISABLE_VERSION_CHECK=1 npx @angular/cli@9 update @nguniversal/hapi-engine@9` 或 `NG_DISABLE_VERSION_CHECK=1 npx @angular/cli@9 update @nguniversal/express-engine@9`，具体取决于你使用的引擎。如果你的任何第三方依赖项未更新其对等依赖项的 Angular 版本，则此步骤可能需要 `--force` 标志。',\n  },\n  {\n    possibleIn: 900,\n    necessaryAsOf: 900,\n    level: ApplicationComplexity.Advanced,\n    windows: true,\n    step: '更新 @nguniversal/hapi-engine',\n    action:\n      '如果你使用 Angular Universal，请运行 `cmd /C \"set \"NG_DISABLE_VERSION_CHECK=1\" && npx @angular/cli@9 update @nguniversal/hapi-engine@9\"` 或 `cmd /C \"set \"NG_DISABLE_VERSION_CHECK=1\" && npx @angular/cli@9 update @nguniversal/express-engine@9\"`，具体取决于你使用的引擎。如果你的任何第三方依赖项未更新其对等依赖项的 Angular 版本，则此步骤可能需要 `--force` 标志。',\n  },\n  {\n    possibleIn: 900,\n    necessaryAsOf: 900,\n    level: ApplicationComplexity.Basic,\n    step: '更新依赖项',\n    action:\n      '如果你的项目依赖于其他 Angular 库，我们建议你考虑更新到它们的最新版本。在某些情况下，此更新可能是必需的，以解决 API 不兼容性。查阅 `ng update` 或 `npm outdated` 以了解你过时的库。',\n  },\n  {\n    possibleIn: 900,\n    necessaryAsOf: 900,\n    level: ApplicationComplexity.Basic,\n    step: '更新 Ivy',\n    action:\n      '在升级到 9 版本期间，通过代码迁移必要地转换了你的项目，以从代码库中移除任何不兼容或已废弃的 API 调用。现在你可以查看这些更改，并查阅 [升级到 9 版本指南](https://v9.angular.io/guide/updating-to-version-9) 以了解更多详情。',\n  },\n  {\n    possibleIn: 900,\n    necessaryAsOf: 900,\n    level: ApplicationComplexity.Medium,\n    step: '更新样式',\n    action:\n      '以前，绑定的 CSS 样式和类是采用“最后一次更改获胜”的策略应用的，但现在遵循一个定义好的优先级。了解更多关于 [样式优先级](https://angular.io/guide/attribute-binding#styling-precedence)。',\n  },\n  {\n    possibleIn: 900,\n    necessaryAsOf: 900,\n    level: ApplicationComplexity.Advanced,\n    step: 'ModuleWithProviders',\n    action:\n      '如果你是库的作者，并且有一个返回 `ModuleWithProviders` 的方法（通常是通过名为 `forRoot()` 的方法），则需要指定泛型类型。了解更多 [angular.io](https://v9.angular.io/guide/deprecations#modulewithproviders-type-without-a-generic)',\n  },\n  {\n    possibleIn: 800,\n    necessaryAsOf: 900,\n    level: ApplicationComplexity.Advanced,\n    step: 'wtf',\n    action:\n      '在 Angular 8 中，支持 Web 追踪框架已废弃。你应该停止使用任何 `wtf*` API。为了进行性能追踪，我们建议使用 [浏览器性能工具](https://developers.google.com/web/tools/lighthouse/audits/user-timing)。',\n  },\n  {\n    possibleIn: 800,\n    necessaryAsOf: 900,\n    level: ApplicationComplexity.Medium,\n    step: 'es5 浏览器',\n    action:\n      '在你的 `angular.json` 中删除任何 `es5BrowserSupport` 标志，并将你的 `tsconfig.json` 中的 `target` 设置为 `es2015`。Angular 现在使用你的 browserslist 来确定是否需要 ES5 构建。`ng update` 将自动迁移你。',\n  },\n  {\n    possibleIn: 900,\n    necessaryAsOf: 900,\n    level: ApplicationComplexity.Medium,\n    step: 'ngForm 选择器',\n    action: '如果你使用 `ngForm` 元素选择器创建 Angular 表单，你应该改用 `ng-form`。',\n  },\n  {\n    possibleIn: 900,\n    necessaryAsOf: 900,\n    level: ApplicationComplexity.Advanced,\n    step: 'typings 编译',\n    action:\n      '我们已更新 `tsconfig.app.json` 以限制编译的文件。如果你依赖于其他文件被包含在编译中，比如一个 `typings.d.ts` 文件，你需要手动将其添加到编译中。',\n  },\n  {\n    possibleIn: 900,\n    necessaryAsOf: 1000,\n    level: ApplicationComplexity.Medium,\n    step: '调试',\n    action:\n      '随着 Angular 9，Ivy 现在是默认的渲染引擎，针对可能出现的任何兼容性问题，阅读 [Ivy 兼容性指南](https://v9.angular.io/guide/ivy-compatibility)。',\n  },\n  {\n    possibleIn: 900,\n    necessaryAsOf: 900,\n    level: ApplicationComplexity.Advanced,\n    step: 'express-universal-server',\n    action:\n      '如果你使用 Angular Universal 与 `@nguniversal/express-engine` 或 `@nguniversal/hapi-engine`，将会创建几个备份文件。其中一个是用于 `server.ts` 的。如果此文件与默认文件不同，你可能需要手动将一些更改从 `server.ts.bak` 复制到 `server.ts`。',\n  },\n  {\n    possibleIn: 900,\n    necessaryAsOf: 1000,\n    level: ApplicationComplexity.Basic,\n    step: 'ivy i18n',\n    action:\n      'Angular 9 引入了一个全局的 `$localize()` 函数，如果你依赖于 Angular 的国际化（i18n），则需要加载它。运行 `ng add @angular/localize` 来添加必要的包和代码修改。查阅 [$localize 全局导入迁移指南](https://v9.angular.io/guide/migration-localize) 以了解更多变化。',\n  },\n  {\n    possibleIn: 900,\n    necessaryAsOf: 1000,\n    level: ApplicationComplexity.Medium,\n    step: 'entryComponents',\n    action:\n      '在你的应用项目中，你可以删除 `entryComponents` NgModules 和任何使用 `ANALYZE_FOR_ENTRY_COMPONENTS` 的地方。它们在 Ivy 编译器和运行时中不再需要。如果构建的是一个将被 View Engine 应用程序消费的库，可能需要保留这些。',\n  },\n  {\n    possibleIn: 900,\n    necessaryAsOf: 1000,\n    level: ApplicationComplexity.Medium,\n    step: 'testbed-get',\n    action:\n      '如果你使用 `TestBed.get`，你应该改用 `TestBed.inject`。这个新方法具有相同的行为，但是类型安全。',\n  },\n  {\n    possibleIn: 900,\n    necessaryAsOf: 1000,\n    level: ApplicationComplexity.Medium,\n    step: '$localize',\n    action:\n      '如果你使用 [Angular 的国际化支持](http://angular.io/guide/i18n)，你将需要开始使用 `@angular/localize`。了解更多关于 [$localize 全局导入迁移](https://v9.angular.io/guide/migration-localize)。',\n  },\n  {\n    possibleIn: 1000,\n    necessaryAsOf: 1000,\n    level: ApplicationComplexity.Basic,\n    step: 'v10 NodeJS 12',\n    action:\n      '确保你正在使用 <a href=\"https://nodejs.org/dist/latest-v12.x/\" target=\"_blank\">Node 12 或更高版本</a>。',\n  },\n  {\n    possibleIn: 1000,\n    necessaryAsOf: 1000,\n    level: ApplicationComplexity.Basic,\n    step: 'ng update v10',\n    action:\n      '运行 `npx @angular/cli@10 update @angular/core@10 @angular/cli@10`，这将使你的 Angular 版本升级到 10。',\n  },\n  {\n    possibleIn: 1000,\n    necessaryAsOf: 1000,\n    level: ApplicationComplexity.Basic,\n    material: true,\n    step: '更新 @angular/material',\n    action: '运行 `npx @angular/cli@10 update @angular/material@10`。',\n  },\n  {\n    possibleIn: 1000,\n    necessaryAsOf: 1000,\n    level: ApplicationComplexity.Basic,\n    step: 'browserlist',\n    action: '新项目使用文件名 `.browserslistrc`，而不是 `browserslist`。`ng update` 将自动迁移你。',\n  },\n  {\n    possibleIn: 1000,\n    necessaryAsOf: 1000,\n    level: ApplicationComplexity.Medium,\n    step: 'v10-versions',\n    action:\n      'Angular 现在需要 `tslint` v6、`tslib` v2 和 [TypeScript 3.9](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-3-9.html)。`ng update` 将自动迁移你。',\n  },\n  {\n    possibleIn: 1000,\n    necessaryAsOf: 1000,\n    level: ApplicationComplexity.Advanced,\n    step: 'styleext',\n    action: '停止在你的 Angular schematics 中使用 `styleext` 或 `spec`。`ng update` 将自动迁移你。',\n  },\n  {\n    possibleIn: 900,\n    necessaryAsOf: 1000,\n    level: ApplicationComplexity.Medium,\n    step: 'classes-without-decorators',\n    action:\n      '在 10 版本中，不带有 Angular 装饰器的类不再受支持。[了解更多](https://v10.angular.io/guide/migration-undecorated-classes)。`ng update` 将自动迁移你。',\n  },\n  {\n    possibleIn: 900,\n    necessaryAsOf: 1000,\n    level: ApplicationComplexity.Medium,\n    step: 'injectable-definitions',\n    action:\n      '从 Angular 9 开始，对于 DI，@Injectable 装饰器的执行更加严格，不完整的提供程序定义的行为会有所不同。[了解更多](https://v9.angular.io/guide/migration-injectable)。`ng update` 将自动迁移你。',\n  },\n  {\n    possibleIn: 1000,\n    necessaryAsOf: 1000,\n    level: ApplicationComplexity.Advanced,\n    step: 'closure-jsdoc-comments',\n    action:\n      'Angular 的 NPM 包不再包含 jsdoc 注释，这在与闭包编译器的使用中是必需的（极其罕见）。此支持是实验性的，并且只在一些情况下起作用。很快将宣布替代推荐路径。',\n  },\n  {\n    possibleIn: 1000,\n    necessaryAsOf: 1000,\n    level: ApplicationComplexity.Medium,\n    step: 'forms-number-input',\n    action:\n      '如果你使用 Angular 表单，`number` 类型的输入不再监听 [change 事件](https://developer.mozilla.org/docs/Web/API/HTMLElement/change_event)（这些事件不一定会在每次更改值时触发），而是监听 [input 事件](https://developer.mozilla.org/docs/Web/API/HTMLElement/input_event)。',\n  },\n  {\n    possibleIn: 1000,\n    necessaryAsOf: 1000,\n    level: ApplicationComplexity.Medium,\n    step: 'forms-length-input',\n    action:\n      '对于 Angular 表单验证，`minLength` 和 `maxLength` 验证器现在验证表单控件的值是否具有数字长度属性，并且仅在这种情况下验证长度。',\n  },\n  {\n    possibleIn: 1000,\n    necessaryAsOf: 1000,\n    level: ApplicationComplexity.Medium,\n    step: 'esm5-bundles',\n    action:\n      'Angular 包格式已更新，删除了 `esm5` 和 `fesm5` 格式。这些不再分发在我们的 npm 包中。如果你不使用 CLI，你可能需要自行将 Angular 代码降级到 ES5。',\n  },\n  {\n    possibleIn: 1000,\n    necessaryAsOf: 1000,\n    level: ApplicationComplexity.Medium,\n    step: 'console-errors',\n    action:\n      '有关未知元素的警告现在记录为错误。这不会破坏你的应用程序，但可能会使期望 `console.error` 不记录任何内容的工具受到影响。',\n  },\n  {\n    possibleIn: 1000,\n    necessaryAsOf: 1000,\n    level: ApplicationComplexity.Advanced,\n    step: 'router-resolver-empty',\n    action:\n      '任何返回 `EMPTY` 的解析器将取消导航。如果你想要允许导航继续，你需要更新解析器以发出一些值（例如 `defaultIfEmpty(...)`、`of(...)` 等）。',\n  },\n  {\n    possibleIn: 1000,\n    necessaryAsOf: 1000,\n    level: ApplicationComplexity.Advanced,\n    step: 'sw-vary-headers',\n    action:\n      '如果你使用 Angular 服务工作器并依赖于带有 [Vary](https://developer.mozilla.org/docs/Web/HTTP/Headers/Vary) 标头的资源，这些标头现在被忽略，以避免在各个浏览器之间出现不可预测的行为。为了避免这种情况，[配置](https://angular.io/guide/service-worker-config) 你的服务工作器以避免缓存这些资源。',\n  },\n  {\n    possibleIn: 1000,\n    necessaryAsOf: 1000,\n    level: ApplicationComplexity.Medium,\n    step: 'expression-changed-after-checked-new',\n    action:\n      '当使用 `async` 管道时，你可能会看到之前未检测到的 `ExpressionChangedAfterItHasBeenChecked` 错误。以前的错误可能未被检测到，因为两个 `WrappedValues` 在检查目的上被认为是“相等的”，即使它们各自的未包装值不相等。在版本 10 中，`WrappedValue` 已被移除。',\n  },\n  {\n    possibleIn: 1000,\n    necessaryAsOf: 1000,\n    level: ApplicationComplexity.Advanced,\n    step: 'property-binding-change-detection',\n    action:\n      '如果你有一个属性绑定，例如 `[val]=(observable | async).someProperty`，如果 `someProperty` 的值与之前的发射值相同，这将不再触发变更检测。如果你依赖于此行为，要么手动订阅并根据需要调用 `markForCheck`，要么更新绑定以确保引用更改。',\n  },\n  {\n    possibleIn: 1000,\n    necessaryAsOf: 1000,\n    level: ApplicationComplexity.Advanced,\n    step: 'day-periods-crossing-midnight',\n    action:\n      '如果你使用 `formatDate()` 或 `DatePipe`，并且使用了任何 `b` 或 `B` 格式代码，逻辑已更新，使其匹配跨越午夜的一天时段内的时间，因此现在将渲染正确的输出，例如在英文环境中的 `night`。',\n  },\n  {\n    possibleIn: 1000,\n    necessaryAsOf: 1000,\n    level: ApplicationComplexity.Advanced,\n    step: 'urlmatcher-null',\n    action: '如果你使用 `UrlMatcher`，现在其类型反映了它可以始终返回 `null`。',\n  },\n  {\n    possibleIn: 1000,\n    necessaryAsOf: 1000,\n    level: ApplicationComplexity.Basic,\n    step: 'v10-more-details',\n    action:\n      '有关停用、自动迁移和更改的更多详细信息，请访问 [guide angular.io](https://v10.angular.io/guide/updating-to-version-10)',\n  },\n  {\n    possibleIn: 1020,\n    necessaryAsOf: 1020,\n    level: ApplicationComplexity.Medium,\n    step: 'universal-baseurl',\n    action:\n      '对于 Angular Universal 用户，如果你使用 `useAbsoluteUrl` 来设置 `platform-server`，现在还需要指定 `baseUrl`。',\n  },\n  {\n    possibleIn: 1100,\n    necessaryAsOf: 1100,\n    level: ApplicationComplexity.Basic,\n    step: 'v11 ng update',\n    action: '运行 `ng update @angular/core@11 @angular/cli@11` 将把你的 Angular 版本升级到 11。',\n  },\n  {\n    possibleIn: 1100,\n    necessaryAsOf: 1100,\n    level: ApplicationComplexity.Basic,\n    material: true,\n    step: 'update @angular/material',\n    action: '运行 `ng update @angular/material@11`。',\n  },\n  {\n    possibleIn: 1100,\n    necessaryAsOf: 1100,\n    level: ApplicationComplexity.Basic,\n    step: 'v11 versions',\n    action:\n      'Angular 现在需要 [TypeScript 4.0](https://devblogs.microsoft.com/typescript/announcing-typescript-4-0/)。`ng update` 将自动迁移你的项目。',\n  },\n  {\n    possibleIn: 1100,\n    necessaryAsOf: 1100,\n    level: ApplicationComplexity.Basic,\n    step: 'v11 browser support',\n    action:\n      '不再支持 IE9、IE10 和 IE 移动版。这在 [v10 更新](http://blog.angular.dev/version-10-of-angular-now-available-78960babd41#c357) 中已经宣布。',\n  },\n  {\n    possibleIn: 1100,\n    necessaryAsOf: 1100,\n    level: ApplicationComplexity.Medium,\n    step: 'webpack5 optin',\n    action:\n      '你现在可以选择使用 webpack 5，使用 Yarn 并将 `\"resolutions\": {\"webpack\": \"^5.0.0\"}` 添加到你的 `package.json`。',\n  },\n  {\n    possibleIn: 1100,\n    necessaryAsOf: 1100,\n    level: ApplicationComplexity.Medium,\n    step: 'ng new strict prompt',\n    action:\n      '当生成新项目时，你将被询问是否要启用严格模式。这将为 TypeScript 和 Angular 编译器配置更严格的类型检查，并默认应用更小的捆绑预算。你可以使用 `--strict=true` 或 `--strict=false` 来跳过提示。',\n  },\n  {\n    possibleIn: 1100,\n    necessaryAsOf: 1100,\n    level: ApplicationComplexity.Advanced,\n    step: 'v11 router relativeLinkResolution',\n    action:\n      '如果你使用路由器，`relativeLinkResolution` 的默认值从 `legacy` 改为 `corrected`。如果你的应用程序以前使用默认值而未在 `ExtraOptions` 中指定值，并且在从空路径路由的子路由导航时使用相对链接，你需要更新你的 `RouterModule` 配置，明确为 `relativeLinkResolution` 指定 `legacy`。参见 [文档](https://v11.angular.io/api/router/ExtraOptions#relativeLinkResolution) 以获取更多详细信息。',\n  },\n  {\n    possibleIn: 1100,\n    necessaryAsOf: 1100,\n    level: ApplicationComplexity.Advanced,\n    step: 'v11 router initialNavigation',\n    action:\n      '在 Angular 路由器中，v4 中已弃用的 `initialNavigation` 选项已被移除。如果你以前使用了 `enabled` 或 `true`，现在请选择 `enabledNonBlocking` 或 `enabledBlocking`。如果你以前使用了 `false` 或 `legacy_disabled`，现在使用 `disabled`。',\n  },\n  {\n    possibleIn: 1100,\n    necessaryAsOf: 1100,\n    level: ApplicationComplexity.Medium,\n    step: 'routerlink preserveQueryParams',\n    action:\n      '在 Angular 路由器的 `routerLink` 中，已删除了 `preserveQueryParams`，请使用 `queryParamsHandling=\"preserve\"`。',\n  },\n  {\n    possibleIn: 1100,\n    necessaryAsOf: 1100,\n    level: ApplicationComplexity.Advanced,\n    step: 'routerlink queryParams typing',\n    action:\n      '如果你正在访问 `routerLink` 的 `queryParams`、`fragment` 或 `queryParamsHandling` 值，你可能需要放宽类型以接受 `undefined` 和 `null`。',\n  },\n  {\n    possibleIn: 1100,\n    necessaryAsOf: 1100,\n    level: ApplicationComplexity.Advanced,\n    step: 'viewencapsulation native removed',\n    action:\n      '组件视图封装选项 `ViewEncapsulation.Native` 已被移除。请使用 `ViewEncapsulation.ShadowDom`。`ng update` 将自动迁移你。',\n  },\n  {\n    possibleIn: 1100,\n    necessaryAsOf: 1100,\n    level: ApplicationComplexity.Advanced,\n    step: 'ICU expressions typechecked',\n    action:\n      '如果你使用 i18n，在 International Components for Unicode (ICUs) 表达式中的表达式现在再次进行类型检查。如果在 ICU 中的表达式中发现错误，可能会导致编译失败。',\n  },\n  {\n    possibleIn: 1100,\n    necessaryAsOf: 1100,\n    level: ApplicationComplexity.Advanced,\n    step: 'forms validators asyncValidators typing',\n    action:\n      '在 `@angular/forms` 包中的指令构造函数中，预期的 `validators` 和 `asyncValidators` 参数的类型曾经是 `any[]`。现在这些参数已经被正确地类型化，因此如果你的代码依赖于表单指令构造函数类型，可能需要一些更新来提高类型安全性。',\n  },\n  {\n    possibleIn: 1100,\n    necessaryAsOf: 1100,\n    level: ApplicationComplexity.Advanced,\n    step: 'forms AbstractFormControl',\n    action:\n      '如果你使用 Angular Forms，`AbstractFormControl.parent` 的类型现在包括 null。`ng update` 将自动迁移你，但在一个不太可能的情况下，如果你的代码使用严格相等将父级与 undefined 进行比较，你需要改为使用 `=== null`，因为父级现在明确初始化为 `null`，而不是保留为 undefined。',\n  },\n  {\n    possibleIn: 1100,\n    necessaryAsOf: 1100,\n    level: ApplicationComplexity.Advanced,\n    step: 'platform-webworker',\n    action:\n      '很少使用的 `@angular/platform-webworker` 和 `@angular/platform-webworker-dynamic` 在 v8 中已被弃用并移除。在 web worker 中运行 Angular 的部分是一个从未对常见用例产生良好效果的实验。Angular 对 [Web Workers](https://angular.io/guide/web-worker) 仍然有很好的支持。',\n  },\n  {\n    possibleIn: 1100,\n    necessaryAsOf: 1100,\n    level: ApplicationComplexity.Advanced,\n    step: 'v11 slice pipe typing',\n    action: '现在 `slice` 管道对于未定义的输入值返回 null，这与大多数管道的行为一致。',\n  },\n  {\n    possibleIn: 1100,\n    necessaryAsOf: 1100,\n    level: ApplicationComplexity.Advanced,\n    step: 'v11 keyvalue typing',\n    action:\n      '修复了 `keyvalue` 管道，对于具有数字键的输入对象，结果类型将包含键的字符串表示形式。这已经是现实，代码已经更新以反映这一点。如果管道输出的使用方依赖于不正确的类型，请更新。请注意，这不会影响输入值为 `Map` 的用例，因此如果你需要保留 `number`，这是一种有效的方法。',\n  },\n  {\n    possibleIn: 1100,\n    necessaryAsOf: 1100,\n    level: ApplicationComplexity.Advanced,\n    step: 'v11 number pipe typing',\n    action: '数字管道（`decimal`、`percent`、`currency` 等）现在明确指定接受的类型。',\n  },\n  {\n    possibleIn: 1100,\n    necessaryAsOf: 1100,\n    level: ApplicationComplexity.Advanced,\n    step: 'v11 date pipe typing',\n    action: '日期管道现在明确指定接受的类型。',\n  },\n  {\n    possibleIn: 1100,\n    necessaryAsOf: 1100,\n    level: ApplicationComplexity.Advanced,\n    step: 'v11 datetime rounding',\n    action:\n      '当将带有毫秒分数的日期时间格式的字符串传递给 `DatePipe` 时，毫秒现在总是向下舍入，而不是舍入到最近的毫秒。大多数应用程序不会受到此更改的影响。如果这不是预期的行为，考虑在将字符串传递给 `DatePipe` 之前预处理毫秒部分以舍入。',\n  },\n  {\n    possibleIn: 1100,\n    necessaryAsOf: 1100,\n    level: ApplicationComplexity.Advanced,\n    step: 'v11 async pipe typing',\n    action:\n      '`async` 管道不再声称对于类型为 undefined 的输入返回 undefined。请注意，代码实际上对于未定义的输入返回 null。',\n  },\n  {\n    possibleIn: 1100,\n    necessaryAsOf: 1100,\n    level: ApplicationComplexity.Medium,\n    step: 'v11 case pipe update',\n    action:\n      '`uppercase` 和 `lowercase` 管道不再通过假值。它们现在将 `null` 和 `undefined` 都映射到 `null`，并在无效输入（`0`、`false`、`NaN`）时引发异常。这与其他 Angular 管道的行为相匹配。',\n  },\n  {\n    possibleIn: 1100,\n    necessaryAsOf: 1100,\n    level: ApplicationComplexity.Advanced,\n    step: 'v11 router NavigationExtras typing',\n    action:\n      '如果你使用带有 `NavigationExtras` 的路由器，新的类型允许传递类型为 `NavigationExtras` 的变量，但不允许对象字面量，因为它们只能指定已知属性。它们也不接受与 `Pick` 中的属性没有共同属性的类型。如果你受到此更改的影响，请仅指定在相应函数调用中实际使用的 NavigationExtras 中的属性，或在对象或变量上使用类型断言：`as NavigationExtras`。',\n  },\n  {\n    possibleIn: 1100,\n    necessaryAsOf: 1100,\n    level: ApplicationComplexity.Medium,\n    step: 'v11 TestBed.overrideProvider',\n    action:\n      '如果在 TestBed 初始化之后调用 `TestBed.overrideProvider`，则不再应用提供者覆盖。这种行为与其他覆盖方法（如 `TestBed.overrideDirective` 等）一致，但会引发错误以指示。之前在 TestBed.overrideProvider 函数中缺少此检查。如果看到此错误，请确保在 TestBed 初始化完成之前移动 `TestBed.overrideProvider` 调用。',\n  },\n  {\n    possibleIn: 1100,\n    necessaryAsOf: 1100,\n    level: ApplicationComplexity.Medium,\n    step: 'v11 router RouteReuseStrategy',\n    action:\n      '如果你使用路由器的 RouteReuseStrategy，参数顺序已更改。在调用 `RouteReuseStrategy#shouldReuseRoute` 时，以前在评估子路由时，会调用 `future` 和 `current` 参数的顺序已更改。如果你的 `RouteReuseStrategy` 专门依赖于将来或当前快照状态，可能需要更新 `shouldReuseRoute` 实现对 `future` 和 `current` `ActivateRouteSnapshots` 的使用。',\n  },\n  {\n    possibleIn: 1100,\n    necessaryAsOf: 1100,\n    level: ApplicationComplexity.Advanced,\n    step: 'v11 locale data readonly',\n    action:\n      '如果你使用区域设置数据数组，此 API 现在将返回只读数组。如果你对其进行了更改（例如调用 `sort()`、`push()`、`splice()` 等），那么你的代码将不再编译。如果你需要更改数组，则现在应该复制它（例如通过调用 `slice()`）并更改副本。',\n  },\n  {\n    possibleIn: 1100,\n    necessaryAsOf: 1100,\n    level: ApplicationComplexity.Advanced,\n    step: 'v11 CollectionChangeRecord',\n    action: '在变更检测中，已移除了 `CollectionChangeRecord`，请改用 `IterableChangeRecord`。',\n  },\n  {\n    possibleIn: 1100,\n    necessaryAsOf: 1100,\n    level: ApplicationComplexity.Medium,\n    step: 'v11 forms async validators',\n    action:\n      '如果你在 `FormControl`、`FormGroup` 或 `FormArray` 的类实例的初始化时间上使用异步验证器来定义，则在异步验证器完成后先前未发出状态更改事件。已更改为将状态事件发出到 `statusChanges` 可观察对象中。如果你的代码依赖于旧行为，你可以过滤/忽略此额外的状态更改事件。',\n  },\n  {\n    possibleIn: 1200,\n    necessaryAsOf: 1200,\n    level: ApplicationComplexity.Basic,\n    step: 'v12 ng update',\n    action: '运行 `ng update @angular/core@12 @angular/cli@12`，这将把你的 Angular 版本升级到 12。',\n  },\n  {\n    possibleIn: 1200,\n    necessaryAsOf: 1200,\n    level: ApplicationComplexity.Basic,\n    material: true,\n    step: 'update @angular/material',\n    action: '运行 `ng update @angular/material@12`。',\n  },\n  {\n    possibleIn: 1200,\n    necessaryAsOf: 1200,\n    level: ApplicationComplexity.Basic,\n    step: 'v12 versions',\n    action:\n      'Angular 现在要求 [TypeScript 4.2](https://devblogs.microsoft.com/typescript/announcing-typescript-4-2/)。`ng update` 将自动更新你的 TypeScript。',\n  },\n  {\n    possibleIn: 1200,\n    necessaryAsOf: 1200,\n    level: ApplicationComplexity.Basic,\n    step: 'v12 browser support',\n    action:\n      'IE11 支持已弃用。在 [IE11 删除 RFC](https://github.com/angular/angular/issues/41840) 中找到详细信息。',\n  },\n  {\n    possibleIn: 1200,\n    necessaryAsOf: 1200,\n    level: ApplicationComplexity.Basic,\n    step: 'v12 minimum  Node.js version',\n    action: '你不能再使用 Node.js 版本 10 或更早的版本。',\n  },\n  {\n    possibleIn: 1200,\n    necessaryAsOf: 1200,\n    level: ApplicationComplexity.Medium,\n    step: 'v12 `XhrFactory` relocation',\n    action: '将 `XhrFactory` 的导入从 `@angular/common/http` 改为 `@angular/common`。',\n  },\n  {\n    possibleIn: 1200,\n    necessaryAsOf: 1200,\n    level: ApplicationComplexity.Medium,\n    step: 'v12 i18n message ids',\n    action:\n      '如果你依赖于旧版 i18n 消息 ID，请使用 `localize-migrate` 工具[迁移至新版](https://angular.io/guide/migration-legacy-message-id)。',\n  },\n  {\n    possibleIn: 1200,\n    necessaryAsOf: 1200,\n    level: ApplicationComplexity.Medium,\n    step: 'v12 deprecates `emitDistinctChangesOnly`',\n    action:\n      '如果你正在使用 `emitDistinctChangesOnly` 来配置 `@ContentChildren` 和 `@ViewChildren` 查询，可能需要将其值更新为 `false` 以与其先前行为对齐。在 v12 中，`emitDistinctChangesOnly` 的默认值为 `true`，在将来的版本中，我们将删除此配置选项，以防止触发不必要的更改。',\n  },\n  {\n    possibleIn: 1200,\n    necessaryAsOf: 1200,\n    level: ApplicationComplexity.Medium,\n    step: 'v12 prod by default',\n    action:\n      '你可以运行可选的迁移以将默认启用生产构建 `ng update @angular/cli@12 --migrate-only production-by-default`。',\n  },\n  {\n    possibleIn: 1200,\n    necessaryAsOf: 1200,\n    level: ApplicationComplexity.Advanced,\n    step: 'v12 min and max form attributes',\n    action:\n      '如果你使用 Angular 表单，在 `<input type=\"number\">` 上使用 `min` 和 `max` 属性现在将触发验证逻辑。',\n  },\n  {\n    possibleIn: 1200,\n    necessaryAsOf: 1200,\n    level: ApplicationComplexity.Advanced,\n    step: 'v12 `emitEvent` in `FormArray` and `FormGroup`',\n    action:\n      '如果你的应用程序具有自定义类，它们扩展了 `FormArray` 或 `FormGroup` 类，并覆盖了上述方法，则可能需要更新你的实现。',\n  },\n  {\n    possibleIn: 1200,\n    necessaryAsOf: 1200,\n    level: ApplicationComplexity.Advanced,\n    step: 'v12 zone.js minimum version',\n    action: '将 zone.js 更新到版本 0.11.4。`ng update` 将自动更新此依赖项。',\n  },\n  {\n    possibleIn: 1200,\n    necessaryAsOf: 1200,\n    level: ApplicationComplexity.Advanced,\n    step: 'v12 `HttpParams` method params update',\n    action: '如果你扩展了 `HttpParams` 类，你可能需要更新其方法的签名以反映参数类型的更改。',\n  },\n  {\n    possibleIn: 1200,\n    necessaryAsOf: 1200,\n    level: ApplicationComplexity.Advanced,\n    step: 'v12 `routerLinkActiveOptions`',\n    action:\n      '`RouterLinkActive` 的 `routerLinkActiveOptions` 属性现在具有更具体的类型。你可能需要更新访问此属性的代码以与更改保持一致。',\n  },\n  {\n    possibleIn: 1200,\n    necessaryAsOf: 1200,\n    level: ApplicationComplexity.Advanced,\n    step: 'v12 `APP_INITIALIZER` callback types',\n    action:\n      '初始化回调现在具有更具体的返回类型，如果你通过 `Injector.get` 或 `TestBed.inject` 获取 `APP_INITIALIZER` 实例，则可能需要更新你的代码。',\n  },\n  {\n    possibleIn: 1200,\n    necessaryAsOf: 1200,\n    level: ApplicationComplexity.Advanced,\n    step: 'v12 fragment typings',\n    action: '路由器片段现在可能是 `null`。添加 `null` 检查以避免 TypeScript 产生类型错误。',\n  },\n  {\n    possibleIn: 1200,\n    necessaryAsOf: 1200,\n    level: ApplicationComplexity.Advanced,\n    step: 'v12 `ng.getDirectives`',\n    action: '确保不依赖于 `ng.getDirectives` 如果找不到与特定 DOM 节点相关联的指令，则引发错误。',\n  },\n  {\n    possibleIn: 1200,\n    necessaryAsOf: 1200,\n    level: ApplicationComplexity.Advanced,\n    step: 'v12 `optimization.styles.inlineCritical`',\n    action:\n      '检查你的 angular.json 文件中的 `optimization.styles.inlineCritical` 选项。现在默认为 `true`。请记住，整个 `optimization` 选项可以设置为布尔值，这将将所有子选项设置为默认值。',\n  },\n\n  {\n    possibleIn: 1300,\n    necessaryAsOf: 1300,\n    level: ApplicationComplexity.Basic,\n    step: 'v13 ng update',\n    action: '运行 `ng update @angular/core@13 @angular/cli@13` 将你的 Angular 版本更新至 13。',\n  },\n  {\n    possibleIn: 1300,\n    necessaryAsOf: 1300,\n    level: ApplicationComplexity.Basic,\n    material: true,\n    step: 'update @angular/material',\n    action: '运行 `ng update @angular/material@13`。',\n  },\n  {\n    possibleIn: 1300,\n    necessaryAsOf: 1300,\n    level: ApplicationComplexity.Basic,\n    step: 'TypeScript 4.4',\n    action:\n      'Angular 现在使用 TypeScript 4.4，请阅读有关任何潜在变更的更多信息：[TypeScript 4.4 发布说明](https://www.typescriptlang.org/docs/handbook/release-notes/typescript-4-4.html)',\n  },\n  {\n    possibleIn: 1300,\n    necessaryAsOf: 1300,\n    level: ApplicationComplexity.Basic,\n    step: 'v13 node',\n    action:\n      '确保你使用的是 <a href=\"http://www.hostingadvice.com/how-to/update-node-js-latest-version/\" target=\"_blank\">Node 12.20.0 或更高版本</a>。',\n  },\n  {\n    possibleIn: 1300,\n    necessaryAsOf: 1300,\n    level: ApplicationComplexity.Medium,\n    step: 'v13 routerLink',\n    action:\n      '现在可以通过传递 `undefined` 和 `null` 来禁用 `routerLink` 的导航。之前，`routerLink` 指令接受这两个值等同于空字符串。',\n  },\n  {\n    possibleIn: 1300,\n    necessaryAsOf: 1300,\n    level: ApplicationComplexity.Medium,\n    step: 'v13 router loadChildren',\n    action:\n      '不能再通过将字符串值设置为 `loadChildren` 来指定惰性加载的路由。确保切换到动态 ESM 导入语句。',\n  },\n  {\n    possibleIn: 1300,\n    necessaryAsOf: 1300,\n    level: ApplicationComplexity.Medium,\n    step: 'v13 service worker activated',\n    action:\n      '`SwUpdate` 的 `activated` 可观察对象现已弃用。要检查服务工作器的激活状态，请改用 `activatedUpdate` 方法。',\n  },\n  {\n    possibleIn: 1300,\n    necessaryAsOf: 1300,\n    level: ApplicationComplexity.Medium,\n    step: 'v13 service worker available',\n    action:\n      '`SwUpdate` 的 `available` 可观察对象现已弃用。要获取相同的信息，请使用 `versionUpdates` 并仅过滤 `VersionReadyEvent` 事件。',\n  },\n  {\n    possibleIn: 1300,\n    necessaryAsOf: 1300,\n    level: ApplicationComplexity.Medium,\n    step: 'v13 renderModuleFactory',\n    action:\n      '`@angular/platform-server` 中的 `renderModuleFactory` 不再与 Ivy 一起使用。改用 `renderModule`。',\n  },\n  {\n    possibleIn: 1300,\n    necessaryAsOf: 1300,\n    level: ApplicationComplexity.Advanced,\n    step: 'v13 forms status',\n    action:\n      '我们将 `AbstractControl.status` 的类型缩小为 `FormControlStatus`，并将 `AbstractControl.status` 的类型缩小为 `Observable<FormControlStatus>`。 `FormControlStatus` 是表单控件的所有可能状态字符串的联合。',\n  },\n  {\n    possibleIn: 1300,\n    necessaryAsOf: 1300,\n    level: ApplicationComplexity.Advanced,\n    step: 'v13 router serializer',\n    action:\n      '现在，URL 序列化程序遵守 URI 规范，会考虑查询参数中的问号。例如，`/path?q=hello?&q2=2` 现在将解析为 `{ q: `hello?`, q2: 2 }`。',\n  },\n  {\n    possibleIn: 1300,\n    necessaryAsOf: 1300,\n    level: ApplicationComplexity.Advanced,\n    step: 'v13 host binding',\n    action:\n      \"`href` 现在是属性绑定。这意味着 `DebugElement.properties['href']` 现在返回原生元素返回的 `href` 值，而不是 `routerLink` 的 `href` 属性的内部值。\",\n  },\n  {\n    possibleIn: 1300,\n    necessaryAsOf: 1300,\n    level: ApplicationComplexity.Advanced,\n    step: 'v13 spy location',\n    action:\n      '`SpyLocation` 在调用 `location.go` 时不再触发 `popstate` 事件。此外，`simulateHashChange` 现在触发 `haschange` 和 `popstate`。依赖于 `location.go` 的测试现在可能需要使用 `simulateHashChange` 来捕获 `popstate`。',\n  },\n  {\n    possibleIn: 1300,\n    necessaryAsOf: 1300,\n    level: ApplicationComplexity.Advanced,\n    ngUpgrade: true,\n    step: 'v13 router URL replacement',\n    action:\n      '当新导航取消正在进行的导航时，路由器将不再替换浏览器 URL。依赖于 Angular 路由器处理的初始导航上存在 `navigationId` 的混合应用程序应该订阅 `NavigationCancel` 事件，并执行 `location.replaceState` 以将 `navigationId` 添加到 `Router` 状态中。此外，断言 `SpyLocation` 上的 `urlChanges` 的测试可能需要调整以考虑不再触发的 `replaceState`。',\n  },\n  {\n    possibleIn: 1300,\n    necessaryAsOf: 1300,\n    level: ApplicationComplexity.Advanced,\n    step: 'v13 removed symbols',\n    action:\n      '路由器包不再导出 `SpyNgModuleFactoryLoader` 和 `DeprecatedLoadChildren`。如果使用了它们，请确保删除其对应的导入语句。',\n  },\n  {\n    possibleIn: 1400,\n    necessaryAsOf: 1400,\n    level: ApplicationComplexity.Basic,\n    step: 'v14 ng update',\n    action: '运行 `ng update @angular/core@14 @angular/cli@14` 将你的 Angular 版本更新至 14。',\n  },\n  {\n    possibleIn: 1400,\n    necessaryAsOf: 1400,\n    level: ApplicationComplexity.Basic,\n    material: true,\n    step: 'update @angular/material',\n    action: '运行 `ng update @angular/material@14`。',\n  },\n  {\n    possibleIn: 1400,\n    necessaryAsOf: 1400,\n    level: ApplicationComplexity.Basic,\n    step: 'TypeScript 4.6',\n    action:\n      'Angular 现在使用 TypeScript 4.6，请阅读有关任何潜在变更的更多信息：[TypeScript 4.6 发布公告](https://devblogs.microsoft.com/typescript/announcing-typescript-4-6/)',\n  },\n  {\n    possibleIn: 1400,\n    necessaryAsOf: 1400,\n    level: ApplicationComplexity.Basic,\n    step: 'v14 node',\n    action:\n      '确保你使用的是 <a href=\"http://www.hostingadvice.com/how-to/update-node-js-latest-version/\" target=\"_blank\">Node 14.15.0 或更高版本</a>。',\n  },\n  {\n    possibleIn: 1400,\n    necessaryAsOf: 1400,\n    level: ApplicationComplexity.Medium,\n    step: 'v14 strict forms',\n    action:\n      '表单模型现在需要一个泛型类型参数。你可以选择使用表单模型类的不带类型的版本进行渐进式迁移。',\n  },\n  {\n    possibleIn: 1400,\n    necessaryAsOf: 1400,\n    level: ApplicationComplexity.Medium,\n    step: 'v14 aotSummaries',\n    action: '从 `TestBed` 中删除 `aotSummaries`，因为 Angular 不再在 Ivy 中需要它们。',\n  },\n  {\n    possibleIn: 1400,\n    necessaryAsOf: 1400,\n    level: ApplicationComplexity.Medium,\n    material: true,\n    step: 'v14 MatVertical and Horizontal Stepper',\n    action:\n      '如果你正在使用 `MatVerticalStepper` 或 `MatHorizontalStepper`，请确保切换到 `MatStepper`。',\n  },\n  {\n    possibleIn: 1400,\n    necessaryAsOf: 1400,\n    level: ApplicationComplexity.Medium,\n    step: 'v14 JSONP',\n    action:\n      '从 JSONP 请求中删除头部。JSONP 不支持头部，如果指定了头部，HTTP 模块现在将抛出错误而不是忽略它们。',\n  },\n  {\n    possibleIn: 1400,\n    necessaryAsOf: 1400,\n    level: ApplicationComplexity.Medium,\n    step: 'v14 resolvers',\n    action:\n      '解析器现在将接收到的 observable 的第一个发射值，并在此之后进行导航，以更好地与其他守卫保持一致，而不是取最后发射的值。',\n  },\n  {\n    possibleIn: 1400,\n    necessaryAsOf: 1400,\n    level: ApplicationComplexity.Advanced,\n    material: true,\n    step: 'v14 deprecate protractor entry',\n    action: '已移除废弃的 `angular/cdk/testing/protractor` 入口点。',\n  },\n  {\n    possibleIn: 1400,\n    necessaryAsOf: 1400,\n    level: ApplicationComplexity.Advanced,\n    material: true,\n    step: 'v14 chipInput',\n    action: '确保指定 `MatChipInputEvent` 的 `chipInput`，因为现在它是必需的。',\n  },\n  {\n    possibleIn: 1400,\n    necessaryAsOf: 1400,\n    level: ApplicationComplexity.Advanced,\n    material: true,\n    step: 'v14 mixinErrorState',\n    action:\n      '在使用 `mixinErrorState` 的抽象类中，你需要实现 `stateChanges` 类成员，因为 mixin 不再提供它。',\n  },\n  {\n    possibleIn: 1400,\n    necessaryAsOf: 1400,\n    level: ApplicationComplexity.Advanced,\n    material: true,\n    step: 'v14 CdkStepper orientation',\n    action: '使用 `CdkStepper.orientation`，而不是 `CdkStepper._orientation`。',\n  },\n  {\n    possibleIn: 1400,\n    necessaryAsOf: 1400,\n    level: ApplicationComplexity.Advanced,\n    material: true,\n    step: 'v14 CdkStepper and MatStepper',\n    action:\n      '如果你在构造函数中扩展或使用 `CdkStepper` 或 `MatStepper`，则不再需要传递 `_document` 参数，因为它现在已被移除。',\n  },\n  {\n    possibleIn: 1400,\n    necessaryAsOf: 1400,\n    level: ApplicationComplexity.Advanced,\n    material: true,\n    step: 'v14 mat-list-item-avatar',\n    action: '将 `mat-list-item-avatar` CSS 类重命名为 `mat-list-item-with-avatar`。',\n  },\n  {\n    possibleIn: 1400,\n    necessaryAsOf: 1400,\n    level: ApplicationComplexity.Advanced,\n    material: true,\n    step: 'v14 MatSelectionListChange.option',\n    action: '使用 `MatSelectionListChange.options`，而不是 `MatSelectionListChange.option`。',\n  },\n  {\n    possibleIn: 1400,\n    necessaryAsOf: 1400,\n    level: ApplicationComplexity.Advanced,\n    material: true,\n    step: 'v14 getHarnessLoaderForContent',\n    action:\n      '使用 `getChildLoader(MatListItemSection.CONTENT)`，而不是 `getHarnessLoaderForContent`。',\n  },\n  {\n    possibleIn: 1400,\n    necessaryAsOf: 1400,\n    level: ApplicationComplexity.Advanced,\n    material: true,\n    step: 'v14 MatSelectionList',\n    action:\n      '如果你正在使用 `MatSelectionList`，请确保在其构造函数中传递 `_focusMonitor`，因为现在它是必需的。此外，这个类不再具有 `tabIndex` 属性和 `tabIndex` 构造函数参数。',\n  },\n  {\n    possibleIn: 1400,\n    necessaryAsOf: 1400,\n    level: ApplicationComplexity.Advanced,\n    step: 'v14 initialNavigation',\n    action: \"将 `initialNavigation: 'enabled'` 更新为 `initialNavigation: 'enabledBlocking'`。\",\n  },\n  {\n    possibleIn: 1400,\n    necessaryAsOf: 1400,\n    level: ApplicationComplexity.Advanced,\n    step: 'v14 Route.pathMatch',\n    action:\n      '如果你正在定义带有 `pathMatch` 的路由，可能需要将其显式转换为 `Route` 或 `Routes`。`Route.pathMatch` 不再兼容 `string` 类型。',\n  },\n  {\n    possibleIn: 1400,\n    necessaryAsOf: 1400,\n    level: ApplicationComplexity.Advanced,\n    step: 'v14 stricter LoadChildrenCallback',\n    action:\n      '`LoadChildrenCallback` 返回的 Promise 现在具有更严格的类型参数 `Type<any>|NgModuleFactory<any>`，而不是 `any`。',\n  },\n  {\n    possibleIn: 1400,\n    necessaryAsOf: 1400,\n    level: ApplicationComplexity.Advanced,\n    step: 'v14 router scheduling',\n    action: '路由器不再在 `setTimeout` 内安排重定向导航。确保你的测试不依赖于这种行为。',\n  },\n  {\n    possibleIn: 1400,\n    necessaryAsOf: 1400,\n    level: ApplicationComplexity.Advanced,\n    step: 'v14 LocationStrategy',\n    action: '现在实现 `LocationStrategy` 接口需要定义 `getState()`。',\n  },\n  {\n    possibleIn: 1400,\n    necessaryAsOf: 1400,\n    level: ApplicationComplexity.Advanced,\n    step: 'v14 http queries',\n    action: '发送查询时不再需要对 `+` 进行处理，因为 `+` 不再发送空格。',\n  },\n  {\n    possibleIn: 1400,\n    necessaryAsOf: 1400,\n    level: ApplicationComplexity.Advanced,\n    step: 'v14 AnimationDriver.getParentElement',\n    action: '现在实现 `AnimationDriver` 需要 `getParentElement` 方法。',\n  },\n  {\n    possibleIn: 1400,\n    necessaryAsOf: 1400,\n    level: ApplicationComplexity.Advanced,\n    step: 'v14 invalid config',\n    action: '懒加载模块的无效路由配置现在会引发错误，而不是被忽略。',\n  },\n  {\n    possibleIn: 1400,\n    necessaryAsOf: 1400,\n    level: ApplicationComplexity.Advanced,\n    step: 'v14 router resolver',\n    action:\n      '从 `RouterOutletContract.activateWith` 函数中移除 `resolver`，以及从 `OutletContext` 类中移除 `resolver`，因为不再需要工厂解析器。',\n  },\n  {\n    possibleIn: 1400,\n    necessaryAsOf: 1400,\n    level: ApplicationComplexity.Advanced,\n    step: 'v14 initialUrl',\n    action: '`Router.initialUrl` 只接受 `UrlTree`，以防止通过分配 `string` 值来误用 API。',\n  },\n  {\n    possibleIn: 1500,\n    necessaryAsOf: 1500,\n    level: ApplicationComplexity.Medium,\n    step: 'v15 base-decorators',\n    action:\n      '确保在具有继承构造函数和使用依赖注入的子类中使用基类中的装饰器。这样的基类应该用 `@Injectable` 或 `@Directive` 装饰，否则编译器会返回错误。<a href=\"https://v15.angular.io/guide/update-to-version-15#v15-bc-05\" title=\"有关此更改的更多信息\">继续阅读</a>',\n  },\n  {\n    possibleIn: 1500,\n    necessaryAsOf: 1500,\n    level: ApplicationComplexity.Medium,\n    step: 'v15 setDisabledState',\n    action:\n      '在 v15 中，当附加 `ControlValueAccessor` 时，始终调用 `setDisabledState`。要退出此行为，使用 `FormsModule.withConfig` 或 `ReactiveFormsModule.withConfig`。<a href=\"https://v15.angular.io/guide/update-to-version-15#v15-bc-06\" title=\"有关此更改的更多信息\">继续阅读</a>',\n  },\n  {\n    possibleIn: 1500,\n    necessaryAsOf: 1500,\n    level: ApplicationComplexity.Advanced,\n    step: 'v15 canParse',\n    action:\n      '使用 `canParse` 的应用程序应该改为使用 `@angular/localize/tools` 中的 `analyze`。在 v15 中，从 `@angular/localize/tools` 的所有翻译解析器中删除了 `canParse` 方法。<a href=\"https://v15.angular.io/guide/update-to-version-15#v15-bc-07\" title=\"有关此更改的更多信息\">继续阅读</a>',\n  },\n  {\n    possibleIn: 1500,\n    necessaryAsOf: 1500,\n    level: ApplicationComplexity.Basic,\n    step: 'v15 ActivatedRoutSnapshot',\n    action:\n      '确保所有 `ActivatedRouteSnapshot` 对象都有 `title` 属性。在 v15 中，`title` 属性是 `ActivatedRouteSnapshot` 的必需属性。<a href=\"https://v15.angular.io/guide/update-to-version-15#v15-bc-08\" title=\"有关此更改的更多信息\">继续阅读</a>',\n  },\n  {\n    possibleIn: 1500,\n    necessaryAsOf: 1500,\n    level: ApplicationComplexity.Advanced,\n    step: 'v15 RouterOutlet',\n    action:\n      '如果你的 `RouterOutlet` 测试出现问题，请确保它们不依赖于与变更检测相关的相应组件的实例化顺序。在 v15 中，`RouterOutlet` 在变更检测之后实例化组件。<a href=\"https://v15.angular.io/guide/update-to-version-15#v15-bc-09\" title=\"有关此更改的更多信息\">继续阅读</a>',\n  },\n  {\n    possibleIn: 1500,\n    necessaryAsOf: 1500,\n    level: ApplicationComplexity.Basic,\n    step: 'v15 relativeLinkResolution',\n    action:\n      '在 v15 中，`relativeLinkResolution` 在路由器中不可配置。它用于退出先前的错误修复，现在已成为标准。<a href=\"https://v15.angular.io/guide/update-to-version-15#v15-bc-10\" title=\"有关此更改的更多信息\">继续阅读</a>',\n  },\n  {\n    possibleIn: 1500,\n    necessaryAsOf: 1500,\n    level: ApplicationComplexity.Medium,\n    step: 'v15 DATE_PIPE_DEFAULT_OPTIONS',\n    action:\n      '将 `DATE_PIPE_DEFAULT_TIMEZONE` 令牌的实例更改为使用 `DATE_PIPE_DEFAULT_OPTIONS` 配置时区。在 v15 中，`DATE_PIPE_DEFAULT_TIMEZONE` 令牌已过时。<a href=\"https://v15.angular.io/guide/update-to-version-15#v15-dp-01\" title=\"有关此更改的更多信息\">继续阅读</a>',\n  },\n  {\n    possibleIn: 1500,\n    necessaryAsOf: 1500,\n    level: ApplicationComplexity.Medium,\n    step: 'v15 iframe',\n    action:\n      \"现有的 `<iframe>` 实例可能已经应用了安全敏感属性，作为属性或属性绑定。这些安全敏感属性可能出现在模板中或指令的宿主绑定中。这些情况需要更新，以确保符合对 `<iframe>` 绑定的新和更严格的规则。<a href='https://v15.angular.io/errors/NG0910' title='错误页面的链接'>查看更多信息</a>\",\n  },\n  {\n    possibleIn: 1500,\n    necessaryAsOf: 1500,\n    level: ApplicationComplexity.Medium,\n    step: 'v15 Injector.get',\n    action:\n      '更新使用 `InjectFlags` 参数的 `Injector.get()` 的实例，以使用 `InjectOptions` 参数。在 v15 中，`Injector.get()` 的 `InjectFlags` 参数已过时。<a href=\"https://v15.angular.io/guide/update-to-version-15#v15-dp-02\" title=\"有关此更改的更多信息\">继续阅读</a>',\n  },\n  {\n    possibleIn: 1500,\n    necessaryAsOf: 1500,\n    level: ApplicationComplexity.Basic,\n    step: 'v15 TestBed.inject',\n    action:\n      '更新使用 `InjectFlags` 参数的 `TestBed.inject()` 的实例，以使用 `InjectOptions` 参数。在 v15 中，`TestBed.inject()` 的 `InjectFlags` 参数已过时。<a href=\"https://v15.angular.io/guide/update-to-version-15#v15-dp-01\" title=\"有关此更改的更多信息\">继续阅读</a>',\n  },\n  {\n    possibleIn: 1500,\n    necessaryAsOf: 1500,\n    level: ApplicationComplexity.Medium,\n    step: 'v15 ngModule in providedIn',\n    action:\n      '在 v15 中，对 `@Injectable` 和 `InjectionToken` 使用 `providedIn: ngModule` 已过时。<a href=\"https://v15.angular.io/guide/update-to-version-15#v15-dp-04\" title=\"有关此更改的更多信息\">继续阅读</a>',\n  },\n  {\n    possibleIn: 1500,\n    necessaryAsOf: 1500,\n    level: ApplicationComplexity.Basic,\n    step: 'v15 providedIn any',\n    action:\n      '在 v15 中，对 `@Injectable` 或 `InjectionToken` 使用 `providedIn: \\'any\\'` 已过时。<a href=\"https://v15.angular.io/guide/update-to-version-15#v15-dp-05\" title=\"有关此更改的更多信息\">继续阅读</a>',\n  },\n  {\n    possibleIn: 1500,\n    necessaryAsOf: 1500,\n    level: ApplicationComplexity.Medium,\n    step: 'v15 RouterLinkWithHref',\n    action:\n      '更新 `RouterLinkWithHref` 指令的实例以使用 `RouterLink` 指令。`RouterLinkWithHref` 指令在 v15 中已过时。<a href=\"https://v15.angular.io/guide/update-to-version-15#v15-dp-06\" title=\"有关此更改的更多信息\">继续阅读</a>',\n  },\n  {\n    possibleIn: 1500,\n    necessaryAsOf: 1500,\n    level: ApplicationComplexity.Basic,\n    material: true,\n    step: 'v15 mat refactor',\n    action:\n      '在 Angular Material v15 中，许多组件已被重构为基于官方 Material Design Components for Web (MDC)。这个变化影响了许多组件的 DOM 和 CSS 类。<a href=\"https://rc.material.angular.dev/guide/mdc-migration\" title=\"有关此更改的更多信息\">继续阅读</a>',\n  },\n  {\n    possibleIn: 1500,\n    necessaryAsOf: 1500,\n    level: ApplicationComplexity.Basic,\n    step: 'v15 visual review',\n    action: '在将应用程序更新到 v15 后，通过视觉审查应用程序及其交互，确保一切正常运行。',\n  },\n  {\n    possibleIn: 1600,\n    necessaryAsOf: 1600,\n    level: ApplicationComplexity.Basic,\n    step: 'v16 node support',\n    action:\n      '确保在升级应用程序之前使用受支持的 node.js 版本。Angular v16 支持 node.js 版本：v16 和 v18。',\n  },\n  {\n    possibleIn: 1600,\n    necessaryAsOf: 1600,\n    level: ApplicationComplexity.Basic,\n    step: 'v16 ts support',\n    action:\n      '确保在升级应用程序之前使用受支持的 TypeScript 版本。Angular v16 支持 TypeScript 版本 4.9.3 或更高版本。',\n  },\n  {\n    possibleIn: 1600,\n    necessaryAsOf: 1600,\n    level: ApplicationComplexity.Basic,\n    step: 'v16 ng update',\n    action:\n      '在应用程序的项目目录中，运行 `ng update @angular/core@16 @angular/cli@16`，将应用程序更新到 Angular v16。',\n  },\n  {\n    possibleIn: 1600,\n    necessaryAsOf: 1600,\n    level: ApplicationComplexity.Basic,\n    material: true,\n    step: 'update @angular/material',\n    action: '运行 `ng update @angular/material@16`。',\n  },\n  {\n    possibleIn: 1600,\n    necessaryAsOf: 1600,\n    level: ApplicationComplexity.Basic,\n    step: 'v16 zone.js support',\n    action:\n      '在升级应用程序之前，请确保使用受支持的 Zone.js 版本。Angular v16 支持 Zone.js 版本 0.13.x 或更高版本。',\n  },\n  {\n    possibleIn: 1600,\n    necessaryAsOf: 1600,\n    level: ApplicationComplexity.Advanced,\n    step: 'v16 RouterEvent',\n    action:\n      'Event 联合体不再包含 `RouterEvent`，这意味着如果你正在使用 Event 类型，则可能必须将类型定义从 `(e: Event)` 更改为 `(e: Event|RouterEvent)`',\n  },\n  {\n    possibleIn: 1600,\n    necessaryAsOf: 1600,\n    level: ApplicationComplexity.Advanced,\n    step: 'v16 routerEvent prop type',\n    action: '除了 `NavigationEnd`，`routerEvent` 属性现在还接受类型 `NavigationSkipped`',\n  },\n  {\n    possibleIn: 1600,\n    necessaryAsOf: 1600,\n    level: ApplicationComplexity.Advanced,\n    step: 'v16 RendererType2',\n    action: '仅将扁平数组传递给 `RendererType2.styles`，因为它不再接受嵌套数组',\n  },\n  {\n    possibleIn: 1600,\n    necessaryAsOf: 1600,\n    level: ApplicationComplexity.Medium,\n    step: 'v16 BrowserPlatformLocation',\n    action:\n      '你可能需要更新使用 `BrowserPlatformLocation` 的测试，因为 `MockPlatformLocation` 现在默认在测试中提供。[继续阅读](https://github.com/angular/angular/blob/main/CHANGELOG.md#common-9)',\n  },\n  {\n    possibleIn: 1600,\n    necessaryAsOf: 1600,\n    level: ApplicationComplexity.Basic,\n    step: 'v16 ngcc',\n    action:\n      '由于在 v16 中删除了 Angular Compatibility Compiler (ngcc)，因此 v16 及更高版本的项目不再支持 View Engine 库。',\n  },\n  {\n    possibleIn: 1600,\n    necessaryAsOf: 1600,\n    level: ApplicationComplexity.Medium,\n    step: 'v16 createUrlTree',\n    action:\n      '在 `Router.createUrlTree` 中的错误修复后，你可能需要调整模拟 `ActivatedRoute` 的测试。[继续阅读](https://github.com/angular/angular/blob/main/CHANGELOG.md#1600-2023-05-03)',\n  },\n  {\n    possibleIn: 1600,\n    necessaryAsOf: 1600,\n    level: ApplicationComplexity.Medium,\n    step: 'v16 ApplicationConfig imports',\n    action: '将 `ApplicationConfig` 的导入更改为来自 `@angular/core`。',\n  },\n  {\n    possibleIn: 1600,\n    necessaryAsOf: 1600,\n    level: ApplicationComplexity.Advanced,\n    step: 'v16 renderModule',\n    action: '修改代码以使用 `renderModule` 而不是 `renderModuleFactory`，因为后者已被删除。',\n  },\n  {\n    possibleIn: 1600,\n    necessaryAsOf: 1600,\n    level: ApplicationComplexity.Medium,\n    step: 'v16 XhrFactory',\n    action:\n      '修改代码，使用 `@angular/common` 中的 `XhrFactory` 而不是来自 `@angular/common/http` 的 `XhrFactory`。',\n  },\n  {\n    possibleIn: 1600,\n    necessaryAsOf: 1600,\n    level: ApplicationComplexity.Medium,\n    step: 'v16 withServerTransition',\n    action:\n      \"如果你在同一页上运行多个 Angular 应用程序，并且使用了 `BrowserModule.withServerTransition({ appId: 'serverApp' })`，请确保设置 `APP_ID`，因为 `withServerTransition` 现已过时。[继续阅读](https://github.com/angular/angular/blob/main/CHANGELOG.md#platform-browser-4)\",\n  },\n  {\n    possibleIn: 1600,\n    necessaryAsOf: 1600,\n    level: ApplicationComplexity.Advanced,\n    step: 'v16 EnvironmentInjector',\n    action:\n      '将 `EnvironmentInjector.runInContext` 更改为 `runInInjectionContext`，并将环境注入器作为第一个参数传递。',\n  },\n  {\n    possibleIn: 1600,\n    necessaryAsOf: 1600,\n    level: ApplicationComplexity.Advanced,\n    step: 'v16 ViewContainerRef.createComponent',\n    action:\n      '更新你的代码，使用 `ViewContainerRef.createComponent` 而不使用工厂解析器。`ComponentFactoryResolver` 已从 Router API 中移除。',\n  },\n  {\n    possibleIn: 1600,\n    necessaryAsOf: 1600,\n    level: ApplicationComplexity.Advanced,\n    step: 'v16 APP_ID',\n    action: '如果在同一页上引导多个应用程序，请确保设置唯一的 `APP_IDs`。',\n  },\n  {\n    possibleIn: 1600,\n    necessaryAsOf: 1600,\n    level: ApplicationComplexity.Advanced,\n    step: 'v16 server renderApplication',\n    action:\n      '更新你的代码，修订 `renderApplication` 方法，因为它不再接受根组件作为第一个参数，而是应该引导你的应用程序的回调函数。[继续阅读](https://github.com/angular/angular/blob/main/CHANGELOG.md#platform-server-3)',\n  },\n  {\n    possibleIn: 1600,\n    necessaryAsOf: 1600,\n    level: ApplicationComplexity.Advanced,\n    step: 'v16 PlatformConfig.baseUrl',\n    action:\n      '更新你的代码，删除对 `PlatformConfig.baseUrl` 和 `PlatformConfig.useAbsoluteUrl` platform-server 配置选项的任何引用，因为它已被弃用。',\n  },\n  {\n    possibleIn: 1600,\n    necessaryAsOf: 1600,\n    level: ApplicationComplexity.Basic,\n    step: 'v16 moduleid',\n    action:\n      '更新你的代码，删除对 `@Directive`/`@Component` `moduleId` 属性的任何引用，因为它不起作用，将在 v17 中删除。',\n  },\n  {\n    possibleIn: 1600,\n    necessaryAsOf: 1600,\n    level: ApplicationComplexity.Medium,\n    step: 'v16 transfer state imports',\n    action:\n      \"从 `import {makeStateKey, StateKey, TransferState} from '@angular/platform-browser'` 更新导入到 `import {makeStateKey, StateKey, TransferState} from '@angular/core'`\",\n  },\n  {\n    possibleIn: 1600,\n    necessaryAsOf: 1600,\n    level: ApplicationComplexity.Advanced,\n    step: 'v16 ComponentRef',\n    action:\n      '如果依赖于 `ComponentRef.setInput` 来设置组件输入，即使它基于 `Object.is` 相等性检查是相同的，请确保复制其值。',\n  },\n  {\n    possibleIn: 1600,\n    necessaryAsOf: 1600,\n    level: ApplicationComplexity.Advanced,\n    step: 'v16 ANALYZE_FOR_ENTRY_COMPONENTS',\n    action:\n      '更新你的代码，删除对 `ANALYZE_FOR_ENTRY_COMPONENTS` 注入令牌的任何引用，因为它已被删除。',\n  },\n  {\n    possibleIn: 1600,\n    necessaryAsOf: 1600,\n    level: ApplicationComplexity.Basic,\n    step: 'v16 entry components',\n    action:\n      '`entryComponents` 不再可用，并且可以从 `@NgModule` 和 `@Component` 公共 API 中删除任何对它的引用。',\n  },\n  {\n    possibleIn: 1600,\n    necessaryAsOf: 1600,\n    level: ApplicationComplexity.Medium,\n    step: 'v16 ngTemplateOutletContext',\n    action:\n      'ngTemplateOutletContext 具有更严格的类型检查，需要你在相应对象中声明所有属性。[继续阅读](https://github.com/angular/angular/blob/main/CHANGELOG.md#common-1).',\n  },\n  {\n    possibleIn: 1600,\n    necessaryAsOf: 1600,\n    level: ApplicationComplexity.Medium,\n    step: 'v16 APF',\n    action: 'Angular 包不再包括 FESM2015，并且分布式 ECMScript 已从 2020 更新到 2022。',\n  },\n  {\n    possibleIn: 1600,\n    necessaryAsOf: 1600,\n    level: ApplicationComplexity.Advanced,\n    step: 'v16 EventManager',\n    action: '已删除已弃用的 `EventManager` 方法 `addGlobalEventListener`，因为它未被 Ivy 使用。',\n  },\n  {\n    possibleIn: 1600,\n    necessaryAsOf: 1600,\n    level: ApplicationComplexity.Medium,\n    step: 'v16 BrowserTransferStateModule',\n    action: '`BrowserTransferStateModule` 不再可用，并且可以从你的应用程序中删除任何对它的引用。',\n  },\n  {\n    possibleIn: 1600,\n    necessaryAsOf: 1600,\n    level: ApplicationComplexity.Medium,\n    step: 'v16 ReflectiveInjector',\n    action:\n      '更新你的代码，使用 `Injector.create` 而不是 `ReflectiveInjector`，因为 `ReflectiveInjector` 已被移除。',\n  },\n  {\n    possibleIn: 1600,\n    necessaryAsOf: 1600,\n    level: ApplicationComplexity.Basic,\n    step: 'v16 QueryList',\n    action:\n      '`QueryList.filter` 现在支持类型保护函数。由于类型将被缩小，你可能需要更新依赖于旧行为的应用程序代码。',\n  },\n  {\n    possibleIn: 1700,\n    necessaryAsOf: 1700,\n    level: ApplicationComplexity.Basic,\n    step: 'v17 node support',\n    action:\n      '在升级应用程序之前，请确保你正在使用受支持的 node.js 版本。Angular v17 支持 node.js 版本：v18.13.0 及更高版本。',\n  },\n  {\n    possibleIn: 1700,\n    necessaryAsOf: 1700,\n    level: ApplicationComplexity.Basic,\n    step: 'v17 ts support',\n    action:\n      '在升级应用程序之前，请确保你正在使用受支持的 TypeScript 版本。Angular v17 支持 TypeScript 版本 5.2 或更高版本。',\n  },\n  {\n    possibleIn: 1700,\n    necessaryAsOf: 1700,\n    level: ApplicationComplexity.Basic,\n    step: 'v17 zone.js support',\n    action:\n      '在升级应用程序之前，请确保你正在使用受支持的 Zone.js 版本。Angular v17 支持 Zone.js 版本 0.14.x 或更高版本。',\n  },\n  {\n    possibleIn: 1700,\n    necessaryAsOf: 1700,\n    level: ApplicationComplexity.Basic,\n    step: 'v17 ng update',\n    action:\n      '在应用程序的项目目录中运行 `ng update @angular/core@17 @angular/cli@17`，将你的应用程序升级到 Angular v17。',\n  },\n  {\n    possibleIn: 1700,\n    necessaryAsOf: 1700,\n    level: ApplicationComplexity.Basic,\n    material: true,\n    step: 'update @angular/material',\n    action: '运行 `ng update @angular/material@17`。',\n  },\n  {\n    possibleIn: 1700,\n    necessaryAsOf: 1700,\n    level: ApplicationComplexity.Medium,\n    step: 'v17 style removal',\n    action:\n      'Angular 现在会自动删除销毁组件的样式，这可能会影响到你现有的应用程序，特别是在你依赖于泄漏样式的情况下。要更改此设置，请将 `REMOVE_STYLES_ON_COMPONENT_DESTROY` 提供程序的值更改为 `false`。',\n  },\n  {\n    possibleIn: 1700,\n    necessaryAsOf: 1700,\n    level: ApplicationComplexity.Basic,\n    step: 'v17 router removals',\n    action:\n      '确保你在 `provideRouter` 或 `RouterModule.forRoot` 中配置 `setupTestingRouter`、`canceledNavigationResolution`、`paramsInheritanceStrategy`、`titleStrategy`、`urlUpdateStrategy`、`urlHandlingStrategy` 和 `malformedUriErrorHandler`，因为这些属性现在不再是 `Router` 的公共 API 的一部分。',\n  },\n  {\n    possibleIn: 1700,\n    necessaryAsOf: 1700,\n    level: ApplicationComplexity.Advanced,\n    step: 'v17 ngDoCheck dynamic components',\n    action:\n      '对于动态实例化的组件，我们现在在变更检测期间执行 `ngDoCheck`，如果组件被标记为脏，则可能需要更新动态实例化组件的测试或 `ngDoCheck` 中的逻辑。',\n  },\n  {\n    possibleIn: 1700,\n    necessaryAsOf: 1700,\n    level: ApplicationComplexity.Medium,\n    step: 'v17 malformedUriErrorHandler',\n    action:\n      '在 `UrlSerializer.parse` 中处理 URL 解析错误，而不是 `malformedUriErrorHandler`，因为它现在是公共 API 的一部分。',\n  },\n  {\n    possibleIn: 1700,\n    necessaryAsOf: 1700,\n    level: ApplicationComplexity.Medium,\n    step: 'v17 zone deep imports',\n    action:\n      '将 Zone.js 的深度导入（如 `zone.js/bundles/zone-testing.js` 和 `zone.js/dist/zone`）更改为 `zone.js` 和 `zone.js/testing`。',\n  },\n  {\n    possibleIn: 1700,\n    necessaryAsOf: 1700,\n    level: ApplicationComplexity.Advanced,\n    step: 'v17 absolute redirects',\n    action:\n      '你可能需要调整路由器配置以防止绝对重定向后的无限重定向。在 v17 中，我们不再在绝对重定向后阻止额外的重定向。',\n  },\n  {\n    possibleIn: 1700,\n    necessaryAsOf: 1700,\n    level: ApplicationComplexity.Medium,\n    step: 'v17 AnimationDriver',\n    action:\n      '将对 `AnimationDriver.NOOP` 的引用更改为使用 `NoopAnimationDriver`，因为 `AnimationDriver.NOOP` 现在已被弃用。',\n  },\n  {\n    possibleIn: 1700,\n    necessaryAsOf: 1700,\n    level: ApplicationComplexity.Basic,\n    step: 'v17 switch strictness',\n    action:\n      '你可能需要调整 `NgSwitch` 的相等性检查，因为现在默认采用更严格的 `===` 而不是 `==`。Angular 将为需要提供调整的用法记录警告消息。',\n  },\n  {\n    possibleIn: 1700,\n    necessaryAsOf: 1700,\n    level: ApplicationComplexity.Advanced,\n    step: 'v17 mutate in signals',\n    action:\n      '在 Angular 信号中使用 `update` 代替 `mutate`。例如，`items.mutate(itemsArray => itemsArray.push(newItem));` 现在是 `items.update(itemsArray => [itemsArray, …newItem]);`',\n  },\n  {\n    possibleIn: 1700,\n    necessaryAsOf: 1700,\n    level: ApplicationComplexity.Medium,\n    step: 'v17 withNoDomReuse',\n    action:\n      '要禁用水合作用，请使用 `ngSkipHydration` 或从提供程序列表中删除 `provideClientHydration` 调用，因为 `withNoDomReuse` 不再是公共 API 的一部分。',\n  },\n  {\n    possibleIn: 1700,\n    necessaryAsOf: 1700,\n    level: ApplicationComplexity.Basic,\n    step: 'v17 paramsInheritanceStrategy',\n    action:\n      '如果你希望 `loadComponent` 路由的子路由从其父路由继承数据，请将 `paramsInheritanceStrategy` 指定为 `always`，在 v17 中，现在设置为 `emptyOnly`。',\n  },\n  {\n    possibleIn: 1800,\n    necessaryAsOf: 1800,\n    level: ApplicationComplexity.Basic,\n    step: 'v18 node support',\n    action:\n      '在升级应用程序之前，请确保你正在使用受支持的 node.js 版本。Angular v18 支持 node.js 版本：v18.19.0 及更高版本。',\n  },\n  {\n    possibleIn: 1800,\n    necessaryAsOf: 1800,\n    level: ApplicationComplexity.Basic,\n    step: 'v18 ng update',\n    action:\n      '在应用程序的项目目录中运行 `ng update @angular/core@18 @angular/cli@18`，将你的应用程序升级到 Angular v18。',\n  },\n  {\n    possibleIn: 1800,\n    necessaryAsOf: 1800,\n    level: ApplicationComplexity.Basic,\n    material: true,\n    step: 'update @angular/material',\n    action: '运行 `ng update @angular/material@18`。',\n  },\n  {\n    possibleIn: 1800,\n    necessaryAsOf: 1800,\n    level: ApplicationComplexity.Basic,\n    step: '18.0.0 Upgrade TypeScript',\n    action: '将 TypeScript 更新到 5.4 版本或更高版本。',\n  },\n  {\n    possibleIn: 1800,\n    necessaryAsOf: 1800,\n    level: ApplicationComplexity.Advanced,\n    step: '18.0.0: async has been removed, use `waitForAsync` instead',\n    action: '从 `@angular/core` 中替换 `async` 为 `waitForAsync`。',\n  },\n  {\n    possibleIn: 1800,\n    necessaryAsOf: 1800,\n    level: ApplicationComplexity.Advanced,\n    step: '18.0.0: Deprecated matchesElement method removed from AnimationDriver',\n    action: '删除对 `matchesElement` 的调用，因为它现在不再是 `AnimationDriver` 的一部分。',\n  },\n  {\n    possibleIn: 1800,\n    necessaryAsOf: 1800,\n    level: ApplicationComplexity.Medium,\n    step: '18.0.0. Use `@angular/core` StateKey and TransferState',\n    action:\n      '从 `@angular/core` 中导入 `StateKey` 和 `TransferState`，而不是 `@angular/platform-browser`。',\n  },\n  {\n    possibleIn: 1800,\n    necessaryAsOf: 1800,\n    level: ApplicationComplexity.Medium,\n    step: '18.0.0. Opt-in of caching for HTTP requests with auth headers',\n    action:\n      '在 `withHttpTransferCache` 中使用 `includeRequestsWithAuthHeaders: true` 以选择不缓存需要授权的 HTTP 请求。',\n  },\n  {\n    possibleIn: 1800,\n    necessaryAsOf: 1800,\n    level: ApplicationComplexity.Advanced,\n    step: '18.0.0.REMOVE_OBSOLETE_IS_WORKER',\n    action:\n      '更新应用程序以删除 `isPlatformWorkerUi` 和 `isPlatformWorkerApp`，因为它们是平台 WebWorker 的一部分，而现在不再是 Angular 的一部分。',\n  },\n  {\n    possibleIn: 1800,\n    necessaryAsOf: 1800,\n    level: ApplicationComplexity.Medium,\n    step: '18.0.0.FORCE_ZONE_CHANGE_DETECTION',\n    action:\n      '测试可能需要运行额外的变更检测轮次，以完全反映 DOM 中的测试状态。作为最后的手段，通过将 `provideZoneChangeDetection({ignoreChangesOutsideZone: true})` 添加到 TestBed 的提供程序中，恢复旧的行为。',\n  },\n  {\n    possibleIn: 1800,\n    necessaryAsOf: 1800,\n    level: ApplicationComplexity.Medium,\n    step: '18.0.0: Remove two-way binding expressions in writable bindings',\n    action: '删除在使用 `[(ngModel)]` 的模板中写入属性的表达式。',\n  },\n  {\n    possibleIn: 1800,\n    necessaryAsOf: 1800,\n    level: ApplicationComplexity.Advanced,\n    step: '18.0.0: Use zones to track pending requests',\n    action:\n      '删除对 `Testability` 方法 `increasePendingRequestCount`、`decreasePendingRequestCount` 和 `getPendingRequestCount` 的调用。这些信息由 ZoneJS 跟踪。',\n  },\n  {\n    possibleIn: 1800,\n    necessaryAsOf: 1800,\n    level: ApplicationComplexity.Medium,\n    step: '18.0.0: Move shared providers to the routed component',\n    action:\n      '将应该对路由组件可用的任何环境提供者从定义 `RouterOutlet` 的组件移动到 `bootstrapApplication` 或 `Route` 配置的提供者中。',\n  },\n  {\n    possibleIn: 1800,\n    necessaryAsOf: 1800,\n    level: ApplicationComplexity.Advanced,\n    step: '18.0.0 Use RedirectCommand or new NavigationBehaviorOptions',\n    action:\n      '当守卫将 `UrlTree` 作为重定向返回时，重定向导航现在将使用 `replaceUrl`，如果初始导航也使用了 `replaceUrl` 选项。如果你希望保留以前的行为，请使用新的 `NavigationBehaviorOptions` 配置重定向，方法是返回具有所需选项的 `RedirectCommand` 而不是 `UrlTree`。',\n  },\n  {\n    possibleIn: 1800,\n    necessaryAsOf: 1800,\n    level: ApplicationComplexity.Advanced,\n    step: '18.0.0: Remove deprecated resource cache providers',\n    action: '删除 `RESOURCE_CACHE_PROVIDER` 的依赖项，因为它不再是 Angular 运行时的一部分。',\n  },\n  {\n    possibleIn: 1800,\n    necessaryAsOf: 1800,\n    level: ApplicationComplexity.Advanced,\n    step: '18.0.0: Update Node.js URL parsing in `ServerPlatformLocation`',\n    action:\n      '在 `@angular/platform-server` 中，现在 `pathname` 总是以 `/` 结尾，而 http: 和 https: 的默认端口分别是 80 和 443。',\n  },\n  {\n    possibleIn: 1800,\n    necessaryAsOf: 1800,\n    level: ApplicationComplexity.Medium,\n    step: '18.0.0. Use absolute URLs',\n    action: '提供绝对 `url`，而不是使用 `PlatformConfig` 中的 `useAbsoluteUrl` 和 `baseUrl`。',\n  },\n  {\n    possibleIn: 1800,\n    necessaryAsOf: 1800,\n    level: ApplicationComplexity.Advanced,\n    step: '18.0.0. Switch from `platformDynamicServer` to `platformServer`.',\n    action:\n      '将 `platformDynamicServer` 的用法替换为 `platformServer`。另外，添加一个 `import @angular/compiler`。',\n  },\n  {\n    possibleIn: 1800,\n    necessaryAsOf: 1800,\n    level: ApplicationComplexity.Medium,\n    step: '18.0.0. Remove `ServerTransferStateModule` from app imports',\n    action: '从应用程序中删除所有对 `ServerTransferStateModule` 的导入。它不再需要。',\n  },\n  {\n    possibleIn: 1800,\n    necessaryAsOf: 1800,\n    level: ApplicationComplexity.Advanced,\n    step: '18.0.0. Update `Route.redirectTo` to accept functions',\n    action:\n      '`Route.redirectTo` 现在可以接受函数，而不仅仅是字符串。任何直接读取 `Route` 对象并期望 `redirectTo` 是字符串的代码可能需要更新，以考虑函数。',\n  },\n  {\n    possibleIn: 1800,\n    necessaryAsOf: 1800,\n    level: ApplicationComplexity.Advanced,\n    step: '18.0.0: Guards can return `RedirectCommand`',\n    action:\n      '除了 `UrlTree` 和 `boolean`，`Route` 守卫和解析器现在还可以返回一个 `RedirectCommand` 对象。任何直接读取 `Route` 对象并期望只有 `boolean` 或 `UrlTree` 的代码可能需要更新，以考虑 `RedirectCommand`。',\n  },\n  {\n    possibleIn: 1800,\n    necessaryAsOf: 1800,\n    level: ApplicationComplexity.Medium,\n    step: '18.0.0: Mark `OnPush` views dirty',\n    action: '对于使用 `OnPush` 变更检测的任何组件，请确保它们被正确标记为脏，以启用宿主绑定更新。',\n  },\n  {\n    possibleIn: 1800,\n    necessaryAsOf: 1800,\n    level: ApplicationComplexity.Advanced,\n    step: '18.0.0-Refresh-Newly-Created-Views',\n    action:\n      '请注意，新创建的视图或在变更检测期间标记为检查并重新附加的视图现在保证在同一变更检测周期中刷新。',\n  },\n  {\n    possibleIn: 1800,\n    necessaryAsOf: 1800,\n    level: ApplicationComplexity.Advanced,\n    step: '18.0.0: `ComponentFixture.whenStable` matches `ApplicationRef.isStable`',\n    action:\n      '在调整 `ComponentFixture.whenStable` 和 `ApplicationRef.isStable` 语义后，使用 `whenStable` 时你的测试可能需要更长时间等待。',\n  },\n  {\n    possibleIn: 1800,\n    necessaryAsOf: 1800,\n    level: ApplicationComplexity.Advanced,\n    step: '18.0.0. `ComponentFixture.autoDetect` behavior more closely matches Application behavior',\n    action:\n      '如果你的测试依赖于 `ComponentFixture.autoDetect` 的变更检测执行顺序，可能会遇到测试失败，因为它现在会在 `ApplicationRef.tick` 中执行测试夹具的变更检测。例如，这将导致测试夹具在创建任何对话框之前刷新，而以前可能相反。',\n  },\n  {\n    action:\n      '在应用程序的项目目录中，运行 `ng update @angular/core@19 @angular/cli@19` 以将应用升级到Angular v19。',\n    level: ApplicationComplexity.Basic,\n    necessaryAsOf: 1900,\n    possibleIn: 1900,\n    step: '19.0.0_ng_update',\n  },\n  {\n    possibleIn: 1900,\n    necessaryAsOf: 1900,\n    level: ApplicationComplexity.Basic,\n    material: true,\n    step: 'update @angular/material',\n    action: '运行 `ng update @angular/material@19`。',\n  },\n  {\n    action:\n      'Angular指令、组件和管道现在默认是独立的。对于当前在NgModule中声明的声明，需明确指定 `standalone: false`。Angular CLI将自动更新代码以反映此变更。',\n    level: ApplicationComplexity.Basic,\n    necessaryAsOf: 1900,\n    possibleIn: 1900,\n    step: '19.0.0-standalone-declarations',\n  },\n  {\n    action:\n      '访问模板引用变量时移除 `this.` 前缀。例如，将 `<div #foo></div>{{ this.foo }}` 重构为 `<div #foo></div>{{ foo }}`',\n    level: ApplicationComplexity.Medium,\n    necessaryAsOf: 1900,\n    possibleIn: 1900,\n    step: '19.0.0-remove-this',\n  },\n  {\n    action:\n      '将 `BrowserModule.withServerTransition()` 的用法替换为注入 `APP_ID` 令牌来设置应用 `id`。',\n    level: ApplicationComplexity.Basic,\n    necessaryAsOf: 1900,\n    possibleIn: 1900,\n    step: '19.0.0-remove-browser-module-with-server-transition',\n  },\n  {\n    action: '`KeyValueDiffers` 中的 `factories` 属性已被移除。',\n    level: ApplicationComplexity.Advanced,\n    necessaryAsOf: 1900,\n    possibleIn: 1900,\n    step: '19.0.0-remove-key-value-differs-factories',\n  },\n  {\n    action: '在angular.json中，将 `@angular/localize` 构建器的 `name` 选项替换为 `project`。',\n    level: ApplicationComplexity.Medium,\n    necessaryAsOf: 1900,\n    possibleIn: 1900,\n    step: '19.0.0_localize_builder_project_option',\n  },\n  {\n    action: '将 `ExperimentalPendingTasks` 重命名为 `PendingTasks`。',\n    level: ApplicationComplexity.Advanced,\n    necessaryAsOf: 1900,\n    possibleIn: 1900,\n    step: '19.0.0_rename_experimental_pending_tasks',\n  },\n  {\n    action:\n      '更新依赖effects的 `Promise` 时序的测试，改用 `await whenStable()` 或调用 `.detectChanges()` 来触发effects。对于在变更检测期间触发的effects，确保它们不依赖应用完全渲染，或考虑使用 `afterRenderEffect()`。使用模拟时钟的测试可能需要快进/清空时钟。',\n    level: ApplicationComplexity.Medium,\n    necessaryAsOf: 1900,\n    possibleIn: 1900,\n    step: '19.0.0.1',\n  },\n  {\n    action: '升级至TypeScript 5.5或更高版本。',\n    level: ApplicationComplexity.Basic,\n    necessaryAsOf: 1900,\n    possibleIn: 1900,\n    step: '19.0.0.2',\n  },\n  {\n    action:\n      '更新使用 `fakeAsync` 的测试：当变更发生在 Angular Zone 外部时（混合模式调度），原测试依赖的 Zone 合并和调度的特定时序可能受到影响，因为现在这些计时器会受 `tick` 和 `flush` 影响。',\n    level: ApplicationComplexity.Advanced,\n    necessaryAsOf: 1900,\n    possibleIn: 1900,\n    step: '19.0.0-timers-in-zone',\n  },\n  {\n    action:\n      \"使用 `createComponent` API且未传递第一个 `ng-content` 的内容时，需提供 `document.createTextNode('')` 作为 `projectableNode` 以防止渲染默认回退内容。\",\n    level: ApplicationComplexity.Medium,\n    necessaryAsOf: 1900,\n    possibleIn: 1900,\n    step: '19.0.0-render-default-fallback',\n  },\n  {\n    action:\n      '更新依赖自定义元素周边变更检测特定时序或顺序的测试，由于切换至混合调度器，时序可能已发生变化。',\n    level: ApplicationComplexity.Advanced,\n    necessaryAsOf: 1900,\n    possibleIn: 1900,\n    step: '19.0.0-hybrid-scheduler-timing',\n  },\n  {\n    action:\n      '从使用 `Router.errorHandler` 迁移到 `provideRouter` 的 `withNavigationErrorHandler` 或 `RouterModule.forRoot` 的 `errorHandler`。',\n    level: ApplicationComplexity.Basic,\n    necessaryAsOf: 1900,\n    possibleIn: 1900,\n    step: '19.0.0-router-error-handler',\n  },\n  {\n    action:\n      '更新测试以处理 `ApplicationRef.tick` 期间抛出的错误：可通过同步触发变更检测或拒绝未完成的 `ComponentFixture.whenStable` Promise来实现。',\n    level: ApplicationComplexity.Advanced,\n    necessaryAsOf: 1900,\n    possibleIn: 1900,\n    step: '19.0.0-testbed-error-handling',\n  },\n  {\n    action: '更新 `Resolve` 接口的用法，在其返回类型中包含 `RedirectCommand`。',\n    level: ApplicationComplexity.Medium,\n    necessaryAsOf: 1900,\n    possibleIn: 1900,\n    step: '19.0.0-update-resolve-interface-return-type',\n  },\n  {\n    action:\n      '`fakeAsync` 现在默认会清空待处理计时器。若测试需要原有行为，需在选项参数中显式传递 `{flush: false}`。',\n    level: ApplicationComplexity.Advanced,\n    necessaryAsOf: 1900,\n    possibleIn: 1900,\n    step: '19.0.0-update-fakeasync-to-flush-pending-timers',\n  },\n  {\n    action:\n      \"In the application's project directory, run `ng update @angular/core@20 @angular/cli@20` to update your application to Angular v20.\",\n    level: ApplicationComplexity.Basic,\n    necessaryAsOf: 2000,\n    possibleIn: 2000,\n    step: '20.0.0_ng_update',\n  },\n  {\n    possibleIn: 2000,\n    necessaryAsOf: 2000,\n    level: ApplicationComplexity.Basic,\n    material: true,\n    step: 'update @angular/material',\n    action: 'Run `ng update @angular/material@20`.',\n  },\n  {\n    possibleIn: 2000,\n    necessaryAsOf: 2000,\n    level: ApplicationComplexity.Basic,\n    step: '20.0.0_rename_afterRender_to_afterEveryRender',\n    action: 'Rename the `afterRender` lifecycle hook to `afterEveryRender`',\n  },\n  {\n    possibleIn: 2000,\n    necessaryAsOf: 2000,\n    level: ApplicationComplexity.Medium,\n    step: '20.0.0_replace_TestBed_flushEffects_with_tick',\n    action:\n      'Replace uses of `TestBed.flushEffects()` with `TestBed.tick()`, the closest equivalent to synchronously flush effects.',\n  },\n  {\n    possibleIn: 2000,\n    necessaryAsOf: 2000,\n    level: ApplicationComplexity.Advanced,\n    step: '20.0.0_update_provideCheckNoChangesConfig',\n    action:\n      'Rename `provideExperimentalCheckNoChangesForDebug` to `provideCheckNoChangesConfig`. Note its behavior now applies to all `checkNoChanges` runs. The `useNgZoneOnStable` option is no longer available.',\n  },\n  {\n    possibleIn: 2000,\n    necessaryAsOf: 2000,\n    level: ApplicationComplexity.Advanced,\n    step: '20.0.0_refactor_ng_reflect_attributes_usage',\n    action:\n      'Refactor application and test code to avoid relying on `ng-reflect-*` attributes. If needed temporarily for migration, use `provideNgReflectAttributes()` from `@angular/core` in bootstrap providers to re-enable them in dev mode only.',\n  },\n  {\n    possibleIn: 2000,\n    necessaryAsOf: 2000,\n    level: ApplicationComplexity.Advanced,\n    step: '20.0.0_adjust_RedirectFn_return_type_handling',\n    action:\n      'Adjust code that directly calls functions returning `RedirectFn`. These functions can now also return an `Observable` or `Promise`; ensure your logic correctly handles these asynchronous return types.',\n  },\n  {\n    possibleIn: 2000,\n    necessaryAsOf: 2000,\n    level: ApplicationComplexity.Basic,\n    step: '20.0.0_rename_resource_request_to_param',\n    action: 'Rename the `request` property passed in resources to `params`.',\n  },\n  {\n    possibleIn: 2000,\n    necessaryAsOf: 2000,\n    level: ApplicationComplexity.Medium,\n    step: '20.0.0_rename_rxResource_loader_to_stream',\n    action: 'Rename the `loader` property passed in rxResources to `stream`.',\n  },\n  {\n    possibleIn: 2000,\n    necessaryAsOf: 2000,\n    level: ApplicationComplexity.Basic,\n    step: '20.0.0_replace_ResourceStatus_by_corresponding_strings',\n    action:\n      '`ResourceStatus` is no longer an enum. Use the corresponding constant string values instead.',\n  },\n  {\n    possibleIn: 2000,\n    necessaryAsOf: 2000,\n    level: ApplicationComplexity.Advanced,\n    step: '20.0.0_rename_provideExperimentalZonelessChangeDetection',\n    action:\n      'Rename `provideExperimentalZonelessChangeDetection` to `provideZonelessChangeDetection`.',\n  },\n  {\n    possibleIn: 2000,\n    necessaryAsOf: 2000,\n    level: ApplicationComplexity.Advanced,\n    step: '20.0.0_update_template_expressions_using_in_property',\n    action:\n      \"If your templates use `{{ in }}` or `in` in expressions to refer to a component property named 'in', change it to `{{ this.in }}` or `this.in` as 'in' now refers to the JavaScript 'in' operator. If you're using `in` as a template reference, you'd have to rename the reference.\",\n  },\n  {\n    possibleIn: 2000,\n    necessaryAsOf: 2000,\n    level: ApplicationComplexity.Advanced,\n    step: '20.0.0_update_router_method_array_parameters_to_readonly',\n    action:\n      'The type for the commands arrays passed to Router methods (`createUrlTree`, `navigate`, `createUrlTreeFromSnapshot`) have been updated to use `readonly T[]` since the array is not mutated. Code which extracts these types (e.g. with `typeof`) may need to be adjusted if it expects mutable arrays.',\n  },\n  {\n    possibleIn: 2000,\n    necessaryAsOf: 2000,\n    level: ApplicationComplexity.Advanced,\n    step: '20.0.0_update_animation_tests_for_guaranteed_flushing',\n    action:\n      'Review and update tests asserting on DOM elements involved in animations. Animations are now guaranteed to be flushed with change detection or `ApplicationRef.tick`, potentially altering previous test outcomes.',\n  },\n  {\n    possibleIn: 2000,\n    necessaryAsOf: 2000,\n    level: ApplicationComplexity.Medium,\n    step: '20.0.0_handle_uncaught_listener_errors_in_tests',\n    action:\n      'In tests, uncaught errors in event listeners are now rethrown by default. Previously, these were only logged to the console by default. Catch them if intentional for the test case, or use `rethrowApplicationErrors: false` in `configureTestingModule` as a last resort.',\n  },\n  {\n    possibleIn: 2000,\n    necessaryAsOf: 2000,\n    level: ApplicationComplexity.Advanced,\n    step: '20.0.0_update_route_guards_array_types',\n    action:\n      'The `any` type is removed from the Route guard arrays (canActivate, canDeactivate, etc); ensure guards are functions, `ProviderToken<T>`, or (deprecated) strings. Refactor string guards to `ProviderToken<T>` or functions.',\n  },\n  {\n    possibleIn: 2000,\n    necessaryAsOf: 2000,\n    level: ApplicationComplexity.Basic,\n    step: '20.0.0_update_nodejs_version',\n    action:\n      'Ensure your Node.js version is at least 20.11.1 and not v18 or v22.0-v22.10 before upgrading to Angular v20. Check https://angular.dev/reference/versions for the full list of supported Node.js versions.',\n  },\n  {\n    possibleIn: 2000,\n    necessaryAsOf: 2000,\n    level: ApplicationComplexity.Basic,\n    step: '20.0.0_replace_TestBed_get_with_TestBed_inject',\n    action:\n      'Replace all occurrences of the deprecated `TestBed.get()` method with `TestBed.inject()` in your Angular tests for dependency injection.',\n  },\n  {\n    possibleIn: 2000,\n    necessaryAsOf: 2000,\n    level: ApplicationComplexity.Medium,\n    step: '20.0.0_remove_InjectFlags_usage',\n    action:\n      'Remove `InjectFlags` enum and its usage from `inject`, `Injector.get`, `EnvironmentInjector.get`, and `TestBed.inject` calls. Use options like `{optional: true}` for `inject` or handle null for `*.get` methods.',\n  },\n  {\n    possibleIn: 2000,\n    necessaryAsOf: 2000,\n    level: ApplicationComplexity.Advanced,\n    step: '20.0.0_update_injector_get_calls_to_use_ProviderToken',\n    action:\n      'Update `injector.get()` calls to use a specific `ProviderToken<T>` instead of relying on the removed `any` overload. If using string tokens (deprecated since v4), migrate them to `ProviderToken<T>`.',\n  },\n  {\n    possibleIn: 2000,\n    necessaryAsOf: 2000,\n    level: ApplicationComplexity.Basic,\n    step: '20.0.0_update_typescript_version',\n    action:\n      \"Upgrade your project's TypeScript version to at least 5.8 before upgrading to Angular v20 to ensure compatibility.\",\n  },\n  {\n    possibleIn: 2000,\n    necessaryAsOf: 2000,\n    level: ApplicationComplexity.Advanced,\n    step: '20.0.0_review_AsyncPipe_error_handling_in_tests',\n    action:\n      '`Unhandled errors in subscriptions/promises of AsyncPipe` are now directly reported to `ErrorHandler`. This may alter test outcomes; ensure tests correctly handle these reported errors.',\n  },\n  {\n    possibleIn: 2000,\n    necessaryAsOf: 2000,\n    level: ApplicationComplexity.Advanced,\n    step: '20.0.0_refactor_PendingTasks_run_usage',\n    action:\n      'If relying on the return value of `PendingTasks.run`, refactor to use `PendingTasks.add`. Handle promise results/rejections manually, especially for SSR to prevent node process shutdown on unhandled rejections.',\n  },\n  {\n    possibleIn: 2000,\n    necessaryAsOf: 2000,\n    level: ApplicationComplexity.Advanced,\n    step: '20.0.0_update_template_expressions_using_void_property',\n    action:\n      \"If your templates use `{{ void }}` or `void` in expressions to refer to a component property named 'void', change it to `{{ this.void }}` or `this.void` as 'void' now refers to the JavaScript `void` operator.\",\n  },\n  {\n    possibleIn: 2000,\n    necessaryAsOf: 2000,\n    level: ApplicationComplexity.Advanced,\n    step: '20.0.0_review_date_pipe_formatter_Y_usage',\n    action:\n      'Review `DatePipe` usages. Using the `Y` (week-numbering year) formatter without also including `w` (week number) is now detected as suspicious. Use `y` (year) if that was the intent, or include `w` alongside `Y`.',\n  },\n  {\n    possibleIn: 2000,\n    necessaryAsOf: 2000,\n    level: ApplicationComplexity.Medium,\n    step: '20.0.0_handle_uncaught_listener_errors_in_tests',\n    action:\n      'In templates parentheses are now always respected. This can lead to runtime breakages when nullish coalescing were nested in parathesis. eg `(foo?.bar).baz` will throw if `foo` is nullish as it would in native JavaScript.',\n  },\n];\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input } from '@angular/core';\n\n/**\n * Internal shared component used as a container in form field controls.\n * Not to be confused with `mat-form-field` which MDC calls a \"text field\".\n * @docs-private\n */\nconst _c0 = [\"mat-internal-form-field\", \"\"];\nconst _c1 = [\"*\"];\nclass _MatInternalFormField {\n  /** Position of the label relative to the content. */\n  labelPosition;\n  static ɵfac = function _MatInternalFormField_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || _MatInternalFormField)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _MatInternalFormField,\n    selectors: [[\"div\", \"mat-internal-form-field\", \"\"]],\n    hostAttrs: [1, \"mdc-form-field\", \"mat-internal-form-field\"],\n    hostVars: 2,\n    hostBindings: function _MatInternalFormField_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mdc-form-field--align-end\", ctx.labelPosition === \"before\");\n      }\n    },\n    inputs: {\n      labelPosition: \"labelPosition\"\n    },\n    attrs: _c0,\n    ngContentSelectors: _c1,\n    decls: 1,\n    vars: 0,\n    template: function _MatInternalFormField_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    styles: [\".mat-internal-form-field{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:inline-flex;align-items:center;vertical-align:middle}.mat-internal-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mat-internal-form-field>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end .mdc-form-field--align-end label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_MatInternalFormField, [{\n    type: Component,\n    args: [{\n      selector: 'div[mat-internal-form-field]',\n      template: '<ng-content></ng-content>',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        'class': 'mdc-form-field mat-internal-form-field',\n        '[class.mdc-form-field--align-end]': 'labelPosition === \"before\"'\n      },\n      styles: [\".mat-internal-form-field{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;display:inline-flex;align-items:center;vertical-align:middle}.mat-internal-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mat-internal-form-field>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end .mdc-form-field--align-end label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0}\\n\"]\n    }]\n  }], null, {\n    labelPosition: [{\n      type: Input,\n      args: [{\n        required: true\n      }]\n    }]\n  });\n})();\nexport { _MatInternalFormField };\n","import { _IdGenerator } from '@angular/cdk/a11y';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, ChangeDetectorRef, NgZone, EventEmitter, HostAttributeToken, signal, booleanAttribute, numberAttribute, forwardRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS } from '@angular/forms';\nimport { _CdkPrivateStyleLoader } from '@angular/cdk/private';\nimport { _MatInternalFormField } from './internal-form-field.mjs';\nimport { _animationsDisabled } from './animation.mjs';\nimport { _StructuralStylesLoader } from './structural-styles.mjs';\nimport { MatRipple } from './ripple.mjs';\nimport { MatCommonModule } from './common-module.mjs';\nimport '@angular/cdk/layout';\nimport '@angular/cdk/platform';\nimport '@angular/cdk/coercion';\nimport '@angular/cdk/bidi';\n\n/** Injection token to be used to override the default options for `mat-checkbox`. */\nconst _c0 = [\"input\"];\nconst _c1 = [\"label\"];\nconst _c2 = [\"*\"];\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = new InjectionToken('mat-checkbox-default-options', {\n  providedIn: 'root',\n  factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    color: 'accent',\n    clickAction: 'check-indeterminate',\n    disabledInteractive: false\n  };\n}\n\n/**\n * Represents the different states that require custom transitions between them.\n * @docs-private\n */\nvar TransitionCheckState;\n(function (TransitionCheckState) {\n  /** The initial state of the component before any user interaction. */\n  TransitionCheckState[TransitionCheckState[\"Init\"] = 0] = \"Init\";\n  /** The state representing the component when it's becoming checked. */\n  TransitionCheckState[TransitionCheckState[\"Checked\"] = 1] = \"Checked\";\n  /** The state representing the component when it's becoming unchecked. */\n  TransitionCheckState[TransitionCheckState[\"Unchecked\"] = 2] = \"Unchecked\";\n  /** The state representing the component when it's becoming indeterminate. */\n  TransitionCheckState[TransitionCheckState[\"Indeterminate\"] = 3] = \"Indeterminate\";\n})(TransitionCheckState || (TransitionCheckState = {}));\n/** Change event object emitted by checkbox. */\nclass MatCheckboxChange {\n  /** The source checkbox of the event. */\n  source;\n  /** The new `checked` value of the checkbox. */\n  checked;\n}\n// Default checkbox configuration.\nconst defaults = MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY();\nclass MatCheckbox {\n  _elementRef = inject(ElementRef);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _ngZone = inject(NgZone);\n  _animationsDisabled = _animationsDisabled();\n  _options = inject(MAT_CHECKBOX_DEFAULT_OPTIONS, {\n    optional: true\n  });\n  /** Focuses the checkbox. */\n  focus() {\n    this._inputElement.nativeElement.focus();\n  }\n  /** Creates the change event that will be emitted by the checkbox. */\n  _createChangeEvent(isChecked) {\n    const event = new MatCheckboxChange();\n    event.source = this;\n    event.checked = isChecked;\n    return event;\n  }\n  /** Gets the element on which to add the animation CSS classes. */\n  _getAnimationTargetElement() {\n    return this._inputElement?.nativeElement;\n  }\n  /** CSS classes to add when transitioning between the different checkbox states. */\n  _animationClasses = {\n    uncheckedToChecked: 'mdc-checkbox--anim-unchecked-checked',\n    uncheckedToIndeterminate: 'mdc-checkbox--anim-unchecked-indeterminate',\n    checkedToUnchecked: 'mdc-checkbox--anim-checked-unchecked',\n    checkedToIndeterminate: 'mdc-checkbox--anim-checked-indeterminate',\n    indeterminateToChecked: 'mdc-checkbox--anim-indeterminate-checked',\n    indeterminateToUnchecked: 'mdc-checkbox--anim-indeterminate-unchecked'\n  };\n  /**\n   * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n   * take precedence so this may be omitted.\n   */\n  ariaLabel = '';\n  /**\n   * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n   */\n  ariaLabelledby = null;\n  /** The 'aria-describedby' attribute is read after the element's label and field type. */\n  ariaDescribedby;\n  /**\n   * Users can specify the `aria-expanded` attribute which will be forwarded to the input element\n   */\n  ariaExpanded;\n  /**\n   * Users can specify the `aria-controls` attribute which will be forwarded to the input element\n   */\n  ariaControls;\n  /** Users can specify the `aria-owns` attribute which will be forwarded to the input element */\n  ariaOwns;\n  _uniqueId;\n  /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n  id;\n  /** Returns the unique id for the visual hidden input. */\n  get inputId() {\n    return `${this.id || this._uniqueId}-input`;\n  }\n  /** Whether the checkbox is required. */\n  required;\n  /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n  labelPosition = 'after';\n  /** Name value will be applied to the input element if present */\n  name = null;\n  /** Event emitted when the checkbox's `checked` value changes. */\n  change = new EventEmitter();\n  /** Event emitted when the checkbox's `indeterminate` value changes. */\n  indeterminateChange = new EventEmitter();\n  /** The value attribute of the native input element */\n  value;\n  /** Whether the checkbox has a ripple. */\n  disableRipple;\n  /** The native `<input type=\"checkbox\">` element */\n  _inputElement;\n  /** The native `<label>` element */\n  _labelElement;\n  /** Tabindex for the checkbox. */\n  tabIndex;\n  // TODO(crisbeto): this should be a ThemePalette, but some internal apps were abusing\n  // the lack of type checking previously and assigning random strings.\n  /**\n   * Theme color of the checkbox. This API is supported in M2 themes only, it\n   * has no effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/checkbox/styling.\n   *\n   * For information on applying color variants in M3, see\n   * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n   */\n  color;\n  /** Whether the checkbox should remain interactive when it is disabled. */\n  disabledInteractive;\n  /**\n   * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n   * @docs-private\n   */\n  _onTouched = () => {};\n  _currentAnimationClass = '';\n  _currentCheckState = TransitionCheckState.Init;\n  _controlValueAccessorChangeFn = () => {};\n  _validatorChangeFn = () => {};\n  constructor() {\n    inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n    const tabIndex = inject(new HostAttributeToken('tabindex'), {\n      optional: true\n    });\n    this._options = this._options || defaults;\n    this.color = this._options.color || defaults.color;\n    this.tabIndex = tabIndex == null ? 0 : parseInt(tabIndex) || 0;\n    this.id = this._uniqueId = inject(_IdGenerator).getId('mat-mdc-checkbox-');\n    this.disabledInteractive = this._options?.disabledInteractive ?? false;\n  }\n  ngOnChanges(changes) {\n    if (changes['required']) {\n      this._validatorChangeFn();\n    }\n  }\n  ngAfterViewInit() {\n    this._syncIndeterminate(this.indeterminate);\n  }\n  /** Whether the checkbox is checked. */\n  get checked() {\n    return this._checked;\n  }\n  set checked(value) {\n    if (value != this.checked) {\n      this._checked = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  _checked = false;\n  /** Whether the checkbox is disabled. */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value) {\n    if (value !== this.disabled) {\n      this._disabled = value;\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  _disabled = false;\n  /**\n   * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n   * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n   * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n   * set to false.\n   */\n  get indeterminate() {\n    return this._indeterminate();\n  }\n  set indeterminate(value) {\n    const changed = value != this._indeterminate();\n    this._indeterminate.set(value);\n    if (changed) {\n      if (value) {\n        this._transitionCheckState(TransitionCheckState.Indeterminate);\n      } else {\n        this._transitionCheckState(this.checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n      }\n      this.indeterminateChange.emit(value);\n    }\n    this._syncIndeterminate(value);\n  }\n  _indeterminate = signal(false, ...(ngDevMode ? [{\n    debugName: \"_indeterminate\"\n  }] : []));\n  _isRippleDisabled() {\n    return this.disableRipple || this.disabled;\n  }\n  /** Method being called whenever the label text changes. */\n  _onLabelTextChange() {\n    // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n    // component will be only marked for check, but no actual change detection runs automatically.\n    // Instead of going back into the zone in order to trigger a change detection which causes\n    // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n    // an explicit change detection for the checkbox view and its children.\n    this._changeDetectorRef.detectChanges();\n  }\n  // Implemented as part of ControlValueAccessor.\n  writeValue(value) {\n    this.checked = !!value;\n  }\n  // Implemented as part of ControlValueAccessor.\n  registerOnChange(fn) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  // Implemented as a part of Validator.\n  validate(control) {\n    return this.required && control.value !== true ? {\n      'required': true\n    } : null;\n  }\n  // Implemented as a part of Validator.\n  registerOnValidatorChange(fn) {\n    this._validatorChangeFn = fn;\n  }\n  _transitionCheckState(newState) {\n    let oldState = this._currentCheckState;\n    let element = this._getAnimationTargetElement();\n    if (oldState === newState || !element) {\n      return;\n    }\n    if (this._currentAnimationClass) {\n      element.classList.remove(this._currentAnimationClass);\n    }\n    this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n    this._currentCheckState = newState;\n    if (this._currentAnimationClass.length > 0) {\n      element.classList.add(this._currentAnimationClass);\n      // Remove the animation class to avoid animation when the checkbox is moved between containers\n      const animationClass = this._currentAnimationClass;\n      this._ngZone.runOutsideAngular(() => {\n        setTimeout(() => {\n          element.classList.remove(animationClass);\n        }, 1000);\n      });\n    }\n  }\n  _emitChangeEvent() {\n    this._controlValueAccessorChangeFn(this.checked);\n    this.change.emit(this._createChangeEvent(this.checked));\n    // Assigning the value again here is redundant, but we have to do it in case it was\n    // changed inside the `change` listener which will cause the input to be out of sync.\n    if (this._inputElement) {\n      this._inputElement.nativeElement.checked = this.checked;\n    }\n  }\n  /** Toggles the `checked` state of the checkbox. */\n  toggle() {\n    this.checked = !this.checked;\n    this._controlValueAccessorChangeFn(this.checked);\n  }\n  _handleInputClick() {\n    const clickAction = this._options?.clickAction;\n    // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n    if (!this.disabled && clickAction !== 'noop') {\n      // When user manually click on the checkbox, `indeterminate` is set to false.\n      if (this.indeterminate && clickAction !== 'check') {\n        Promise.resolve().then(() => {\n          this._indeterminate.set(false);\n          this.indeterminateChange.emit(false);\n        });\n      }\n      this._checked = !this._checked;\n      this._transitionCheckState(this._checked ? TransitionCheckState.Checked : TransitionCheckState.Unchecked);\n      // Emit our custom change event if the native input emitted one.\n      // It is important to only emit it, if the native input triggered one, because\n      // we don't want to trigger a change event, when the `checked` variable changes for example.\n      this._emitChangeEvent();\n    } else if (this.disabled && this.disabledInteractive || !this.disabled && clickAction === 'noop') {\n      // Reset native input when clicked with noop. The native checkbox becomes checked after\n      // click, reset it to be align with `checked` value of `mat-checkbox`.\n      this._inputElement.nativeElement.checked = this.checked;\n      this._inputElement.nativeElement.indeterminate = this.indeterminate;\n    }\n  }\n  _onInteractionEvent(event) {\n    // We always have to stop propagation on the change event.\n    // Otherwise the change event, from the input element, will bubble up and\n    // emit its event object to the `change` output.\n    event.stopPropagation();\n  }\n  _onBlur() {\n    // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n    // Angular does not expect events to be raised during change detection, so any state change\n    // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n    // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n    // telling the form control it has been touched until the next tick.\n    Promise.resolve().then(() => {\n      this._onTouched();\n      this._changeDetectorRef.markForCheck();\n    });\n  }\n  _getAnimationClassForCheckStateTransition(oldState, newState) {\n    // Don't transition if animations are disabled.\n    if (this._animationsDisabled) {\n      return '';\n    }\n    switch (oldState) {\n      case TransitionCheckState.Init:\n        // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n        // [checked] bound to it.\n        if (newState === TransitionCheckState.Checked) {\n          return this._animationClasses.uncheckedToChecked;\n        } else if (newState == TransitionCheckState.Indeterminate) {\n          return this._checked ? this._animationClasses.checkedToIndeterminate : this._animationClasses.uncheckedToIndeterminate;\n        }\n        break;\n      case TransitionCheckState.Unchecked:\n        return newState === TransitionCheckState.Checked ? this._animationClasses.uncheckedToChecked : this._animationClasses.uncheckedToIndeterminate;\n      case TransitionCheckState.Checked:\n        return newState === TransitionCheckState.Unchecked ? this._animationClasses.checkedToUnchecked : this._animationClasses.checkedToIndeterminate;\n      case TransitionCheckState.Indeterminate:\n        return newState === TransitionCheckState.Checked ? this._animationClasses.indeterminateToChecked : this._animationClasses.indeterminateToUnchecked;\n    }\n    return '';\n  }\n  /**\n   * Syncs the indeterminate value with the checkbox DOM node.\n   *\n   * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n   * property is supported on an element boils down to `if (propName in element)`. Domino's\n   * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n   * server-side rendering.\n   */\n  _syncIndeterminate(value) {\n    const nativeCheckbox = this._inputElement;\n    if (nativeCheckbox) {\n      nativeCheckbox.nativeElement.indeterminate = value;\n    }\n  }\n  _onInputClick() {\n    this._handleInputClick();\n  }\n  _onTouchTargetClick() {\n    this._handleInputClick();\n    if (!this.disabled) {\n      // Normally the input should be focused already, but if the click\n      // comes from the touch target, then we might have to focus it ourselves.\n      this._inputElement.nativeElement.focus();\n    }\n  }\n  /**\n   *  Prevent click events that come from the `<label/>` element from bubbling. This prevents the\n   *  click handler on the host from triggering twice when clicking on the `<label/>` element. After\n   *  the click event on the `<label/>` propagates, the browsers dispatches click on the associated\n   *  `<input/>`. By preventing clicks on the label by bubbling, we ensure only one click event\n   *  bubbles when the label is clicked.\n   */\n  _preventBubblingFromLabel(event) {\n    if (!!event.target && this._labelElement.nativeElement.contains(event.target)) {\n      event.stopPropagation();\n    }\n  }\n  static ɵfac = function MatCheckbox_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCheckbox)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatCheckbox,\n    selectors: [[\"mat-checkbox\"]],\n    viewQuery: function MatCheckbox_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._inputElement = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._labelElement = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-mdc-checkbox\"],\n    hostVars: 16,\n    hostBindings: function MatCheckbox_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵdomProperty(\"id\", ctx.id);\n        i0.ɵɵattribute(\"tabindex\", null)(\"aria-label\", null)(\"aria-labelledby\", null);\n        i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"mat-accent\");\n        i0.ɵɵclassProp(\"_mat-animation-noopable\", ctx._animationsDisabled)(\"mdc-checkbox--disabled\", ctx.disabled)(\"mat-mdc-checkbox-disabled\", ctx.disabled)(\"mat-mdc-checkbox-checked\", ctx.checked)(\"mat-mdc-checkbox-disabled-interactive\", ctx.disabledInteractive);\n      }\n    },\n    inputs: {\n      ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n      ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"],\n      ariaDescribedby: [0, \"aria-describedby\", \"ariaDescribedby\"],\n      ariaExpanded: [2, \"aria-expanded\", \"ariaExpanded\", booleanAttribute],\n      ariaControls: [0, \"aria-controls\", \"ariaControls\"],\n      ariaOwns: [0, \"aria-owns\", \"ariaOwns\"],\n      id: \"id\",\n      required: [2, \"required\", \"required\", booleanAttribute],\n      labelPosition: \"labelPosition\",\n      name: \"name\",\n      value: \"value\",\n      disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n      tabIndex: [2, \"tabIndex\", \"tabIndex\", value => value == null ? undefined : numberAttribute(value)],\n      color: \"color\",\n      disabledInteractive: [2, \"disabledInteractive\", \"disabledInteractive\", booleanAttribute],\n      checked: [2, \"checked\", \"checked\", booleanAttribute],\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      indeterminate: [2, \"indeterminate\", \"indeterminate\", booleanAttribute]\n    },\n    outputs: {\n      change: \"change\",\n      indeterminateChange: \"indeterminateChange\"\n    },\n    exportAs: [\"matCheckbox\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => MatCheckbox),\n      multi: true\n    }, {\n      provide: NG_VALIDATORS,\n      useExisting: MatCheckbox,\n      multi: true\n    }]), i0.ɵɵNgOnChangesFeature],\n    ngContentSelectors: _c2,\n    decls: 15,\n    vars: 23,\n    consts: [[\"checkbox\", \"\"], [\"input\", \"\"], [\"label\", \"\"], [\"mat-internal-form-field\", \"\", 3, \"click\", \"labelPosition\"], [1, \"mdc-checkbox\"], [1, \"mat-mdc-checkbox-touch-target\", 3, \"click\"], [\"type\", \"checkbox\", 1, \"mdc-checkbox__native-control\", 3, \"blur\", \"click\", \"change\", \"checked\", \"indeterminate\", \"disabled\", \"id\", \"required\", \"tabIndex\"], [1, \"mdc-checkbox__ripple\"], [1, \"mdc-checkbox__background\"], [\"focusable\", \"false\", \"viewBox\", \"0 0 24 24\", \"aria-hidden\", \"true\", 1, \"mdc-checkbox__checkmark\"], [\"fill\", \"none\", \"d\", \"M1.73,12.91 8.1,19.28 22.79,4.59\", 1, \"mdc-checkbox__checkmark-path\"], [1, \"mdc-checkbox__mixedmark\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-checkbox-ripple\", \"mat-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\"], [1, \"mdc-label\", 3, \"for\"]],\n    template: function MatCheckbox_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 3);\n        i0.ɵɵlistener(\"click\", function MatCheckbox_Template_div_click_0_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._preventBubblingFromLabel($event));\n        });\n        i0.ɵɵelementStart(1, \"div\", 4, 0)(3, \"div\", 5);\n        i0.ɵɵlistener(\"click\", function MatCheckbox_Template_div_click_3_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._onTouchTargetClick());\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"input\", 6, 1);\n        i0.ɵɵlistener(\"blur\", function MatCheckbox_Template_input_blur_4_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._onBlur());\n        })(\"click\", function MatCheckbox_Template_input_click_4_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._onInputClick());\n        })(\"change\", function MatCheckbox_Template_input_change_4_listener($event) {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._onInteractionEvent($event));\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"div\", 7);\n        i0.ɵɵelementStart(7, \"div\", 8);\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(8, \"svg\", 9);\n        i0.ɵɵelement(9, \"path\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵnamespaceHTML();\n        i0.ɵɵelement(10, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"div\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"label\", 13, 2);\n        i0.ɵɵprojection(14);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        const checkbox_r2 = i0.ɵɵreference(2);\n        i0.ɵɵproperty(\"labelPosition\", ctx.labelPosition);\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassProp(\"mdc-checkbox--selected\", ctx.checked);\n        i0.ɵɵproperty(\"checked\", ctx.checked)(\"indeterminate\", ctx.indeterminate)(\"disabled\", ctx.disabled && !ctx.disabledInteractive)(\"id\", ctx.inputId)(\"required\", ctx.required)(\"tabIndex\", ctx.disabled && !ctx.disabledInteractive ? -1 : ctx.tabIndex);\n        i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel || null)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-describedby\", ctx.ariaDescribedby)(\"aria-checked\", ctx.indeterminate ? \"mixed\" : null)(\"aria-controls\", ctx.ariaControls)(\"aria-disabled\", ctx.disabled && ctx.disabledInteractive ? true : null)(\"aria-expanded\", ctx.ariaExpanded)(\"aria-owns\", ctx.ariaOwns)(\"name\", ctx.name)(\"value\", ctx.value);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"matRippleTrigger\", checkbox_r2)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"for\", ctx.inputId);\n      }\n    },\n    dependencies: [MatRipple, _MatInternalFormField],\n    styles: [\".mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom;padding:calc((var(--mat-checkbox-state-layer-size, 40px) - 18px)/2);margin:calc((var(--mat-checkbox-state-layer-size, 40px) - var(--mat-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox:hover>.mdc-checkbox__ripple{opacity:var(--mat-checkbox-unselected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity));background-color:var(--mat-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:hover>.mat-mdc-checkbox-ripple>.mat-ripple-element{background-color:var(--mat-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus+.mdc-checkbox__ripple{opacity:var(--mat-checkbox-unselected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity));background-color:var(--mat-checkbox-unselected-focus-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mat-checkbox-unselected-focus-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:active>.mdc-checkbox__native-control+.mdc-checkbox__ripple{opacity:var(--mat-checkbox-unselected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity));background-color:var(--mat-checkbox-unselected-pressed-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:active>.mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mat-checkbox-unselected-pressed-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked+.mdc-checkbox__ripple{opacity:var(--mat-checkbox-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity));background-color:var(--mat-checkbox-selected-hover-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mat-checkbox-selected-hover-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked+.mdc-checkbox__ripple{opacity:var(--mat-checkbox-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity));background-color:var(--mat-checkbox-selected-focus-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mat-checkbox-selected-focus-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:active>.mdc-checkbox__native-control:checked+.mdc-checkbox__ripple{opacity:var(--mat-checkbox-selected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity));background-color:var(--mat-checkbox-selected-pressed-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:active>.mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mat-checkbox-selected-pressed-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control+.mdc-checkbox__ripple{background-color:var(--mat-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit;z-index:1;width:var(--mat-checkbox-state-layer-size, 40px);height:var(--mat-checkbox-state-layer-size, 40px);top:calc((var(--mat-checkbox-state-layer-size, 40px) - var(--mat-checkbox-state-layer-size, 40px))/2);right:calc((var(--mat-checkbox-state-layer-size, 40px) - var(--mat-checkbox-state-layer-size, 40px))/2);left:calc((var(--mat-checkbox-state-layer-size, 40px) - var(--mat-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox--disabled{cursor:default;pointer-events:none}@media(forced-colors: active){.mdc-checkbox--disabled{opacity:.5}}.mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1);-webkit-print-color-adjust:exact;color-adjust:exact;border-color:var(--mat-checkbox-unselected-icon-color, var(--mat-sys-on-surface-variant));top:calc((var(--mat-checkbox-state-layer-size, 40px) - 18px)/2);left:calc((var(--mat-checkbox-state-layer-size, 40px) - 18px)/2)}.mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background{border-color:var(--mat-checkbox-selected-icon-color, var(--mat-sys-primary));background-color:var(--mat-checkbox-selected-icon-color, var(--mat-sys-primary))}.mdc-checkbox--disabled .mdc-checkbox__background{border-color:var(--mat-checkbox-disabled-unselected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-checkbox__native-control:disabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:disabled:indeterminate~.mdc-checkbox__background{background-color:var(--mat-checkbox-disabled-selected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));border-color:rgba(0,0,0,0)}.mdc-checkbox:hover>.mdc-checkbox__native-control:not(:checked)~.mdc-checkbox__background,.mdc-checkbox:hover>.mdc-checkbox__native-control:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mat-checkbox-unselected-hover-icon-color, var(--mat-sys-on-surface));background-color:rgba(0,0,0,0)}.mdc-checkbox:hover>.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox:hover>.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{border-color:var(--mat-checkbox-selected-hover-icon-color, var(--mat-sys-primary));background-color:var(--mat-checkbox-selected-hover-icon-color, var(--mat-sys-primary))}.mdc-checkbox__native-control:focus:focus:not(:checked)~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mat-checkbox-unselected-focus-icon-color, var(--mat-sys-on-surface))}.mdc-checkbox__native-control:focus:focus:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mat-checkbox-selected-focus-icon-color, var(--mat-sys-primary));background-color:var(--mat-checkbox-selected-focus-icon-color, var(--mat-sys-primary))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox:hover>.mdc-checkbox__native-control~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__background{border-color:var(--mat-checkbox-disabled-unselected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{background-color:var(--mat-checkbox-disabled-selected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));border-color:rgba(0,0,0,0)}.mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms cubic-bezier(0.4, 0, 0.6, 1);color:var(--mat-checkbox-selected-checkmark-color, var(--mat-sys-on-primary))}@media(forced-colors: active){.mdc-checkbox__checkmark{color:CanvasText}}.mdc-checkbox--disabled .mdc-checkbox__checkmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:var(--mat-checkbox-disabled-selected-checkmark-color, var(--mat-sys-surface))}@media(forced-colors: active){.mdc-checkbox--disabled .mdc-checkbox__checkmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:CanvasText}}.mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);border-color:var(--mat-checkbox-selected-checkmark-color, var(--mat-sys-on-primary))}@media(forced-colors: active){.mdc-checkbox__mixedmark{margin:0 1px}}.mdc-checkbox--disabled .mdc-checkbox__mixedmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__mixedmark{border-color:var(--mat-checkbox-disabled-selected-checkmark-color, var(--mat-sys-surface))}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear;transition:none}.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear;transition:none}.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__checkmark{transition:opacity 180ms cubic-bezier(0, 0, 0.2, 1),transform 180ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mat-mdc-checkbox{display:inline-block;position:relative;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mat-mdc-checkbox-touch-target,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__native-control,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__ripple,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mat-mdc-checkbox-ripple::before,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__checkmark,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__mixedmark{transition:none !important;animation:none !important}.mat-mdc-checkbox label{cursor:pointer}.mat-mdc-checkbox .mat-internal-form-field{color:var(--mat-checkbox-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-checkbox-label-text-font, var(--mat-sys-body-medium-font));line-height:var(--mat-checkbox-label-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-checkbox-label-text-size, var(--mat-sys-body-medium-size));letter-spacing:var(--mat-checkbox-label-text-tracking, var(--mat-sys-body-medium-tracking));font-weight:var(--mat-checkbox-label-text-weight, var(--mat-sys-body-medium-weight))}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive{pointer-events:auto}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive input{cursor:default}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{cursor:default;color:var(--mat-checkbox-disabled-label-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-checkbox label:empty{display:none}.mat-mdc-checkbox .mdc-checkbox__ripple{opacity:0}.mat-mdc-checkbox .mat-mdc-checkbox-ripple,.mdc-checkbox__ripple{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-checkbox .mat-mdc-checkbox-ripple:not(:empty),.mdc-checkbox__ripple:not(:empty){transform:translateZ(0)}.mat-mdc-checkbox-ripple .mat-ripple-element{opacity:.1}.mat-mdc-checkbox-touch-target{position:absolute;top:50%;left:50%;height:var(--mat-checkbox-touch-target-size, 48px);width:var(--mat-checkbox-touch-target-size, 48px);transform:translate(-50%, -50%);display:var(--mat-checkbox-touch-target-display, block)}.mat-mdc-checkbox .mat-mdc-checkbox-ripple::before{border-radius:50%}.mdc-checkbox__native-control:focus~.mat-focus-indicator::before{content:\\\"\\\"}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCheckbox, [{\n    type: Component,\n    args: [{\n      selector: 'mat-checkbox',\n      host: {\n        'class': 'mat-mdc-checkbox',\n        '[attr.tabindex]': 'null',\n        '[attr.aria-label]': 'null',\n        '[attr.aria-labelledby]': 'null',\n        '[class._mat-animation-noopable]': '_animationsDisabled',\n        '[class.mdc-checkbox--disabled]': 'disabled',\n        '[id]': 'id',\n        // Add classes that users can use to more easily target disabled or checked checkboxes.\n        '[class.mat-mdc-checkbox-disabled]': 'disabled',\n        '[class.mat-mdc-checkbox-checked]': 'checked',\n        '[class.mat-mdc-checkbox-disabled-interactive]': 'disabledInteractive',\n        '[class]': 'color ? \"mat-\" + color : \"mat-accent\"'\n      },\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => MatCheckbox),\n        multi: true\n      }, {\n        provide: NG_VALIDATORS,\n        useExisting: MatCheckbox,\n        multi: true\n      }],\n      exportAs: 'matCheckbox',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      imports: [MatRipple, _MatInternalFormField],\n      template: \"<div mat-internal-form-field [labelPosition]=\\\"labelPosition\\\" (click)=\\\"_preventBubblingFromLabel($event)\\\">\\n  <div #checkbox class=\\\"mdc-checkbox\\\">\\n    <!-- Render this element first so the input is on top. -->\\n    <div class=\\\"mat-mdc-checkbox-touch-target\\\" (click)=\\\"_onTouchTargetClick()\\\"></div>\\n    <input #input\\n           type=\\\"checkbox\\\"\\n           class=\\\"mdc-checkbox__native-control\\\"\\n           [class.mdc-checkbox--selected]=\\\"checked\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           [attr.aria-checked]=\\\"indeterminate ? 'mixed' : null\\\"\\n           [attr.aria-controls]=\\\"ariaControls\\\"\\n           [attr.aria-disabled]=\\\"disabled && disabledInteractive ? true : null\\\"\\n           [attr.aria-expanded]=\\\"ariaExpanded\\\"\\n           [attr.aria-owns]=\\\"ariaOwns\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.value]=\\\"value\\\"\\n           [checked]=\\\"checked\\\"\\n           [indeterminate]=\\\"indeterminate\\\"\\n           [disabled]=\\\"disabled && !disabledInteractive\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"disabled && !disabledInteractive ? -1 : tabIndex\\\"\\n           (blur)=\\\"_onBlur()\\\"\\n           (click)=\\\"_onInputClick()\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"/>\\n    <div class=\\\"mdc-checkbox__ripple\\\"></div>\\n    <div class=\\\"mdc-checkbox__background\\\">\\n      <svg class=\\\"mdc-checkbox__checkmark\\\"\\n           focusable=\\\"false\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mdc-checkbox__checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\"/>\\n      </svg>\\n      <div class=\\\"mdc-checkbox__mixedmark\\\"></div>\\n    </div>\\n    <div class=\\\"mat-mdc-checkbox-ripple mat-focus-indicator\\\" mat-ripple\\n      [matRippleTrigger]=\\\"checkbox\\\"\\n      [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n      [matRippleCentered]=\\\"true\\\"></div>\\n  </div>\\n  <!--\\n    Avoid putting a click handler on the <label/> to fix duplicate navigation stop on Talk Back\\n    (#14385). Putting a click handler on the <label/> caused this bug because the browser produced\\n    an unnecessary accessibility tree node.\\n  -->\\n  <label class=\\\"mdc-label\\\" #label [for]=\\\"inputId\\\">\\n    <ng-content></ng-content>\\n  </label>\\n</div>\\n\",\n      styles: [\".mdc-checkbox{display:inline-block;position:relative;flex:0 0 18px;box-sizing:content-box;width:18px;height:18px;line-height:0;white-space:nowrap;cursor:pointer;vertical-align:bottom;padding:calc((var(--mat-checkbox-state-layer-size, 40px) - 18px)/2);margin:calc((var(--mat-checkbox-state-layer-size, 40px) - var(--mat-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox:hover>.mdc-checkbox__ripple{opacity:var(--mat-checkbox-unselected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity));background-color:var(--mat-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:hover>.mat-mdc-checkbox-ripple>.mat-ripple-element{background-color:var(--mat-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus+.mdc-checkbox__ripple{opacity:var(--mat-checkbox-unselected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity));background-color:var(--mat-checkbox-unselected-focus-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control:focus~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mat-checkbox-unselected-focus-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:active>.mdc-checkbox__native-control+.mdc-checkbox__ripple{opacity:var(--mat-checkbox-unselected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity));background-color:var(--mat-checkbox-unselected-pressed-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:active>.mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mat-checkbox-unselected-pressed-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked+.mdc-checkbox__ripple{opacity:var(--mat-checkbox-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity));background-color:var(--mat-checkbox-selected-hover-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:hover .mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mat-checkbox-selected-hover-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked+.mdc-checkbox__ripple{opacity:var(--mat-checkbox-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity));background-color:var(--mat-checkbox-selected-focus-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox .mdc-checkbox__native-control:focus:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mat-checkbox-selected-focus-state-layer-color, var(--mat-sys-primary))}.mdc-checkbox:active>.mdc-checkbox__native-control:checked+.mdc-checkbox__ripple{opacity:var(--mat-checkbox-selected-pressed-state-layer-opacity, var(--mat-sys-pressed-state-layer-opacity));background-color:var(--mat-checkbox-selected-pressed-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox:active>.mdc-checkbox__native-control:checked~.mat-mdc-checkbox-ripple .mat-ripple-element{background-color:var(--mat-checkbox-selected-pressed-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control~.mat-mdc-checkbox-ripple .mat-ripple-element,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control+.mdc-checkbox__ripple{background-color:var(--mat-checkbox-unselected-hover-state-layer-color, var(--mat-sys-on-surface))}.mdc-checkbox .mdc-checkbox__native-control{position:absolute;margin:0;padding:0;opacity:0;cursor:inherit;z-index:1;width:var(--mat-checkbox-state-layer-size, 40px);height:var(--mat-checkbox-state-layer-size, 40px);top:calc((var(--mat-checkbox-state-layer-size, 40px) - var(--mat-checkbox-state-layer-size, 40px))/2);right:calc((var(--mat-checkbox-state-layer-size, 40px) - var(--mat-checkbox-state-layer-size, 40px))/2);left:calc((var(--mat-checkbox-state-layer-size, 40px) - var(--mat-checkbox-state-layer-size, 40px))/2)}.mdc-checkbox--disabled{cursor:default;pointer-events:none}@media(forced-colors: active){.mdc-checkbox--disabled{opacity:.5}}.mdc-checkbox__background{display:inline-flex;position:absolute;align-items:center;justify-content:center;box-sizing:border-box;width:18px;height:18px;border:2px solid currentColor;border-radius:2px;background-color:rgba(0,0,0,0);pointer-events:none;will-change:background-color,border-color;transition:background-color 90ms cubic-bezier(0.4, 0, 0.6, 1),border-color 90ms cubic-bezier(0.4, 0, 0.6, 1);-webkit-print-color-adjust:exact;color-adjust:exact;border-color:var(--mat-checkbox-unselected-icon-color, var(--mat-sys-on-surface-variant));top:calc((var(--mat-checkbox-state-layer-size, 40px) - 18px)/2);left:calc((var(--mat-checkbox-state-layer-size, 40px) - 18px)/2)}.mdc-checkbox__native-control:enabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:enabled:indeterminate~.mdc-checkbox__background{border-color:var(--mat-checkbox-selected-icon-color, var(--mat-sys-primary));background-color:var(--mat-checkbox-selected-icon-color, var(--mat-sys-primary))}.mdc-checkbox--disabled .mdc-checkbox__background{border-color:var(--mat-checkbox-disabled-unselected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-checkbox__native-control:disabled:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:disabled:indeterminate~.mdc-checkbox__background{background-color:var(--mat-checkbox-disabled-selected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));border-color:rgba(0,0,0,0)}.mdc-checkbox:hover>.mdc-checkbox__native-control:not(:checked)~.mdc-checkbox__background,.mdc-checkbox:hover>.mdc-checkbox__native-control:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mat-checkbox-unselected-hover-icon-color, var(--mat-sys-on-surface));background-color:rgba(0,0,0,0)}.mdc-checkbox:hover>.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox:hover>.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{border-color:var(--mat-checkbox-selected-hover-icon-color, var(--mat-sys-primary));background-color:var(--mat-checkbox-selected-hover-icon-color, var(--mat-sys-primary))}.mdc-checkbox__native-control:focus:focus:not(:checked)~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:not(:indeterminate)~.mdc-checkbox__background{border-color:var(--mat-checkbox-unselected-focus-icon-color, var(--mat-sys-on-surface))}.mdc-checkbox__native-control:focus:focus:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:focus:focus:indeterminate~.mdc-checkbox__background{border-color:var(--mat-checkbox-selected-focus-icon-color, var(--mat-sys-primary));background-color:var(--mat-checkbox-selected-focus-icon-color, var(--mat-sys-primary))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox:hover>.mdc-checkbox__native-control~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox .mdc-checkbox__native-control:focus~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__background{border-color:var(--mat-checkbox-disabled-unselected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{background-color:var(--mat-checkbox-disabled-selected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));border-color:rgba(0,0,0,0)}.mdc-checkbox__checkmark{position:absolute;top:0;right:0;bottom:0;left:0;width:100%;opacity:0;transition:opacity 180ms cubic-bezier(0.4, 0, 0.6, 1);color:var(--mat-checkbox-selected-checkmark-color, var(--mat-sys-on-primary))}@media(forced-colors: active){.mdc-checkbox__checkmark{color:CanvasText}}.mdc-checkbox--disabled .mdc-checkbox__checkmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:var(--mat-checkbox-disabled-selected-checkmark-color, var(--mat-sys-surface))}@media(forced-colors: active){.mdc-checkbox--disabled .mdc-checkbox__checkmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__checkmark{color:CanvasText}}.mdc-checkbox__checkmark-path{transition:stroke-dashoffset 180ms cubic-bezier(0.4, 0, 0.6, 1);stroke:currentColor;stroke-width:3.12px;stroke-dashoffset:29.7833385;stroke-dasharray:29.7833385}.mdc-checkbox__mixedmark{width:100%;height:0;transform:scaleX(0) rotate(0deg);border-width:1px;border-style:solid;opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1);border-color:var(--mat-checkbox-selected-checkmark-color, var(--mat-sys-on-primary))}@media(forced-colors: active){.mdc-checkbox__mixedmark{margin:0 1px}}.mdc-checkbox--disabled .mdc-checkbox__mixedmark,.mdc-checkbox--disabled.mat-mdc-checkbox-disabled-interactive .mdc-checkbox__mixedmark{border-color:var(--mat-checkbox-disabled-selected-checkmark-color, var(--mat-sys-surface))}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__background,.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__background,.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__background,.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__background{animation-duration:180ms;animation-timing-function:linear}.mdc-checkbox--anim-unchecked-checked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-unchecked-checked-checkmark-path 180ms linear;transition:none}.mdc-checkbox--anim-unchecked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-unchecked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-unchecked .mdc-checkbox__checkmark-path{animation:mdc-checkbox-checked-unchecked-checkmark-path 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__checkmark{animation:mdc-checkbox-checked-indeterminate-checkmark 90ms linear;transition:none}.mdc-checkbox--anim-checked-indeterminate .mdc-checkbox__mixedmark{animation:mdc-checkbox-checked-indeterminate-mixedmark 90ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__checkmark{animation:mdc-checkbox-indeterminate-checked-checkmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-checked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-checked-mixedmark 500ms linear;transition:none}.mdc-checkbox--anim-indeterminate-unchecked .mdc-checkbox__mixedmark{animation:mdc-checkbox-indeterminate-unchecked-mixedmark 300ms linear;transition:none}.mdc-checkbox__native-control:checked~.mdc-checkbox__background,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background{transition:border-color 90ms cubic-bezier(0, 0, 0.2, 1),background-color 90ms cubic-bezier(0, 0, 0.2, 1)}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path,.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path{stroke-dashoffset:0}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__checkmark{transition:opacity 180ms cubic-bezier(0, 0, 0.2, 1),transform 180ms cubic-bezier(0, 0, 0.2, 1);opacity:1}.mdc-checkbox__native-control:checked~.mdc-checkbox__background>.mdc-checkbox__mixedmark{transform:scaleX(1) rotate(-45deg)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__checkmark{transform:rotate(45deg);opacity:0;transition:opacity 90ms cubic-bezier(0.4, 0, 0.6, 1),transform 90ms cubic-bezier(0.4, 0, 0.6, 1)}.mdc-checkbox__native-control:indeterminate~.mdc-checkbox__background>.mdc-checkbox__mixedmark{transform:scaleX(1) rotate(0deg);opacity:1}@keyframes mdc-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:29.7833385}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 1)}100%{stroke-dashoffset:0}}@keyframes mdc-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mdc-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);opacity:1;stroke-dashoffset:0}to{opacity:0;stroke-dashoffset:-29.7833385}}@keyframes mdc-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(45deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(45deg);opacity:0}to{transform:rotate(360deg);opacity:1}}@keyframes mdc-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 1);transform:rotate(-45deg);opacity:0}to{transform:rotate(0deg);opacity:1}}@keyframes mdc-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);transform:rotate(0deg);opacity:1}to{transform:rotate(315deg);opacity:0}}@keyframes mdc-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;transform:scaleX(1);opacity:1}32.8%,100%{transform:scaleX(0);opacity:0}}.mat-mdc-checkbox{display:inline-block;position:relative;-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mat-mdc-checkbox-touch-target,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__native-control,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__ripple,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mat-mdc-checkbox-ripple::before,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__checkmark,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__checkmark>.mdc-checkbox__checkmark-path,.mat-mdc-checkbox._mat-animation-noopable>.mat-internal-form-field>.mdc-checkbox>.mdc-checkbox__background>.mdc-checkbox__mixedmark{transition:none !important;animation:none !important}.mat-mdc-checkbox label{cursor:pointer}.mat-mdc-checkbox .mat-internal-form-field{color:var(--mat-checkbox-label-text-color, var(--mat-sys-on-surface));font-family:var(--mat-checkbox-label-text-font, var(--mat-sys-body-medium-font));line-height:var(--mat-checkbox-label-text-line-height, var(--mat-sys-body-medium-line-height));font-size:var(--mat-checkbox-label-text-size, var(--mat-sys-body-medium-size));letter-spacing:var(--mat-checkbox-label-text-tracking, var(--mat-sys-body-medium-tracking));font-weight:var(--mat-checkbox-label-text-weight, var(--mat-sys-body-medium-weight))}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive{pointer-events:auto}.mat-mdc-checkbox.mat-mdc-checkbox-disabled.mat-mdc-checkbox-disabled-interactive input{cursor:default}.mat-mdc-checkbox.mat-mdc-checkbox-disabled label{cursor:default;color:var(--mat-checkbox-disabled-label-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-mdc-checkbox label:empty{display:none}.mat-mdc-checkbox .mdc-checkbox__ripple{opacity:0}.mat-mdc-checkbox .mat-mdc-checkbox-ripple,.mdc-checkbox__ripple{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-checkbox .mat-mdc-checkbox-ripple:not(:empty),.mdc-checkbox__ripple:not(:empty){transform:translateZ(0)}.mat-mdc-checkbox-ripple .mat-ripple-element{opacity:.1}.mat-mdc-checkbox-touch-target{position:absolute;top:50%;left:50%;height:var(--mat-checkbox-touch-target-size, 48px);width:var(--mat-checkbox-touch-target-size, 48px);transform:translate(-50%, -50%);display:var(--mat-checkbox-touch-target-display, block)}.mat-mdc-checkbox .mat-mdc-checkbox-ripple::before{border-radius:50%}.mdc-checkbox__native-control:focus~.mat-focus-indicator::before{content:\\\"\\\"}\\n\"]\n    }]\n  }], () => [], {\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    ariaDescribedby: [{\n      type: Input,\n      args: ['aria-describedby']\n    }],\n    ariaExpanded: [{\n      type: Input,\n      args: [{\n        alias: 'aria-expanded',\n        transform: booleanAttribute\n      }]\n    }],\n    ariaControls: [{\n      type: Input,\n      args: ['aria-controls']\n    }],\n    ariaOwns: [{\n      type: Input,\n      args: ['aria-owns']\n    }],\n    id: [{\n      type: Input\n    }],\n    required: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    labelPosition: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    change: [{\n      type: Output\n    }],\n    indeterminateChange: [{\n      type: Output\n    }],\n    value: [{\n      type: Input\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    _inputElement: [{\n      type: ViewChild,\n      args: ['input']\n    }],\n    _labelElement: [{\n      type: ViewChild,\n      args: ['label']\n    }],\n    tabIndex: [{\n      type: Input,\n      args: [{\n        transform: value => value == null ? undefined : numberAttribute(value)\n      }]\n    }],\n    color: [{\n      type: Input\n    }],\n    disabledInteractive: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    checked: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    indeterminate: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\nclass MatCheckboxModule {\n  static ɵfac = function MatCheckboxModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCheckboxModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatCheckboxModule,\n    imports: [MatCheckbox, MatCommonModule],\n    exports: [MatCheckbox, MatCommonModule]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [MatCheckbox, MatCommonModule, MatCommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCheckboxModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCheckbox, MatCommonModule],\n      exports: [MatCheckbox, MatCommonModule]\n    }]\n  }], null, null);\n})();\nexport { MAT_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MatCheckbox, MatCheckboxChange, MatCheckboxModule, TransitionCheckState };\n","import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, inject, NgZone, RendererFactory2, Injectable, ElementRef, EventEmitter, Directive, Output, Renderer2, DOCUMENT, booleanAttribute, Input, NgModule } from '@angular/core';\nimport { EMPTY, Subject } from 'rxjs';\nimport { Platform } from './platform2.mjs';\nimport { _CdkPrivateStyleLoader } from './style-loader.mjs';\nimport { coerceElement, coerceNumberProperty } from './element.mjs';\nimport { auditTime } from 'rxjs/operators';\nimport '@angular/common';\n\n/** Component used to load the structural styles of the text field. */\nclass _CdkTextFieldStyleLoader {\n  static ɵfac = function _CdkTextFieldStyleLoader_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || _CdkTextFieldStyleLoader)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: _CdkTextFieldStyleLoader,\n    selectors: [[\"ng-component\"]],\n    hostAttrs: [\"cdk-text-field-style-loader\", \"\"],\n    decls: 0,\n    vars: 0,\n    template: function _CdkTextFieldStyleLoader_Template(rf, ctx) {},\n    styles: [\"textarea.cdk-textarea-autosize{resize:none}textarea.cdk-textarea-autosize-measuring{padding:2px 0 !important;box-sizing:content-box !important;height:auto !important;overflow:hidden !important}textarea.cdk-textarea-autosize-measuring-firefox{padding:2px 0 !important;box-sizing:content-box !important;height:0 !important}@keyframes cdk-text-field-autofill-start{/*!*/}@keyframes cdk-text-field-autofill-end{/*!*/}.cdk-text-field-autofill-monitored:-webkit-autofill{animation:cdk-text-field-autofill-start 0s 1ms}.cdk-text-field-autofill-monitored:not(:-webkit-autofill){animation:cdk-text-field-autofill-end 0s 1ms}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(_CdkTextFieldStyleLoader, [{\n    type: Component,\n    args: [{\n      template: '',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      host: {\n        'cdk-text-field-style-loader': ''\n      },\n      styles: [\"textarea.cdk-textarea-autosize{resize:none}textarea.cdk-textarea-autosize-measuring{padding:2px 0 !important;box-sizing:content-box !important;height:auto !important;overflow:hidden !important}textarea.cdk-textarea-autosize-measuring-firefox{padding:2px 0 !important;box-sizing:content-box !important;height:0 !important}@keyframes cdk-text-field-autofill-start{/*!*/}@keyframes cdk-text-field-autofill-end{/*!*/}.cdk-text-field-autofill-monitored:-webkit-autofill{animation:cdk-text-field-autofill-start 0s 1ms}.cdk-text-field-autofill-monitored:not(:-webkit-autofill){animation:cdk-text-field-autofill-end 0s 1ms}\\n\"]\n    }]\n  }], null, null);\n})();\n\n/** Options to pass to the animationstart listener. */\nconst listenerOptions = {\n  passive: true\n};\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n  _platform = inject(Platform);\n  _ngZone = inject(NgZone);\n  _renderer = inject(RendererFactory2).createRenderer(null, null);\n  _styleLoader = inject(_CdkPrivateStyleLoader);\n  _monitoredElements = new Map();\n  constructor() {}\n  monitor(elementOrRef) {\n    if (!this._platform.isBrowser) {\n      return EMPTY;\n    }\n    this._styleLoader.load(_CdkTextFieldStyleLoader);\n    const element = coerceElement(elementOrRef);\n    const info = this._monitoredElements.get(element);\n    if (info) {\n      return info.subject;\n    }\n    const subject = new Subject();\n    const cssClass = 'cdk-text-field-autofilled';\n    const listener = event => {\n      // Animation events fire on initial element render, we check for the presence of the autofill\n      // CSS class to make sure this is a real change in state, not just the initial render before\n      // we fire off events.\n      if (event.animationName === 'cdk-text-field-autofill-start' && !element.classList.contains(cssClass)) {\n        element.classList.add(cssClass);\n        this._ngZone.run(() => subject.next({\n          target: event.target,\n          isAutofilled: true\n        }));\n      } else if (event.animationName === 'cdk-text-field-autofill-end' && element.classList.contains(cssClass)) {\n        element.classList.remove(cssClass);\n        this._ngZone.run(() => subject.next({\n          target: event.target,\n          isAutofilled: false\n        }));\n      }\n    };\n    const unlisten = this._ngZone.runOutsideAngular(() => {\n      element.classList.add('cdk-text-field-autofill-monitored');\n      return this._renderer.listen(element, 'animationstart', listener, listenerOptions);\n    });\n    this._monitoredElements.set(element, {\n      subject,\n      unlisten\n    });\n    return subject;\n  }\n  stopMonitoring(elementOrRef) {\n    const element = coerceElement(elementOrRef);\n    const info = this._monitoredElements.get(element);\n    if (info) {\n      info.unlisten();\n      info.subject.complete();\n      element.classList.remove('cdk-text-field-autofill-monitored');\n      element.classList.remove('cdk-text-field-autofilled');\n      this._monitoredElements.delete(element);\n    }\n  }\n  ngOnDestroy() {\n    this._monitoredElements.forEach((_info, element) => this.stopMonitoring(element));\n  }\n  static ɵfac = function AutofillMonitor_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || AutofillMonitor)();\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: AutofillMonitor,\n    factory: AutofillMonitor.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AutofillMonitor, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [], null);\n})();\n/** A directive that can be used to monitor the autofill state of an input. */\nclass CdkAutofill {\n  _elementRef = inject(ElementRef);\n  _autofillMonitor = inject(AutofillMonitor);\n  /** Emits when the autofill state of the element changes. */\n  cdkAutofill = new EventEmitter();\n  constructor() {}\n  ngOnInit() {\n    this._autofillMonitor.monitor(this._elementRef).subscribe(event => this.cdkAutofill.emit(event));\n  }\n  ngOnDestroy() {\n    this._autofillMonitor.stopMonitoring(this._elementRef);\n  }\n  static ɵfac = function CdkAutofill_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkAutofill)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkAutofill,\n    selectors: [[\"\", \"cdkAutofill\", \"\"]],\n    outputs: {\n      cdkAutofill: \"cdkAutofill\"\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkAutofill, [{\n    type: Directive,\n    args: [{\n      selector: '[cdkAutofill]'\n    }]\n  }], () => [], {\n    cdkAutofill: [{\n      type: Output\n    }]\n  });\n})();\n\n/** Directive to automatically resize a textarea to fit its content. */\nclass CdkTextareaAutosize {\n  _elementRef = inject(ElementRef);\n  _platform = inject(Platform);\n  _ngZone = inject(NgZone);\n  _renderer = inject(Renderer2);\n  _resizeEvents = new Subject();\n  /** Keep track of the previous textarea value to avoid resizing when the value hasn't changed. */\n  _previousValue;\n  _initialHeight;\n  _destroyed = new Subject();\n  _listenerCleanups;\n  _minRows;\n  _maxRows;\n  _enabled = true;\n  /**\n   * Value of minRows as of last resize. If the minRows has decreased, the\n   * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n   * does not have the same problem because it does not affect the textarea's scrollHeight.\n   */\n  _previousMinRows = -1;\n  _textareaElement;\n  /** Minimum amount of rows in the textarea. */\n  get minRows() {\n    return this._minRows;\n  }\n  set minRows(value) {\n    this._minRows = coerceNumberProperty(value);\n    this._setMinHeight();\n  }\n  /** Maximum amount of rows in the textarea. */\n  get maxRows() {\n    return this._maxRows;\n  }\n  set maxRows(value) {\n    this._maxRows = coerceNumberProperty(value);\n    this._setMaxHeight();\n  }\n  /** Whether autosizing is enabled or not */\n  get enabled() {\n    return this._enabled;\n  }\n  set enabled(value) {\n    // Only act if the actual value changed. This specifically helps to not run\n    // resizeToFitContent too early (i.e. before ngAfterViewInit)\n    if (this._enabled !== value) {\n      (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n    }\n  }\n  get placeholder() {\n    return this._textareaElement.placeholder;\n  }\n  set placeholder(value) {\n    this._cachedPlaceholderHeight = undefined;\n    if (value) {\n      this._textareaElement.setAttribute('placeholder', value);\n    } else {\n      this._textareaElement.removeAttribute('placeholder');\n    }\n    this._cacheTextareaPlaceholderHeight();\n  }\n  /** Cached height of a textarea with a single row. */\n  _cachedLineHeight;\n  /** Cached height of a textarea with only the placeholder. */\n  _cachedPlaceholderHeight;\n  /** Cached scroll top of a textarea */\n  _cachedScrollTop;\n  /** Used to reference correct document/window */\n  _document = inject(DOCUMENT);\n  _hasFocus;\n  _isViewInited = false;\n  constructor() {\n    const styleLoader = inject(_CdkPrivateStyleLoader);\n    styleLoader.load(_CdkTextFieldStyleLoader);\n    this._textareaElement = this._elementRef.nativeElement;\n  }\n  /** Sets the minimum height of the textarea as determined by minRows. */\n  _setMinHeight() {\n    const minHeight = this.minRows && this._cachedLineHeight ? `${this.minRows * this._cachedLineHeight}px` : null;\n    if (minHeight) {\n      this._textareaElement.style.minHeight = minHeight;\n    }\n  }\n  /** Sets the maximum height of the textarea as determined by maxRows. */\n  _setMaxHeight() {\n    const maxHeight = this.maxRows && this._cachedLineHeight ? `${this.maxRows * this._cachedLineHeight}px` : null;\n    if (maxHeight) {\n      this._textareaElement.style.maxHeight = maxHeight;\n    }\n  }\n  ngAfterViewInit() {\n    if (this._platform.isBrowser) {\n      // Remember the height which we started with in case autosizing is disabled\n      this._initialHeight = this._textareaElement.style.height;\n      this.resizeToFitContent();\n      this._ngZone.runOutsideAngular(() => {\n        this._listenerCleanups = [this._renderer.listen('window', 'resize', () => this._resizeEvents.next()), this._renderer.listen(this._textareaElement, 'focus', this._handleFocusEvent), this._renderer.listen(this._textareaElement, 'blur', this._handleFocusEvent)];\n        this._resizeEvents.pipe(auditTime(16)).subscribe(() => {\n          // Clear the cached heights since the styles can change\n          // when the window is resized (e.g. by media queries).\n          this._cachedLineHeight = this._cachedPlaceholderHeight = undefined;\n          this.resizeToFitContent(true);\n        });\n      });\n      this._isViewInited = true;\n      this.resizeToFitContent(true);\n    }\n  }\n  ngOnDestroy() {\n    this._listenerCleanups?.forEach(cleanup => cleanup());\n    this._resizeEvents.complete();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /**\n   * Cache the height of a single-row textarea if it has not already been cached.\n   *\n   * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n   * maxRows. For the initial version, we will assume that the height of a single line in the\n   * textarea does not ever change.\n   */\n  _cacheTextareaLineHeight() {\n    if (this._cachedLineHeight) {\n      return;\n    }\n    // Use a clone element because we have to override some styles.\n    const textareaClone = this._textareaElement.cloneNode(false);\n    const cloneStyles = textareaClone.style;\n    textareaClone.rows = 1;\n    // Use `position: absolute` so that this doesn't cause a browser layout and use\n    // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n    // would affect the height.\n    cloneStyles.position = 'absolute';\n    cloneStyles.visibility = 'hidden';\n    cloneStyles.border = 'none';\n    cloneStyles.padding = '0';\n    cloneStyles.height = '';\n    cloneStyles.minHeight = '';\n    cloneStyles.maxHeight = '';\n    // App styles might be messing with the height through the positioning properties.\n    cloneStyles.top = cloneStyles.bottom = cloneStyles.left = cloneStyles.right = 'auto';\n    // In Firefox it happens that textarea elements are always bigger than the specified amount\n    // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n    // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n    // to hidden. This ensures that there is no invalid calculation of the line height.\n    // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n    cloneStyles.overflow = 'hidden';\n    this._textareaElement.parentNode.appendChild(textareaClone);\n    this._cachedLineHeight = textareaClone.clientHeight;\n    textareaClone.remove();\n    // Min and max heights have to be re-calculated if the cached line height changes\n    this._setMinHeight();\n    this._setMaxHeight();\n  }\n  _measureScrollHeight() {\n    const element = this._textareaElement;\n    const previousMargin = element.style.marginBottom || '';\n    const isFirefox = this._platform.FIREFOX;\n    const needsMarginFiller = isFirefox && this._hasFocus;\n    const measuringClass = isFirefox ? 'cdk-textarea-autosize-measuring-firefox' : 'cdk-textarea-autosize-measuring';\n    // In some cases the page might move around while we're measuring the `textarea` on Firefox. We\n    // work around it by assigning a temporary margin with the same height as the `textarea` so that\n    // it occupies the same amount of space. See #23233.\n    if (needsMarginFiller) {\n      element.style.marginBottom = `${element.clientHeight}px`;\n    }\n    // Reset the textarea height to auto in order to shrink back to its default size.\n    // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n    element.classList.add(measuringClass);\n    // The measuring class includes a 2px padding to workaround an issue with Chrome,\n    // so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n    const scrollHeight = element.scrollHeight - 4;\n    element.classList.remove(measuringClass);\n    if (needsMarginFiller) {\n      element.style.marginBottom = previousMargin;\n    }\n    return scrollHeight;\n  }\n  _cacheTextareaPlaceholderHeight() {\n    if (!this._isViewInited || this._cachedPlaceholderHeight != undefined) {\n      return;\n    }\n    if (!this.placeholder) {\n      this._cachedPlaceholderHeight = 0;\n      return;\n    }\n    const value = this._textareaElement.value;\n    this._textareaElement.value = this._textareaElement.placeholder;\n    this._cachedPlaceholderHeight = this._measureScrollHeight();\n    this._textareaElement.value = value;\n  }\n  /** Handles `focus` and `blur` events. */\n  _handleFocusEvent = event => {\n    this._hasFocus = event.type === 'focus';\n  };\n  ngDoCheck() {\n    if (this._platform.isBrowser) {\n      this.resizeToFitContent();\n    }\n  }\n  /**\n   * Resize the textarea to fit its content.\n   * @param force Whether to force a height recalculation. By default the height will be\n   *    recalculated only if the value changed since the last call.\n   */\n  resizeToFitContent(force = false) {\n    // If autosizing is disabled, just skip everything else\n    if (!this._enabled) {\n      return;\n    }\n    this._cacheTextareaLineHeight();\n    this._cacheTextareaPlaceholderHeight();\n    this._cachedScrollTop = this._textareaElement.scrollTop;\n    // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n    // in checking the height of the textarea.\n    if (!this._cachedLineHeight) {\n      return;\n    }\n    const textarea = this._elementRef.nativeElement;\n    const value = textarea.value;\n    // Only resize if the value or minRows have changed since these calculations can be expensive.\n    if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n      return;\n    }\n    const scrollHeight = this._measureScrollHeight();\n    const height = Math.max(scrollHeight, this._cachedPlaceholderHeight || 0);\n    // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n    textarea.style.height = `${height}px`;\n    this._ngZone.runOutsideAngular(() => {\n      if (typeof requestAnimationFrame !== 'undefined') {\n        requestAnimationFrame(() => this._scrollToCaretPosition(textarea));\n      } else {\n        setTimeout(() => this._scrollToCaretPosition(textarea));\n      }\n    });\n    this._previousValue = value;\n    this._previousMinRows = this._minRows;\n  }\n  /**\n   * Resets the textarea to its original size\n   */\n  reset() {\n    // Do not try to change the textarea, if the initialHeight has not been determined yet\n    // This might potentially remove styles when reset() is called before ngAfterViewInit\n    if (this._initialHeight !== undefined) {\n      this._textareaElement.style.height = this._initialHeight;\n    }\n  }\n  _noopInputHandler() {\n    // no-op handler that ensures we're running change detection on input events.\n  }\n  /**\n   * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n   * prevent it from scrolling to the caret position. We need to re-set the selection\n   * in order for it to scroll to the proper position.\n   */\n  _scrollToCaretPosition(textarea) {\n    const {\n      selectionStart,\n      selectionEnd\n    } = textarea;\n    // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n    // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n    // between the time we requested the animation frame and when it was executed.\n    // Also note that we have to assert that the textarea is focused before we set the\n    // selection range. Setting the selection range on a non-focused textarea will cause\n    // it to receive focus on IE and Edge.\n    if (!this._destroyed.isStopped && this._hasFocus) {\n      textarea.setSelectionRange(selectionStart, selectionEnd);\n      textarea.scrollTop = this._cachedScrollTop;\n    }\n  }\n  static ɵfac = function CdkTextareaAutosize_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CdkTextareaAutosize)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: CdkTextareaAutosize,\n    selectors: [[\"textarea\", \"cdkTextareaAutosize\", \"\"]],\n    hostAttrs: [\"rows\", \"1\", 1, \"cdk-textarea-autosize\"],\n    hostBindings: function CdkTextareaAutosize_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"input\", function CdkTextareaAutosize_input_HostBindingHandler() {\n          return ctx._noopInputHandler();\n        });\n      }\n    },\n    inputs: {\n      minRows: [0, \"cdkAutosizeMinRows\", \"minRows\"],\n      maxRows: [0, \"cdkAutosizeMaxRows\", \"maxRows\"],\n      enabled: [2, \"cdkTextareaAutosize\", \"enabled\", booleanAttribute],\n      placeholder: \"placeholder\"\n    },\n    exportAs: [\"cdkTextareaAutosize\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CdkTextareaAutosize, [{\n    type: Directive,\n    args: [{\n      selector: 'textarea[cdkTextareaAutosize]',\n      exportAs: 'cdkTextareaAutosize',\n      host: {\n        'class': 'cdk-textarea-autosize',\n        // Textarea elements that have the directive applied should have a single row by default.\n        // Browsers normally show two rows by default and therefore this limits the minRows binding.\n        'rows': '1',\n        '(input)': '_noopInputHandler()'\n      }\n    }]\n  }], () => [], {\n    minRows: [{\n      type: Input,\n      args: ['cdkAutosizeMinRows']\n    }],\n    maxRows: [{\n      type: Input,\n      args: ['cdkAutosizeMaxRows']\n    }],\n    enabled: [{\n      type: Input,\n      args: [{\n        alias: 'cdkTextareaAutosize',\n        transform: booleanAttribute\n      }]\n    }],\n    placeholder: [{\n      type: Input\n    }]\n  });\n})();\nclass TextFieldModule {\n  static ɵfac = function TextFieldModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TextFieldModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: TextFieldModule,\n    imports: [CdkAutofill, CdkTextareaAutosize],\n    exports: [CdkAutofill, CdkTextareaAutosize]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(TextFieldModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CdkAutofill, CdkTextareaAutosize],\n      exports: [CdkAutofill, CdkTextareaAutosize]\n    }]\n  }], null, null);\n})();\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n","import { InjectionToken } from '@angular/core';\n\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\nexport { MAT_INPUT_VALUE_ACCESSOR };\n\n","import { ObserversModule } from '@angular/cdk/observers';\nimport * as i0 from '@angular/core';\nimport { NgModule } from '@angular/core';\nimport { MatFormField, MatLabel, MatError, MatHint, MatPrefix, MatSuffix } from './form-field2.mjs';\nimport { MatCommonModule } from './common-module.mjs';\nclass MatFormFieldModule {\n  static ɵfac = function MatFormFieldModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatFormFieldModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatFormFieldModule,\n    imports: [MatCommonModule, ObserversModule, MatFormField, MatLabel, MatError, MatHint, MatPrefix, MatSuffix],\n    exports: [MatFormField, MatLabel, MatHint, MatError, MatPrefix, MatSuffix, MatCommonModule]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [MatCommonModule, ObserversModule, MatFormField, MatCommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatFormFieldModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, ObserversModule, MatFormField, MatLabel, MatError, MatHint, MatPrefix, MatSuffix],\n      exports: [MatFormField, MatLabel, MatHint, MatError, MatPrefix, MatSuffix, MatCommonModule]\n    }]\n  }], null, null);\n})();\nexport { MatFormFieldModule };\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Platform, getSupportedInputTypes } from '@angular/cdk/platform';\nimport { AutofillMonitor, TextFieldModule } from '@angular/cdk/text-field';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, NgZone, Renderer2, isSignal, effect, booleanAttribute, Directive, Input, NgModule } from '@angular/core';\nimport { _IdGenerator } from '@angular/cdk/a11y';\nimport { NgControl, Validators, NgForm, FormGroupDirective } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport { MAT_INPUT_VALUE_ACCESSOR } from './input-value-accessor.mjs';\nimport { MAT_FORM_FIELD, MatFormFieldControl } from './form-field2.mjs';\nexport { MatError, MatFormField, MatHint, MatLabel, MatPrefix, MatSuffix } from './form-field2.mjs';\nimport { ErrorStateMatcher } from './error-options.mjs';\nimport { _ErrorStateTracker } from './error-state.mjs';\nimport { MatFormFieldModule } from './form-field-module.mjs';\nimport { MatCommonModule } from './common-module.mjs';\nimport '@angular/cdk/bidi';\nimport '@angular/common';\nimport 'rxjs/operators';\nimport '@angular/cdk/observers/private';\nimport './animation.mjs';\nimport '@angular/cdk/layout';\nimport '@angular/cdk/observers';\n\n/** @docs-private */\nfunction getMatInputUnsupportedTypeError(type) {\n  return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\nconst MAT_INPUT_INVALID_TYPES = ['button', 'checkbox', 'file', 'hidden', 'image', 'radio', 'range', 'reset', 'submit'];\n/** Injection token that can be used to provide the default options for the input. */\nconst MAT_INPUT_CONFIG = new InjectionToken('MAT_INPUT_CONFIG');\nclass MatInput {\n  _elementRef = inject(ElementRef);\n  _platform = inject(Platform);\n  ngControl = inject(NgControl, {\n    optional: true,\n    self: true\n  });\n  _autofillMonitor = inject(AutofillMonitor);\n  _ngZone = inject(NgZone);\n  _formField = inject(MAT_FORM_FIELD, {\n    optional: true\n  });\n  _renderer = inject(Renderer2);\n  _uid = inject(_IdGenerator).getId('mat-input-');\n  _previousNativeValue;\n  _inputValueAccessor;\n  _signalBasedValueAccessor;\n  _previousPlaceholder;\n  _errorStateTracker;\n  _config = inject(MAT_INPUT_CONFIG, {\n    optional: true\n  });\n  _cleanupIosKeyup;\n  _cleanupWebkitWheel;\n  /** Whether the component is being rendered on the server. */\n  _isServer;\n  /** Whether the component is a native html select. */\n  _isNativeSelect;\n  /** Whether the component is a textarea. */\n  _isTextarea;\n  /** Whether the input is inside of a form field. */\n  _isInFormField;\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  focused = false;\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  stateChanges = new Subject();\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  controlType = 'mat-input';\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  autofilled = false;\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = coerceBooleanProperty(value);\n    // Browsers may not fire the blur event if the input is disabled too quickly.\n    // Reset from here to ensure that the element doesn't become stuck.\n    if (this.focused) {\n      this.focused = false;\n      this.stateChanges.next();\n    }\n  }\n  _disabled = false;\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get id() {\n    return this._id;\n  }\n  set id(value) {\n    this._id = value || this._uid;\n  }\n  _id;\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  placeholder;\n  /**\n   * Name of the input.\n   * @docs-private\n   */\n  name;\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get required() {\n    return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n  }\n  set required(value) {\n    this._required = coerceBooleanProperty(value);\n  }\n  _required;\n  /** Input type of the element. */\n  get type() {\n    return this._type;\n  }\n  set type(value) {\n    this._type = value || 'text';\n    this._validateType();\n    // When using Angular inputs, developers are no longer able to set the properties on the native\n    // input element. To ensure that bindings for `type` work, we need to sync the setter\n    // with the native property. Textarea elements don't support the type property or attribute.\n    if (!this._isTextarea && getSupportedInputTypes().has(this._type)) {\n      this._elementRef.nativeElement.type = this._type;\n    }\n  }\n  _type = 'text';\n  /** An object used to control when error messages are shown. */\n  get errorStateMatcher() {\n    return this._errorStateTracker.matcher;\n  }\n  set errorStateMatcher(value) {\n    this._errorStateTracker.matcher = value;\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  userAriaDescribedBy;\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get value() {\n    return this._signalBasedValueAccessor ? this._signalBasedValueAccessor.value() : this._inputValueAccessor.value;\n  }\n  set value(value) {\n    if (value !== this.value) {\n      if (this._signalBasedValueAccessor) {\n        this._signalBasedValueAccessor.value.set(value);\n      } else {\n        this._inputValueAccessor.value = value;\n      }\n      this.stateChanges.next();\n    }\n  }\n  /** Whether the element is readonly. */\n  get readonly() {\n    return this._readonly;\n  }\n  set readonly(value) {\n    this._readonly = coerceBooleanProperty(value);\n  }\n  _readonly = false;\n  /** Whether the input should remain interactive when it is disabled. */\n  disabledInteractive;\n  /** Whether the input is in an error state. */\n  get errorState() {\n    return this._errorStateTracker.errorState;\n  }\n  set errorState(value) {\n    this._errorStateTracker.errorState = value;\n  }\n  _neverEmptyInputTypes = ['date', 'datetime', 'datetime-local', 'month', 'time', 'week'].filter(t => getSupportedInputTypes().has(t));\n  constructor() {\n    const parentForm = inject(NgForm, {\n      optional: true\n    });\n    const parentFormGroup = inject(FormGroupDirective, {\n      optional: true\n    });\n    const defaultErrorStateMatcher = inject(ErrorStateMatcher);\n    const accessor = inject(MAT_INPUT_VALUE_ACCESSOR, {\n      optional: true,\n      self: true\n    });\n    const element = this._elementRef.nativeElement;\n    const nodeName = element.nodeName.toLowerCase();\n    if (accessor) {\n      if (isSignal(accessor.value)) {\n        this._signalBasedValueAccessor = accessor;\n      } else {\n        this._inputValueAccessor = accessor;\n      }\n    } else {\n      // If no input value accessor was explicitly specified, use the element as the input value\n      // accessor.\n      this._inputValueAccessor = element;\n    }\n    this._previousNativeValue = this.value;\n    // Force setter to be called in case id was not specified.\n    this.id = this.id;\n    // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n    // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n    // exists on iOS, we only bother to install the listener on iOS.\n    if (this._platform.IOS) {\n      this._ngZone.runOutsideAngular(() => {\n        this._cleanupIosKeyup = this._renderer.listen(element, 'keyup', this._iOSKeyupListener);\n      });\n    }\n    this._errorStateTracker = new _ErrorStateTracker(defaultErrorStateMatcher, this.ngControl, parentFormGroup, parentForm, this.stateChanges);\n    this._isServer = !this._platform.isBrowser;\n    this._isNativeSelect = nodeName === 'select';\n    this._isTextarea = nodeName === 'textarea';\n    this._isInFormField = !!this._formField;\n    this.disabledInteractive = this._config?.disabledInteractive || false;\n    if (this._isNativeSelect) {\n      this.controlType = element.multiple ? 'mat-native-select-multiple' : 'mat-native-select';\n    }\n    if (this._signalBasedValueAccessor) {\n      effect(() => {\n        // Read the value so the effect can register the dependency.\n        this._signalBasedValueAccessor.value();\n        this.stateChanges.next();\n      });\n    }\n  }\n  ngAfterViewInit() {\n    if (this._platform.isBrowser) {\n      this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(event => {\n        this.autofilled = event.isAutofilled;\n        this.stateChanges.next();\n      });\n    }\n  }\n  ngOnChanges() {\n    this.stateChanges.next();\n  }\n  ngOnDestroy() {\n    this.stateChanges.complete();\n    if (this._platform.isBrowser) {\n      this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n    }\n    this._cleanupIosKeyup?.();\n    this._cleanupWebkitWheel?.();\n  }\n  ngDoCheck() {\n    if (this.ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this.updateErrorState();\n      // Since the input isn't a `ControlValueAccessor`, we don't have a good way of knowing when\n      // the disabled state has changed. We can't use the `ngControl.statusChanges`, because it\n      // won't fire if the input is disabled with `emitEvents = false`, despite the input becoming\n      // disabled.\n      if (this.ngControl.disabled !== null && this.ngControl.disabled !== this.disabled) {\n        this.disabled = this.ngControl.disabled;\n        this.stateChanges.next();\n      }\n    }\n    // We need to dirty-check the native element's value, because there are some cases where\n    // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n    // updating the value using `emitEvent: false`).\n    this._dirtyCheckNativeValue();\n    // We need to dirty-check and set the placeholder attribute ourselves, because whether it's\n    // present or not depends on a query which is prone to \"changed after checked\" errors.\n    this._dirtyCheckPlaceholder();\n  }\n  /** Focuses the input. */\n  focus(options) {\n    this._elementRef.nativeElement.focus(options);\n  }\n  /** Refreshes the error state of the input. */\n  updateErrorState() {\n    this._errorStateTracker.updateErrorState();\n  }\n  /** Callback for the cases where the focused state of the input changes. */\n  _focusChanged(isFocused) {\n    if (isFocused === this.focused) {\n      return;\n    }\n    if (!this._isNativeSelect && isFocused && this.disabled && this.disabledInteractive) {\n      const element = this._elementRef.nativeElement;\n      // Focusing an input that has text will cause all the text to be selected. Clear it since\n      // the user won't be able to change it. This is based on the internal implementation.\n      if (element.type === 'number') {\n        // setSelectionRange doesn't work on number inputs so it needs to be set briefly to text.\n        element.type = 'text';\n        element.setSelectionRange(0, 0);\n        element.type = 'number';\n      } else {\n        element.setSelectionRange(0, 0);\n      }\n    }\n    this.focused = isFocused;\n    this.stateChanges.next();\n  }\n  _onInput() {\n    // This is a noop function and is used to let Angular know whenever the value changes.\n    // Angular will run a new change detection each time the `input` event has been dispatched.\n    // It's necessary that Angular recognizes the value change, because when floatingLabel\n    // is set to false and Angular forms aren't used, the placeholder won't recognize the\n    // value changes and will not disappear.\n    // Listening to the input event wouldn't be necessary when the input is using the\n    // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n  }\n  /** Does some manual dirty checking on the native input `value` property. */\n  _dirtyCheckNativeValue() {\n    const newValue = this._elementRef.nativeElement.value;\n    if (this._previousNativeValue !== newValue) {\n      this._previousNativeValue = newValue;\n      this.stateChanges.next();\n    }\n  }\n  /** Does some manual dirty checking on the native input `placeholder` attribute. */\n  _dirtyCheckPlaceholder() {\n    const placeholder = this._getPlaceholder();\n    if (placeholder !== this._previousPlaceholder) {\n      const element = this._elementRef.nativeElement;\n      this._previousPlaceholder = placeholder;\n      placeholder ? element.setAttribute('placeholder', placeholder) : element.removeAttribute('placeholder');\n    }\n  }\n  /** Gets the current placeholder of the form field. */\n  _getPlaceholder() {\n    return this.placeholder || null;\n  }\n  /** Make sure the input is a supported type. */\n  _validateType() {\n    if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1 && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw getMatInputUnsupportedTypeError(this._type);\n    }\n  }\n  /** Checks whether the input type is one of the types that are never empty. */\n  _isNeverEmpty() {\n    return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n  }\n  /** Checks whether the input is invalid based on the native validation. */\n  _isBadInput() {\n    // The `validity` property won't be present on platform-server.\n    let validity = this._elementRef.nativeElement.validity;\n    return validity && validity.badInput;\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get empty() {\n    return !this._isNeverEmpty() && !this._elementRef.nativeElement.value && !this._isBadInput() && !this.autofilled;\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get shouldLabelFloat() {\n    if (this._isNativeSelect) {\n      // For a single-selection `<select>`, the label should float when the selected option has\n      // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n      // overlapping the label with the options.\n      const selectElement = this._elementRef.nativeElement;\n      const firstOption = selectElement.options[0];\n      // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n      // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n      return this.focused || selectElement.multiple || !this.empty || !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label);\n    } else {\n      return this.focused && !this.disabled || !this.empty;\n    }\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get describedByIds() {\n    const element = this._elementRef.nativeElement;\n    const existingDescribedBy = element.getAttribute('aria-describedby');\n    return existingDescribedBy?.split(' ') || [];\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  setDescribedByIds(ids) {\n    const element = this._elementRef.nativeElement;\n    if (ids.length) {\n      element.setAttribute('aria-describedby', ids.join(' '));\n    } else {\n      element.removeAttribute('aria-describedby');\n    }\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  onContainerClick() {\n    // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n    // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n    // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n    if (!this.focused) {\n      this.focus();\n    }\n  }\n  /** Whether the form control is a native select that is displayed inline. */\n  _isInlineSelect() {\n    const element = this._elementRef.nativeElement;\n    return this._isNativeSelect && (element.multiple || element.size > 1);\n  }\n  _iOSKeyupListener = event => {\n    const el = event.target;\n    // Note: We specifically check for 0, rather than `!el.selectionStart`, because the two\n    // indicate different things. If the value is 0, it means that the caret is at the start\n    // of the input, whereas a value of `null` means that the input doesn't support\n    // manipulating the selection range. Inputs that don't support setting the selection range\n    // will throw an error so we want to avoid calling `setSelectionRange` on them. See:\n    // https://html.spec.whatwg.org/multipage/input.html#do-not-apply\n    if (!el.value && el.selectionStart === 0 && el.selectionEnd === 0) {\n      // Note: Just setting `0, 0` doesn't fix the issue. Setting\n      // `1, 1` fixes it for the first time that you type text and\n      // then hold delete. Toggling to `1, 1` and then back to\n      // `0, 0` seems to completely fix it.\n      el.setSelectionRange(1, 1);\n      el.setSelectionRange(0, 0);\n    }\n  };\n  /** Gets the value to set on the `readonly` attribute. */\n  _getReadonlyAttribute() {\n    if (this._isNativeSelect) {\n      return null;\n    }\n    if (this.readonly || this.disabled && this.disabledInteractive) {\n      return 'true';\n    }\n    return null;\n  }\n  static ɵfac = function MatInput_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatInput)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatInput,\n    selectors: [[\"input\", \"matInput\", \"\"], [\"textarea\", \"matInput\", \"\"], [\"select\", \"matNativeControl\", \"\"], [\"input\", \"matNativeControl\", \"\"], [\"textarea\", \"matNativeControl\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-input-element\"],\n    hostVars: 21,\n    hostBindings: function MatInput_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"focus\", function MatInput_focus_HostBindingHandler() {\n          return ctx._focusChanged(true);\n        })(\"blur\", function MatInput_blur_HostBindingHandler() {\n          return ctx._focusChanged(false);\n        })(\"input\", function MatInput_input_HostBindingHandler() {\n          return ctx._onInput();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵdomProperty(\"id\", ctx.id)(\"disabled\", ctx.disabled && !ctx.disabledInteractive)(\"required\", ctx.required);\n        i0.ɵɵattribute(\"name\", ctx.name || null)(\"readonly\", ctx._getReadonlyAttribute())(\"aria-disabled\", ctx.disabled && ctx.disabledInteractive ? \"true\" : null)(\"aria-invalid\", ctx.empty && ctx.required ? null : ctx.errorState)(\"aria-required\", ctx.required)(\"id\", ctx.id);\n        i0.ɵɵclassProp(\"mat-input-server\", ctx._isServer)(\"mat-mdc-form-field-textarea-control\", ctx._isInFormField && ctx._isTextarea)(\"mat-mdc-form-field-input-control\", ctx._isInFormField)(\"mat-mdc-input-disabled-interactive\", ctx.disabledInteractive)(\"mdc-text-field__input\", ctx._isInFormField)(\"mat-mdc-native-select-inline\", ctx._isInlineSelect());\n      }\n    },\n    inputs: {\n      disabled: \"disabled\",\n      id: \"id\",\n      placeholder: \"placeholder\",\n      name: \"name\",\n      required: \"required\",\n      type: \"type\",\n      errorStateMatcher: \"errorStateMatcher\",\n      userAriaDescribedBy: [0, \"aria-describedby\", \"userAriaDescribedBy\"],\n      value: \"value\",\n      readonly: \"readonly\",\n      disabledInteractive: [2, \"disabledInteractive\", \"disabledInteractive\", booleanAttribute]\n    },\n    exportAs: [\"matInput\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MatFormFieldControl,\n      useExisting: MatInput\n    }]), i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatInput, [{\n    type: Directive,\n    args: [{\n      selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n      exportAs: 'matInput',\n      host: {\n        'class': 'mat-mdc-input-element',\n        // The BaseMatInput parent class adds `mat-input-element`, `mat-form-field-control` and\n        // `mat-form-field-autofill-control` to the CSS class list, but this should not be added for\n        // this MDC equivalent input.\n        '[class.mat-input-server]': '_isServer',\n        '[class.mat-mdc-form-field-textarea-control]': '_isInFormField && _isTextarea',\n        '[class.mat-mdc-form-field-input-control]': '_isInFormField',\n        '[class.mat-mdc-input-disabled-interactive]': 'disabledInteractive',\n        '[class.mdc-text-field__input]': '_isInFormField',\n        '[class.mat-mdc-native-select-inline]': '_isInlineSelect()',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[id]': 'id',\n        '[disabled]': 'disabled && !disabledInteractive',\n        '[required]': 'required',\n        '[attr.name]': 'name || null',\n        '[attr.readonly]': '_getReadonlyAttribute()',\n        '[attr.aria-disabled]': 'disabled && disabledInteractive ? \"true\" : null',\n        // Only mark the input as invalid for assistive technology if it has a value since the\n        // state usually overlaps with `aria-required` when the input is empty and can be redundant.\n        '[attr.aria-invalid]': '(empty && required) ? null : errorState',\n        '[attr.aria-required]': 'required',\n        // Native input properties that are overwritten by Angular inputs need to be synced with\n        // the native input element. Otherwise property bindings for those don't work.\n        '[attr.id]': 'id',\n        '(focus)': '_focusChanged(true)',\n        '(blur)': '_focusChanged(false)',\n        '(input)': '_onInput()'\n      },\n      providers: [{\n        provide: MatFormFieldControl,\n        useExisting: MatInput\n      }]\n    }]\n  }], () => [], {\n    disabled: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    required: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    errorStateMatcher: [{\n      type: Input\n    }],\n    userAriaDescribedBy: [{\n      type: Input,\n      args: ['aria-describedby']\n    }],\n    value: [{\n      type: Input\n    }],\n    readonly: [{\n      type: Input\n    }],\n    disabledInteractive: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\nclass MatInputModule {\n  static ɵfac = function MatInputModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatInputModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatInputModule,\n    imports: [MatCommonModule, MatFormFieldModule, MatInput],\n    exports: [MatInput, MatFormFieldModule, TextFieldModule, MatCommonModule]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [MatCommonModule, MatFormFieldModule, MatFormFieldModule, TextFieldModule, MatCommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatInputModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, MatFormFieldModule, MatInput],\n      exports: [MatInput, MatFormFieldModule, TextFieldModule, MatCommonModule]\n    }]\n  }], null, null);\n})();\nexport { MAT_INPUT_CONFIG, MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, getMatInputUnsupportedTypeError };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, Directive, NgModule } from '@angular/core';\nimport { MatCommonModule } from './common-module.mjs';\nimport '@angular/cdk/a11y';\nimport '@angular/cdk/bidi';\n\n/** Injection token that can be used to provide the default options the card module. */\nconst _c0 = [\"*\"];\nconst _c1 = [[[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"], [\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"], [\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"], [\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"], [\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]], \"*\"];\nconst _c2 = [\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"[mat-card-image], [matCardImage],\\n                    [mat-card-sm-image], [matCardImageSmall],\\n                    [mat-card-md-image], [matCardImageMedium],\\n                    [mat-card-lg-image], [matCardImageLarge],\\n                    [mat-card-xl-image], [matCardImageXLarge]\", \"*\"];\nconst _c3 = [[[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]], [[\"mat-card-title\"], [\"mat-card-subtitle\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardTitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]], \"*\"];\nconst _c4 = [\"[mat-card-avatar], [matCardAvatar]\", \"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\", \"*\"];\nconst MAT_CARD_CONFIG = new InjectionToken('MAT_CARD_CONFIG');\n/**\n * Material Design card component. Cards contain content and actions about a single subject.\n * See https://material.io/design/components/cards.html\n *\n * MatCard provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCard {\n  appearance;\n  constructor() {\n    const config = inject(MAT_CARD_CONFIG, {\n      optional: true\n    });\n    this.appearance = config?.appearance || 'raised';\n  }\n  static ɵfac = function MatCard_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCard)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatCard,\n    selectors: [[\"mat-card\"]],\n    hostAttrs: [1, \"mat-mdc-card\", \"mdc-card\"],\n    hostVars: 8,\n    hostBindings: function MatCard_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mat-mdc-card-outlined\", ctx.appearance === \"outlined\")(\"mdc-card--outlined\", ctx.appearance === \"outlined\")(\"mat-mdc-card-filled\", ctx.appearance === \"filled\")(\"mdc-card--filled\", ctx.appearance === \"filled\");\n      }\n    },\n    inputs: {\n      appearance: \"appearance\"\n    },\n    exportAs: [\"matCard\"],\n    ngContentSelectors: _c0,\n    decls: 1,\n    vars: 0,\n    template: function MatCard_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵprojection(0);\n      }\n    },\n    styles: [\".mat-mdc-card{display:flex;flex-direction:column;box-sizing:border-box;position:relative;border-style:solid;border-width:0;background-color:var(--mat-card-elevated-container-color, var(--mat-sys-surface-container-low));border-color:var(--mat-card-elevated-container-color, var(--mat-sys-surface-container-low));border-radius:var(--mat-card-elevated-container-shape, var(--mat-sys-corner-medium));box-shadow:var(--mat-card-elevated-container-elevation, var(--mat-sys-level1))}.mat-mdc-card::after{position:absolute;top:0;left:0;width:100%;height:100%;border:solid 1px rgba(0,0,0,0);content:\\\"\\\";display:block;pointer-events:none;box-sizing:border-box;border-radius:var(--mat-card-elevated-container-shape, var(--mat-sys-corner-medium))}.mat-mdc-card-outlined{background-color:var(--mat-card-outlined-container-color, var(--mat-sys-surface));border-radius:var(--mat-card-outlined-container-shape, var(--mat-sys-corner-medium));border-width:var(--mat-card-outlined-outline-width, 1px);border-color:var(--mat-card-outlined-outline-color, var(--mat-sys-outline-variant));box-shadow:var(--mat-card-outlined-container-elevation, var(--mat-sys-level0))}.mat-mdc-card-outlined::after{border:none}.mat-mdc-card-filled{background-color:var(--mat-card-filled-container-color, var(--mat-sys-surface-container-highest));border-radius:var(--mat-card-filled-container-shape, var(--mat-sys-corner-medium));box-shadow:var(--mat-card-filled-container-elevation, var(--mat-sys-level0))}.mdc-card__media{position:relative;box-sizing:border-box;background-repeat:no-repeat;background-position:center;background-size:cover}.mdc-card__media::before{display:block;content:\\\"\\\"}.mdc-card__media:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.mdc-card__media:last-child{border-bottom-left-radius:inherit;border-bottom-right-radius:inherit}.mat-mdc-card-actions{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;min-height:52px;padding:8px}.mat-mdc-card-title{font-family:var(--mat-card-title-text-font, var(--mat-sys-title-large-font));line-height:var(--mat-card-title-text-line-height, var(--mat-sys-title-large-line-height));font-size:var(--mat-card-title-text-size, var(--mat-sys-title-large-size));letter-spacing:var(--mat-card-title-text-tracking, var(--mat-sys-title-large-tracking));font-weight:var(--mat-card-title-text-weight, var(--mat-sys-title-large-weight))}.mat-mdc-card-subtitle{color:var(--mat-card-subtitle-text-color, var(--mat-sys-on-surface));font-family:var(--mat-card-subtitle-text-font, var(--mat-sys-title-medium-font));line-height:var(--mat-card-subtitle-text-line-height, var(--mat-sys-title-medium-line-height));font-size:var(--mat-card-subtitle-text-size, var(--mat-sys-title-medium-size));letter-spacing:var(--mat-card-subtitle-text-tracking, var(--mat-sys-title-medium-tracking));font-weight:var(--mat-card-subtitle-text-weight, var(--mat-sys-title-medium-weight))}.mat-mdc-card-title,.mat-mdc-card-subtitle{display:block;margin:0}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle{padding:16px 16px 0}.mat-mdc-card-header{display:flex;padding:16px 16px 0}.mat-mdc-card-content{display:block;padding:0 16px}.mat-mdc-card-content:first-child{padding-top:16px}.mat-mdc-card-content:last-child{padding-bottom:16px}.mat-mdc-card-title-group{display:flex;justify-content:space-between;width:100%}.mat-mdc-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;margin-bottom:16px;object-fit:cover}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title{line-height:normal}.mat-mdc-card-sm-image{width:80px;height:80px}.mat-mdc-card-md-image{width:112px;height:112px}.mat-mdc-card-lg-image{width:152px;height:152px}.mat-mdc-card-xl-image{width:240px;height:240px}.mat-mdc-card-subtitle~.mat-mdc-card-title,.mat-mdc-card-title~.mat-mdc-card-subtitle,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-title-group .mat-mdc-card-title,.mat-mdc-card-title-group .mat-mdc-card-subtitle{padding-top:0}.mat-mdc-card-content>:last-child:not(.mat-mdc-card-footer){margin-bottom:0}.mat-mdc-card-actions-align-end{justify-content:flex-end}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCard, [{\n    type: Component,\n    args: [{\n      selector: 'mat-card',\n      host: {\n        'class': 'mat-mdc-card mdc-card',\n        '[class.mat-mdc-card-outlined]': 'appearance === \"outlined\"',\n        '[class.mdc-card--outlined]': 'appearance === \"outlined\"',\n        '[class.mat-mdc-card-filled]': 'appearance === \"filled\"',\n        '[class.mdc-card--filled]': 'appearance === \"filled\"'\n      },\n      exportAs: 'matCard',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<ng-content></ng-content>\\n\",\n      styles: [\".mat-mdc-card{display:flex;flex-direction:column;box-sizing:border-box;position:relative;border-style:solid;border-width:0;background-color:var(--mat-card-elevated-container-color, var(--mat-sys-surface-container-low));border-color:var(--mat-card-elevated-container-color, var(--mat-sys-surface-container-low));border-radius:var(--mat-card-elevated-container-shape, var(--mat-sys-corner-medium));box-shadow:var(--mat-card-elevated-container-elevation, var(--mat-sys-level1))}.mat-mdc-card::after{position:absolute;top:0;left:0;width:100%;height:100%;border:solid 1px rgba(0,0,0,0);content:\\\"\\\";display:block;pointer-events:none;box-sizing:border-box;border-radius:var(--mat-card-elevated-container-shape, var(--mat-sys-corner-medium))}.mat-mdc-card-outlined{background-color:var(--mat-card-outlined-container-color, var(--mat-sys-surface));border-radius:var(--mat-card-outlined-container-shape, var(--mat-sys-corner-medium));border-width:var(--mat-card-outlined-outline-width, 1px);border-color:var(--mat-card-outlined-outline-color, var(--mat-sys-outline-variant));box-shadow:var(--mat-card-outlined-container-elevation, var(--mat-sys-level0))}.mat-mdc-card-outlined::after{border:none}.mat-mdc-card-filled{background-color:var(--mat-card-filled-container-color, var(--mat-sys-surface-container-highest));border-radius:var(--mat-card-filled-container-shape, var(--mat-sys-corner-medium));box-shadow:var(--mat-card-filled-container-elevation, var(--mat-sys-level0))}.mdc-card__media{position:relative;box-sizing:border-box;background-repeat:no-repeat;background-position:center;background-size:cover}.mdc-card__media::before{display:block;content:\\\"\\\"}.mdc-card__media:first-child{border-top-left-radius:inherit;border-top-right-radius:inherit}.mdc-card__media:last-child{border-bottom-left-radius:inherit;border-bottom-right-radius:inherit}.mat-mdc-card-actions{display:flex;flex-direction:row;align-items:center;box-sizing:border-box;min-height:52px;padding:8px}.mat-mdc-card-title{font-family:var(--mat-card-title-text-font, var(--mat-sys-title-large-font));line-height:var(--mat-card-title-text-line-height, var(--mat-sys-title-large-line-height));font-size:var(--mat-card-title-text-size, var(--mat-sys-title-large-size));letter-spacing:var(--mat-card-title-text-tracking, var(--mat-sys-title-large-tracking));font-weight:var(--mat-card-title-text-weight, var(--mat-sys-title-large-weight))}.mat-mdc-card-subtitle{color:var(--mat-card-subtitle-text-color, var(--mat-sys-on-surface));font-family:var(--mat-card-subtitle-text-font, var(--mat-sys-title-medium-font));line-height:var(--mat-card-subtitle-text-line-height, var(--mat-sys-title-medium-line-height));font-size:var(--mat-card-subtitle-text-size, var(--mat-sys-title-medium-size));letter-spacing:var(--mat-card-subtitle-text-tracking, var(--mat-sys-title-medium-tracking));font-weight:var(--mat-card-subtitle-text-weight, var(--mat-sys-title-medium-weight))}.mat-mdc-card-title,.mat-mdc-card-subtitle{display:block;margin:0}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle{padding:16px 16px 0}.mat-mdc-card-header{display:flex;padding:16px 16px 0}.mat-mdc-card-content{display:block;padding:0 16px}.mat-mdc-card-content:first-child{padding-top:16px}.mat-mdc-card-content:last-child{padding-bottom:16px}.mat-mdc-card-title-group{display:flex;justify-content:space-between;width:100%}.mat-mdc-card-avatar{height:40px;width:40px;border-radius:50%;flex-shrink:0;margin-bottom:16px;object-fit:cover}.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-avatar~.mat-mdc-card-header-text .mat-mdc-card-title{line-height:normal}.mat-mdc-card-sm-image{width:80px;height:80px}.mat-mdc-card-md-image{width:112px;height:112px}.mat-mdc-card-lg-image{width:152px;height:152px}.mat-mdc-card-xl-image{width:240px;height:240px}.mat-mdc-card-subtitle~.mat-mdc-card-title,.mat-mdc-card-title~.mat-mdc-card-subtitle,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-title,.mat-mdc-card-header .mat-mdc-card-header-text .mat-mdc-card-subtitle,.mat-mdc-card-title-group .mat-mdc-card-title,.mat-mdc-card-title-group .mat-mdc-card-subtitle{padding-top:0}.mat-mdc-card-content>:last-child:not(.mat-mdc-card-footer){margin-bottom:0}.mat-mdc-card-actions-align-end{justify-content:flex-end}\\n\"]\n    }]\n  }], () => [], {\n    appearance: [{\n      type: Input\n    }]\n  });\n})();\n// TODO(jelbourn): add `MatActionCard`, which is a card that acts like a button (and has a ripple).\n// Supported in MDC with `.mdc-card__primary-action`. Will require additional a11y docs for users.\n/**\n * Title of a card, intended for use within `<mat-card>`. This component is an optional\n * convenience for one variety of card title; any custom title element may be used in its place.\n *\n * MatCardTitle provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardTitle {\n  static ɵfac = function MatCardTitle_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCardTitle)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardTitle,\n    selectors: [[\"mat-card-title\"], [\"\", \"mat-card-title\", \"\"], [\"\", \"matCardTitle\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-card-title\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardTitle, [{\n    type: Directive,\n    args: [{\n      selector: `mat-card-title, [mat-card-title], [matCardTitle]`,\n      host: {\n        'class': 'mat-mdc-card-title'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Container intended to be used within the `<mat-card>` component. Can contain exactly one\n * `<mat-card-title>`, one `<mat-card-subtitle>` and one content image of any size\n * (e.g. `<img matCardLgImage>`).\n */\nclass MatCardTitleGroup {\n  static ɵfac = function MatCardTitleGroup_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCardTitleGroup)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatCardTitleGroup,\n    selectors: [[\"mat-card-title-group\"]],\n    hostAttrs: [1, \"mat-mdc-card-title-group\"],\n    ngContentSelectors: _c2,\n    decls: 4,\n    vars: 0,\n    template: function MatCardTitleGroup_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c1);\n        i0.ɵɵdomElementStart(0, \"div\");\n        i0.ɵɵprojection(1);\n        i0.ɵɵdomElementEnd();\n        i0.ɵɵprojection(2, 1);\n        i0.ɵɵprojection(3, 2);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardTitleGroup, [{\n    type: Component,\n    args: [{\n      selector: 'mat-card-title-group',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        'class': 'mat-mdc-card-title-group'\n      },\n      template: \"<div>\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content select=\\\"[mat-card-image], [matCardImage],\\n                    [mat-card-sm-image], [matCardImageSmall],\\n                    [mat-card-md-image], [matCardImageMedium],\\n                    [mat-card-lg-image], [matCardImageLarge],\\n                    [mat-card-xl-image], [matCardImageXLarge]\\\"></ng-content>\\n<ng-content></ng-content>\\n\"\n    }]\n  }], null, null);\n})();\n/**\n * Content of a card, intended for use within `<mat-card>`. This component is an optional\n * convenience for use with other convenience elements, such as `<mat-card-title>`; any custom\n * content block element may be used in its place.\n *\n * MatCardContent provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardContent {\n  static ɵfac = function MatCardContent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCardContent)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardContent,\n    selectors: [[\"mat-card-content\"]],\n    hostAttrs: [1, \"mat-mdc-card-content\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardContent, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-card-content',\n      host: {\n        'class': 'mat-mdc-card-content'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Sub-title of a card, intended for use within `<mat-card>` beneath a `<mat-card-title>`. This\n * component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-title>`.\n *\n * MatCardSubtitle provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardSubtitle {\n  static ɵfac = function MatCardSubtitle_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCardSubtitle)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardSubtitle,\n    selectors: [[\"mat-card-subtitle\"], [\"\", \"mat-card-subtitle\", \"\"], [\"\", \"matCardSubtitle\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-card-subtitle\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardSubtitle, [{\n    type: Directive,\n    args: [{\n      selector: `mat-card-subtitle, [mat-card-subtitle], [matCardSubtitle]`,\n      host: {\n        'class': 'mat-mdc-card-subtitle'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Bottom area of a card that contains action buttons, intended for use within `<mat-card>`.\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom action block element may be used in its place.\n *\n * MatCardActions provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardActions {\n  // TODO(jelbourn): deprecate `align` in favor of `actionPosition` or `actionAlignment`\n  // as to not conflict with the native `align` attribute.\n  /** Position of the actions inside the card. */\n  align = 'start';\n  static ɵfac = function MatCardActions_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCardActions)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardActions,\n    selectors: [[\"mat-card-actions\"]],\n    hostAttrs: [1, \"mat-mdc-card-actions\", \"mdc-card__actions\"],\n    hostVars: 2,\n    hostBindings: function MatCardActions_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mat-mdc-card-actions-align-end\", ctx.align === \"end\");\n      }\n    },\n    inputs: {\n      align: \"align\"\n    },\n    exportAs: [\"matCardActions\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardActions, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-card-actions',\n      exportAs: 'matCardActions',\n      host: {\n        'class': 'mat-mdc-card-actions mdc-card__actions',\n        '[class.mat-mdc-card-actions-align-end]': 'align === \"end\"'\n      }\n    }]\n  }], null, {\n    align: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * Header region of a card, intended for use within `<mat-card>`. This header captures\n * a card title, subtitle, and avatar.  This component is an optional convenience for use with\n * other convenience elements, such as `<mat-card-footer>`; any custom header block element may be\n * used in its place.\n *\n * MatCardHeader provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardHeader {\n  static ɵfac = function MatCardHeader_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCardHeader)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatCardHeader,\n    selectors: [[\"mat-card-header\"]],\n    hostAttrs: [1, \"mat-mdc-card-header\"],\n    ngContentSelectors: _c4,\n    decls: 4,\n    vars: 0,\n    consts: [[1, \"mat-mdc-card-header-text\"]],\n    template: function MatCardHeader_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c3);\n        i0.ɵɵprojection(0);\n        i0.ɵɵdomElementStart(1, \"div\", 0);\n        i0.ɵɵprojection(2, 1);\n        i0.ɵɵdomElementEnd();\n        i0.ɵɵprojection(3, 2);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardHeader, [{\n    type: Component,\n    args: [{\n      selector: 'mat-card-header',\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        'class': 'mat-mdc-card-header'\n      },\n      template: \"<ng-content select=\\\"[mat-card-avatar], [matCardAvatar]\\\"></ng-content>\\n<div class=\\\"mat-mdc-card-header-text\\\">\\n  <ng-content\\n      select=\\\"mat-card-title, mat-card-subtitle,\\n      [mat-card-title], [mat-card-subtitle],\\n      [matCardTitle], [matCardSubtitle]\\\"></ng-content>\\n</div>\\n<ng-content></ng-content>\\n\"\n    }]\n  }], null, null);\n})();\n/**\n * Footer area a card, intended for use within `<mat-card>`.\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom footer block element may be used in its place.\n *\n * MatCardFooter provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardFooter {\n  static ɵfac = function MatCardFooter_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCardFooter)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardFooter,\n    selectors: [[\"mat-card-footer\"]],\n    hostAttrs: [1, \"mat-mdc-card-footer\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardFooter, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-card-footer',\n      host: {\n        'class': 'mat-mdc-card-footer'\n      }\n    }]\n  }], null, null);\n})();\n// TODO(jelbourn): deprecate the \"image\" selectors to replace with \"media\".\n// TODO(jelbourn): support `.mdc-card__media-content`.\n/**\n * Primary image content for a card, intended for use within `<mat-card>`. Can be applied to\n * any media element, such as `<img>` or `<picture>`.\n *\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-content>`; any custom media element may be used in its place.\n *\n * MatCardImage provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardImage {\n  static ɵfac = function MatCardImage_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCardImage)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardImage,\n    selectors: [[\"\", \"mat-card-image\", \"\"], [\"\", \"matCardImage\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-card-image\", \"mdc-card__media\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardImage, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-card-image], [matCardImage]',\n      host: {\n        'class': 'mat-mdc-card-image mdc-card__media'\n      }\n    }]\n  }], null, null);\n})();\n/** Same as `MatCardImage`, but small. */\nclass MatCardSmImage {\n  static ɵfac = function MatCardSmImage_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCardSmImage)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardSmImage,\n    selectors: [[\"\", \"mat-card-sm-image\", \"\"], [\"\", \"matCardImageSmall\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-card-sm-image\", \"mdc-card__media\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardSmImage, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-card-sm-image], [matCardImageSmall]',\n      host: {\n        'class': 'mat-mdc-card-sm-image mdc-card__media'\n      }\n    }]\n  }], null, null);\n})();\n/** Same as `MatCardImage`, but medium. */\nclass MatCardMdImage {\n  static ɵfac = function MatCardMdImage_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCardMdImage)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardMdImage,\n    selectors: [[\"\", \"mat-card-md-image\", \"\"], [\"\", \"matCardImageMedium\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-card-md-image\", \"mdc-card__media\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardMdImage, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-card-md-image], [matCardImageMedium]',\n      host: {\n        'class': 'mat-mdc-card-md-image mdc-card__media'\n      }\n    }]\n  }], null, null);\n})();\n/** Same as `MatCardImage`, but large. */\nclass MatCardLgImage {\n  static ɵfac = function MatCardLgImage_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCardLgImage)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardLgImage,\n    selectors: [[\"\", \"mat-card-lg-image\", \"\"], [\"\", \"matCardImageLarge\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-card-lg-image\", \"mdc-card__media\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardLgImage, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-card-lg-image], [matCardImageLarge]',\n      host: {\n        'class': 'mat-mdc-card-lg-image mdc-card__media'\n      }\n    }]\n  }], null, null);\n})();\n/** Same as `MatCardImage`, but extra-large. */\nclass MatCardXlImage {\n  static ɵfac = function MatCardXlImage_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCardXlImage)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardXlImage,\n    selectors: [[\"\", \"mat-card-xl-image\", \"\"], [\"\", \"matCardImageXLarge\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-card-xl-image\", \"mdc-card__media\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardXlImage, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-card-xl-image], [matCardImageXLarge]',\n      host: {\n        'class': 'mat-mdc-card-xl-image mdc-card__media'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Avatar image content for a card, intended for use within `<mat-card>`. Can be applied to\n * any media element, such as `<img>` or `<picture>`.\n *\n * This component is an optional convenience for use with other convenience elements, such as\n * `<mat-card-title>`; any custom media element may be used in its place.\n *\n * MatCardAvatar provides no behaviors, instead serving as a purely visual treatment.\n */\nclass MatCardAvatar {\n  static ɵfac = function MatCardAvatar_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCardAvatar)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatCardAvatar,\n    selectors: [[\"\", \"mat-card-avatar\", \"\"], [\"\", \"matCardAvatar\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-card-avatar\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardAvatar, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-card-avatar], [matCardAvatar]',\n      host: {\n        'class': 'mat-mdc-card-avatar'\n      }\n    }]\n  }], null, null);\n})();\nconst CARD_DIRECTIVES = [MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage];\nclass MatCardModule {\n  static ɵfac = function MatCardModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatCardModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatCardModule,\n    imports: [MatCommonModule, MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage],\n    exports: [MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage, MatCommonModule]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [MatCommonModule, MatCommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatCardModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, ...CARD_DIRECTIVES],\n      exports: [CARD_DIRECTIVES, MatCommonModule]\n    }]\n  }], null, null);\n})();\nexport { MAT_CARD_CONFIG, MatCard, MatCardActions, MatCardAvatar, MatCardContent, MatCardFooter, MatCardHeader, MatCardImage, MatCardLgImage, MatCardMdImage, MatCardModule, MatCardSmImage, MatCardSubtitle, MatCardTitle, MatCardTitleGroup, MatCardXlImage };\n","/**\n * Class for determining, from a list of tiles, the (row, col) position of each of those tiles\n * in the grid. This is necessary (rather than just rendering the tiles in normal document flow)\n * because the tiles can have a rowspan.\n *\n * The positioning algorithm greedily places each tile as soon as it encounters a gap in the grid\n * large enough to accommodate it so that the tiles still render in the same order in which they\n * are given.\n *\n * The basis of the algorithm is the use of an array to track the already placed tiles. Each\n * element of the array corresponds to a column, and the value indicates how many cells in that\n * column are already occupied; zero indicates an empty cell. Moving \"down\" to the next row\n * decrements each value in the tracking array (indicating that the column is one cell closer to\n * being free).\n *\n * @docs-private\n */\nclass TileCoordinator {\n    /** Tracking array (see class description). */\n    tracker;\n    /** Index at which the search for the next gap will start. */\n    columnIndex = 0;\n    /** The current row index. */\n    rowIndex = 0;\n    /** Gets the total number of rows occupied by tiles */\n    get rowCount() {\n        return this.rowIndex + 1;\n    }\n    /**\n     * Gets the total span of rows occupied by tiles.\n     * Ex: A list with 1 row that contains a tile with rowspan 2 will have a total rowspan of 2.\n     */\n    get rowspan() {\n        const lastRowMax = Math.max(...this.tracker);\n        // if any of the tiles has a rowspan that pushes it beyond the total row count,\n        // add the difference to the rowcount\n        return lastRowMax > 1 ? this.rowCount + lastRowMax - 1 : this.rowCount;\n    }\n    /** The computed (row, col) position of each tile (the output). */\n    positions;\n    /**\n     * Updates the tile positions.\n     * @param numColumns Amount of columns in the grid.\n     * @param tiles Tiles to be positioned.\n     */\n    update(numColumns, tiles) {\n        this.columnIndex = 0;\n        this.rowIndex = 0;\n        this.tracker = new Array(numColumns);\n        this.tracker.fill(0, 0, this.tracker.length);\n        this.positions = tiles.map(tile => this._trackTile(tile));\n    }\n    /** Calculates the row and col position of a tile. */\n    _trackTile(tile) {\n        // Find a gap large enough for this tile.\n        const gapStartIndex = this._findMatchingGap(tile.colspan);\n        // Place tile in the resulting gap.\n        this._markTilePosition(gapStartIndex, tile);\n        // The next time we look for a gap, the search will start at columnIndex, which should be\n        // immediately after the tile that has just been placed.\n        this.columnIndex = gapStartIndex + tile.colspan;\n        return new TilePosition(this.rowIndex, gapStartIndex);\n    }\n    /** Finds the next available space large enough to fit the tile. */\n    _findMatchingGap(tileCols) {\n        if (tileCols > this.tracker.length && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`mat-grid-list: tile with colspan ${tileCols} is wider than ` +\n                `grid with cols=\"${this.tracker.length}\".`);\n        }\n        // Start index is inclusive, end index is exclusive.\n        let gapStartIndex = -1;\n        let gapEndIndex = -1;\n        // Look for a gap large enough to fit the given tile. Empty spaces are marked with a zero.\n        do {\n            // If we've reached the end of the row, go to the next row.\n            if (this.columnIndex + tileCols > this.tracker.length) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n            // If there are no more empty spaces in this row at all, move on to the next row.\n            if (gapStartIndex == -1) {\n                this._nextRow();\n                gapStartIndex = this.tracker.indexOf(0, this.columnIndex);\n                gapEndIndex = this._findGapEndIndex(gapStartIndex);\n                continue;\n            }\n            gapEndIndex = this._findGapEndIndex(gapStartIndex);\n            // If a gap large enough isn't found, we want to start looking immediately after the current\n            // gap on the next iteration.\n            this.columnIndex = gapStartIndex + 1;\n            // Continue iterating until we find a gap wide enough for this tile. Since gapEndIndex is\n            // exclusive, gapEndIndex is 0 means we didn't find a gap and should continue.\n        } while (gapEndIndex - gapStartIndex < tileCols || gapEndIndex == 0);\n        // If we still didn't manage to find a gap, ensure that the index is\n        // at least zero so the tile doesn't get pulled out of the grid.\n        return Math.max(gapStartIndex, 0);\n    }\n    /** Move \"down\" to the next row. */\n    _nextRow() {\n        this.columnIndex = 0;\n        this.rowIndex++;\n        // Decrement all spaces by one to reflect moving down one row.\n        for (let i = 0; i < this.tracker.length; i++) {\n            this.tracker[i] = Math.max(0, this.tracker[i] - 1);\n        }\n    }\n    /**\n     * Finds the end index (exclusive) of a gap given the index from which to start looking.\n     * The gap ends when a non-zero value is found.\n     */\n    _findGapEndIndex(gapStartIndex) {\n        for (let i = gapStartIndex + 1; i < this.tracker.length; i++) {\n            if (this.tracker[i] != 0) {\n                return i;\n            }\n        }\n        // The gap ends with the end of the row.\n        return this.tracker.length;\n    }\n    /** Update the tile tracker to account for the given tile in the given space. */\n    _markTilePosition(start, tile) {\n        for (let i = 0; i < tile.colspan; i++) {\n            this.tracker[start + i] = tile.rowspan;\n        }\n    }\n}\n/**\n * Simple data structure for tile position (row, col).\n * @docs-private\n */\nclass TilePosition {\n    row;\n    col;\n    constructor(row, col) {\n        this.row = row;\n        this.col = col;\n    }\n}\n\n// Privately exported for the grid-list harness.\nconst ɵTileCoordinator = TileCoordinator;\n\nexport { TileCoordinator, ɵTileCoordinator };\n\n","import * as i0 from '@angular/core';\nimport { Directive, NgModule } from '@angular/core';\nimport { startWith } from 'rxjs/operators';\nimport { MatCommonModule } from './common-module.mjs';\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nclass MatLine {\n  static ɵfac = function MatLine_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatLine)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatLine,\n    selectors: [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]],\n    hostAttrs: [1, \"mat-line\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatLine, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-line], [matLine]',\n      host: {\n        'class': 'mat-line'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nfunction setLines(lines, element, prefix = 'mat') {\n  // Note: doesn't need to unsubscribe, because `changes`\n  // gets completed by Angular when the view is destroyed.\n  lines.changes.pipe(startWith(lines)).subscribe(({\n    length\n  }) => {\n    setClass(element, `${prefix}-2-line`, false);\n    setClass(element, `${prefix}-3-line`, false);\n    setClass(element, `${prefix}-multi-line`, false);\n    if (length === 2 || length === 3) {\n      setClass(element, `${prefix}-${length}-line`, true);\n    } else if (length > 3) {\n      setClass(element, `${prefix}-multi-line`, true);\n    }\n  });\n}\n/** Adds or removes a class from an element. */\nfunction setClass(element, className, isAdd) {\n  element.nativeElement.classList.toggle(className, isAdd);\n}\nclass MatLineModule {\n  static ɵfac = function MatLineModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatLineModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatLineModule,\n    imports: [MatCommonModule, MatLine],\n    exports: [MatLine, MatCommonModule]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [MatCommonModule, MatCommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatLineModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, MatLine],\n      exports: [MatLine, MatCommonModule]\n    }]\n  }], null, null);\n})();\nexport { MatLine, MatLineModule, setLines };\n","import { TileCoordinator } from './public-api.mjs';\nconst _c0 = [\"*\"];\nconst _c1 = [[[\"\", \"mat-grid-avatar\", \"\"], [\"\", \"matGridAvatar\", \"\"]], [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]], \"*\"];\nconst _c2 = [\"[mat-grid-avatar], [matGridAvatar]\", \"[mat-line], [matLine]\", \"*\"];\nconst _c3 = \".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}.mat-grid-tile-header{font-size:var(--mat-grid-list-tile-header-primary-text-size, var(--mat-sys-body-large))}.mat-grid-tile-header .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile-header .mat-line:nth-child(n+2){font-size:var(--mat-grid-list-tile-header-secondary-text-size, var(--mat-sys-body-medium))}.mat-grid-tile-footer{font-size:var(--mat-grid-list-tile-footer-primary-text-size, var(--mat-sys-body-large))}.mat-grid-tile-footer .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile-footer .mat-line:nth-child(n+2){font-size:var(--mat-grid-list-tile-footer-secondary-text-size, var(--mat-sys-body-medium))}.mat-grid-tile-content{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}\\n\";\nexport { ɵTileCoordinator } from './public-api.mjs';\nimport { setLines, MatLine, MatLineModule } from './line.mjs';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, ContentChildren, Directive, NgModule } from '@angular/core';\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { MatCommonModule } from './common-module.mjs';\nimport 'rxjs/operators';\nimport '@angular/cdk/a11y';\n\n/**\n * Injection token used to provide a grid list to a tile and to avoid circular imports.\n * @docs-private\n */\nconst MAT_GRID_LIST = new InjectionToken('MAT_GRID_LIST');\nclass MatGridTile {\n  _element = inject(ElementRef);\n  _gridList = inject(MAT_GRID_LIST, {\n    optional: true\n  });\n  _rowspan = 1;\n  _colspan = 1;\n  constructor() {}\n  /** Amount of rows that the grid tile takes up. */\n  get rowspan() {\n    return this._rowspan;\n  }\n  set rowspan(value) {\n    this._rowspan = Math.round(coerceNumberProperty(value));\n  }\n  /** Amount of columns that the grid tile takes up. */\n  get colspan() {\n    return this._colspan;\n  }\n  set colspan(value) {\n    this._colspan = Math.round(coerceNumberProperty(value));\n  }\n  /**\n   * Sets the style of the grid-tile element.  Needs to be set manually to avoid\n   * \"Changed after checked\" errors that would occur with HostBinding.\n   */\n  _setStyle(property, value) {\n    this._element.nativeElement.style[property] = value;\n  }\n  static ɵfac = function MatGridTile_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatGridTile)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatGridTile,\n    selectors: [[\"mat-grid-tile\"]],\n    hostAttrs: [1, \"mat-grid-tile\"],\n    hostVars: 2,\n    hostBindings: function MatGridTile_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"rowspan\", ctx.rowspan)(\"colspan\", ctx.colspan);\n      }\n    },\n    inputs: {\n      rowspan: \"rowspan\",\n      colspan: \"colspan\"\n    },\n    exportAs: [\"matGridTile\"],\n    ngContentSelectors: _c0,\n    decls: 2,\n    vars: 0,\n    consts: [[1, \"mat-grid-tile-content\"]],\n    template: function MatGridTile_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵdomElementStart(0, \"div\", 0);\n        i0.ɵɵprojection(1);\n        i0.ɵɵdomElementEnd();\n      }\n    },\n    styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}.mat-grid-tile-header{font-size:var(--mat-grid-list-tile-header-primary-text-size, var(--mat-sys-body-large))}.mat-grid-tile-header .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile-header .mat-line:nth-child(n+2){font-size:var(--mat-grid-list-tile-header-secondary-text-size, var(--mat-sys-body-medium))}.mat-grid-tile-footer{font-size:var(--mat-grid-list-tile-footer-primary-text-size, var(--mat-sys-body-large))}.mat-grid-tile-footer .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile-footer .mat-line:nth-child(n+2){font-size:var(--mat-grid-list-tile-footer-secondary-text-size, var(--mat-sys-body-medium))}.mat-grid-tile-content{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatGridTile, [{\n    type: Component,\n    args: [{\n      selector: 'mat-grid-tile',\n      exportAs: 'matGridTile',\n      host: {\n        'class': 'mat-grid-tile',\n        // Ensures that the \"rowspan\" and \"colspan\" input value is reflected in\n        // the DOM. This is needed for the grid-tile harness.\n        '[attr.rowspan]': 'rowspan',\n        '[attr.colspan]': 'colspan'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      template: \"<div class=\\\"mat-grid-tile-content\\\">\\n  <ng-content></ng-content>\\n</div>\\n\",\n      styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}.mat-grid-tile-header{font-size:var(--mat-grid-list-tile-header-primary-text-size, var(--mat-sys-body-large))}.mat-grid-tile-header .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile-header .mat-line:nth-child(n+2){font-size:var(--mat-grid-list-tile-header-secondary-text-size, var(--mat-sys-body-medium))}.mat-grid-tile-footer{font-size:var(--mat-grid-list-tile-footer-primary-text-size, var(--mat-sys-body-large))}.mat-grid-tile-footer .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile-footer .mat-line:nth-child(n+2){font-size:var(--mat-grid-list-tile-footer-secondary-text-size, var(--mat-sys-body-medium))}.mat-grid-tile-content{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}\\n\"]\n    }]\n  }], () => [], {\n    rowspan: [{\n      type: Input\n    }],\n    colspan: [{\n      type: Input\n    }]\n  });\n})();\nclass MatGridTileText {\n  _element = inject(ElementRef);\n  _lines;\n  constructor() {}\n  ngAfterContentInit() {\n    setLines(this._lines, this._element);\n  }\n  static ɵfac = function MatGridTileText_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatGridTileText)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatGridTileText,\n    selectors: [[\"mat-grid-tile-header\"], [\"mat-grid-tile-footer\"]],\n    contentQueries: function MatGridTileText_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatLine, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._lines = _t);\n      }\n    },\n    ngContentSelectors: _c2,\n    decls: 4,\n    vars: 0,\n    consts: [[1, \"mat-grid-list-text\"]],\n    template: function MatGridTileText_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c1);\n        i0.ɵɵprojection(0);\n        i0.ɵɵdomElementStart(1, \"div\", 0);\n        i0.ɵɵprojection(2, 1);\n        i0.ɵɵdomElementEnd();\n        i0.ɵɵprojection(3, 2);\n      }\n    },\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatGridTileText, [{\n    type: Component,\n    args: [{\n      selector: 'mat-grid-tile-header, mat-grid-tile-footer',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"<ng-content select=\\\"[mat-grid-avatar], [matGridAvatar]\\\"></ng-content>\\n<div class=\\\"mat-grid-list-text\\\"><ng-content select=\\\"[mat-line], [matLine]\\\"></ng-content></div>\\n<ng-content></ng-content>\\n\"\n    }]\n  }], () => [], {\n    _lines: [{\n      type: ContentChildren,\n      args: [MatLine, {\n        descendants: true\n      }]\n    }]\n  });\n})();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatGridAvatarCssMatStyler {\n  static ɵfac = function MatGridAvatarCssMatStyler_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatGridAvatarCssMatStyler)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatGridAvatarCssMatStyler,\n    selectors: [[\"\", \"mat-grid-avatar\", \"\"], [\"\", \"matGridAvatar\", \"\"]],\n    hostAttrs: [1, \"mat-grid-avatar\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatGridAvatarCssMatStyler, [{\n    type: Directive,\n    args: [{\n      selector: '[mat-grid-avatar], [matGridAvatar]',\n      host: {\n        'class': 'mat-grid-avatar'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatGridTileHeaderCssMatStyler {\n  static ɵfac = function MatGridTileHeaderCssMatStyler_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatGridTileHeaderCssMatStyler)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatGridTileHeaderCssMatStyler,\n    selectors: [[\"mat-grid-tile-header\"]],\n    hostAttrs: [1, \"mat-grid-tile-header\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatGridTileHeaderCssMatStyler, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-grid-tile-header',\n      host: {\n        'class': 'mat-grid-tile-header'\n      }\n    }]\n  }], null, null);\n})();\n/**\n * Directive whose purpose is to add the mat- CSS styling to this selector.\n * @docs-private\n */\nclass MatGridTileFooterCssMatStyler {\n  static ɵfac = function MatGridTileFooterCssMatStyler_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatGridTileFooterCssMatStyler)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatGridTileFooterCssMatStyler,\n    selectors: [[\"mat-grid-tile-footer\"]],\n    hostAttrs: [1, \"mat-grid-tile-footer\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatGridTileFooterCssMatStyler, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-grid-tile-footer',\n      host: {\n        'class': 'mat-grid-tile-footer'\n      }\n    }]\n  }], null, null);\n})();\n\n/**\n * RegExp that can be used to check whether a value will\n * be allowed inside a CSS `calc()` expression.\n */\nconst cssCalcAllowedValue = /^-?\\d+((\\.\\d+)?[A-Za-z%$]?)+$/;\n/**\n * Sets the style properties for an individual tile, given the position calculated by the\n * Tile Coordinator.\n * @docs-private\n */\nclass TileStyler {\n  _gutterSize;\n  _rows = 0;\n  _rowspan = 0;\n  _cols;\n  _direction;\n  /**\n   * Adds grid-list layout info once it is available. Cannot be processed in the constructor\n   * because these properties haven't been calculated by that point.\n   *\n   * @param gutterSize Size of the grid's gutter.\n   * @param tracker Instance of the TileCoordinator.\n   * @param cols Amount of columns in the grid.\n   * @param direction Layout direction of the grid.\n   */\n  init(gutterSize, tracker, cols, direction) {\n    this._gutterSize = normalizeUnits(gutterSize);\n    this._rows = tracker.rowCount;\n    this._rowspan = tracker.rowspan;\n    this._cols = cols;\n    this._direction = direction;\n  }\n  /**\n   * Computes the amount of space a single 1x1 tile would take up (width or height).\n   * Used as a basis for other calculations.\n   * @param sizePercent Percent of the total grid-list space that one 1x1 tile would take up.\n   * @param gutterFraction Fraction of the gutter size taken up by one 1x1 tile.\n   * @return The size of a 1x1 tile as an expression that can be evaluated via CSS calc().\n   */\n  getBaseTileSize(sizePercent, gutterFraction) {\n    // Take the base size percent (as would be if evenly dividing the size between cells),\n    // and then subtracting the size of one gutter. However, since there are no gutters on the\n    // edges, each tile only uses a fraction (gutterShare = numGutters / numCells) of the gutter\n    // size. (Imagine having one gutter per tile, and then breaking up the extra gutter on the\n    // edge evenly among the cells).\n    return `(${sizePercent}% - (${this._gutterSize} * ${gutterFraction}))`;\n  }\n  /**\n   * Gets The horizontal or vertical position of a tile, e.g., the 'top' or 'left' property value.\n   * @param offset Number of tiles that have already been rendered in the row/column.\n   * @param baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n   * @return Position of the tile as a CSS calc() expression.\n   */\n  getTilePosition(baseSize, offset) {\n    // The position comes the size of a 1x1 tile plus gutter for each previous tile in the\n    // row/column (offset).\n    return offset === 0 ? '0' : calc(`(${baseSize} + ${this._gutterSize}) * ${offset}`);\n  }\n  /**\n   * Gets the actual size of a tile, e.g., width or height, taking rowspan or colspan into account.\n   * @param baseSize Base size of a 1x1 tile (as computed in getBaseTileSize).\n   * @param span The tile's rowspan or colspan.\n   * @return Size of the tile as a CSS calc() expression.\n   */\n  getTileSize(baseSize, span) {\n    return `(${baseSize} * ${span}) + (${span - 1} * ${this._gutterSize})`;\n  }\n  /**\n   * Sets the style properties to be applied to a tile for the given row and column index.\n   * @param tile Tile to which to apply the styling.\n   * @param rowIndex Index of the tile's row.\n   * @param colIndex Index of the tile's column.\n   */\n  setStyle(tile, rowIndex, colIndex) {\n    // Percent of the available horizontal space that one column takes up.\n    let percentWidthPerTile = 100 / this._cols;\n    // Fraction of the vertical gutter size that each column takes up.\n    // For example, if there are 5 columns, each column uses 4/5 = 0.8 times the gutter width.\n    let gutterWidthFractionPerTile = (this._cols - 1) / this._cols;\n    this.setColStyles(tile, colIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n    this.setRowStyles(tile, rowIndex, percentWidthPerTile, gutterWidthFractionPerTile);\n  }\n  /** Sets the horizontal placement of the tile in the list. */\n  setColStyles(tile, colIndex, percentWidth, gutterWidth) {\n    // Base horizontal size of a column.\n    let baseTileWidth = this.getBaseTileSize(percentWidth, gutterWidth);\n    // The width and horizontal position of each tile is always calculated the same way, but the\n    // height and vertical position depends on the rowMode.\n    let side = this._direction === 'rtl' ? 'right' : 'left';\n    tile._setStyle(side, this.getTilePosition(baseTileWidth, colIndex));\n    tile._setStyle('width', calc(this.getTileSize(baseTileWidth, tile.colspan)));\n  }\n  /**\n   * Calculates the total size taken up by gutters across one axis of a list.\n   */\n  getGutterSpan() {\n    return `${this._gutterSize} * (${this._rowspan} - 1)`;\n  }\n  /**\n   * Calculates the total size taken up by tiles across one axis of a list.\n   * @param tileHeight Height of the tile.\n   */\n  getTileSpan(tileHeight) {\n    return `${this._rowspan} * ${this.getTileSize(tileHeight, 1)}`;\n  }\n  /**\n   * Calculates the computed height and returns the correct style property to set.\n   * This method can be implemented by each type of TileStyler.\n   * @docs-private\n   */\n  getComputedHeight() {\n    return null;\n  }\n}\n/**\n * This type of styler is instantiated when the user passes in a fixed row height.\n * Example `<mat-grid-list cols=\"3\" rowHeight=\"100px\">`\n * @docs-private\n */\nclass FixedTileStyler extends TileStyler {\n  fixedRowHeight;\n  constructor(fixedRowHeight) {\n    super();\n    this.fixedRowHeight = fixedRowHeight;\n  }\n  init(gutterSize, tracker, cols, direction) {\n    super.init(gutterSize, tracker, cols, direction);\n    this.fixedRowHeight = normalizeUnits(this.fixedRowHeight);\n    if (!cssCalcAllowedValue.test(this.fixedRowHeight) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error(`Invalid value \"${this.fixedRowHeight}\" set as rowHeight.`);\n    }\n  }\n  setRowStyles(tile, rowIndex) {\n    tile._setStyle('top', this.getTilePosition(this.fixedRowHeight, rowIndex));\n    tile._setStyle('height', calc(this.getTileSize(this.fixedRowHeight, tile.rowspan)));\n  }\n  getComputedHeight() {\n    return ['height', calc(`${this.getTileSpan(this.fixedRowHeight)} + ${this.getGutterSpan()}`)];\n  }\n  reset(list) {\n    list._setListStyle(['height', null]);\n    if (list._tiles) {\n      list._tiles.forEach(tile => {\n        tile._setStyle('top', null);\n        tile._setStyle('height', null);\n      });\n    }\n  }\n}\n/**\n * This type of styler is instantiated when the user passes in a width:height ratio\n * for the row height.  Example `<mat-grid-list cols=\"3\" rowHeight=\"3:1\">`\n * @docs-private\n */\nclass RatioTileStyler extends TileStyler {\n  /** Ratio width:height given by user to determine row height. */\n  rowHeightRatio;\n  baseTileHeight;\n  constructor(value) {\n    super();\n    this._parseRatio(value);\n  }\n  setRowStyles(tile, rowIndex, percentWidth, gutterWidth) {\n    let percentHeightPerTile = percentWidth / this.rowHeightRatio;\n    this.baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterWidth);\n    // Use padding-top and margin-top to maintain the given aspect ratio, as\n    // a percentage-based value for these properties is applied versus the *width* of the\n    // containing block. See http://www.w3.org/TR/CSS2/box.html#margin-properties\n    tile._setStyle('marginTop', this.getTilePosition(this.baseTileHeight, rowIndex));\n    tile._setStyle('paddingTop', calc(this.getTileSize(this.baseTileHeight, tile.rowspan)));\n  }\n  getComputedHeight() {\n    return ['paddingBottom', calc(`${this.getTileSpan(this.baseTileHeight)} + ${this.getGutterSpan()}`)];\n  }\n  reset(list) {\n    list._setListStyle(['paddingBottom', null]);\n    list._tiles.forEach(tile => {\n      tile._setStyle('marginTop', null);\n      tile._setStyle('paddingTop', null);\n    });\n  }\n  _parseRatio(value) {\n    const ratioParts = value.split(':');\n    if (ratioParts.length !== 2 && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error(`mat-grid-list: invalid ratio given for row-height: \"${value}\"`);\n    }\n    this.rowHeightRatio = parseFloat(ratioParts[0]) / parseFloat(ratioParts[1]);\n  }\n}\n/**\n * This type of styler is instantiated when the user selects a \"fit\" row height mode.\n * In other words, the row height will reflect the total height of the container divided\n * by the number of rows.  Example `<mat-grid-list cols=\"3\" rowHeight=\"fit\">`\n *\n * @docs-private\n */\nclass FitTileStyler extends TileStyler {\n  setRowStyles(tile, rowIndex) {\n    // Percent of the available vertical space that one row takes up.\n    let percentHeightPerTile = 100 / this._rowspan;\n    // Fraction of the horizontal gutter size that each column takes up.\n    let gutterHeightPerTile = (this._rows - 1) / this._rows;\n    // Base vertical size of a column.\n    let baseTileHeight = this.getBaseTileSize(percentHeightPerTile, gutterHeightPerTile);\n    tile._setStyle('top', this.getTilePosition(baseTileHeight, rowIndex));\n    tile._setStyle('height', calc(this.getTileSize(baseTileHeight, tile.rowspan)));\n  }\n  reset(list) {\n    if (list._tiles) {\n      list._tiles.forEach(tile => {\n        tile._setStyle('top', null);\n        tile._setStyle('height', null);\n      });\n    }\n  }\n}\n/** Wraps a CSS string in a calc function */\nfunction calc(exp) {\n  return `calc(${exp})`;\n}\n/** Appends pixels to a CSS string if no units are given. */\nfunction normalizeUnits(value) {\n  return value.match(/([A-Za-z%]+)$/) ? value : `${value}px`;\n}\n\n// TODO(kara): Conditional (responsive) column count / row size.\n// TODO(kara): Re-layout on window resize / media change (debounced).\n// TODO(kara): gridTileHeader and gridTileFooter.\nconst MAT_FIT_MODE = 'fit';\nclass MatGridList {\n  _element = inject(ElementRef);\n  _dir = inject(Directionality, {\n    optional: true\n  });\n  /** Number of columns being rendered. */\n  _cols;\n  /** Used for determining the position of each tile in the grid. */\n  _tileCoordinator;\n  /**\n   * Row height value passed in by user. This can be one of three types:\n   * - Number value (ex: \"100px\"):  sets a fixed row height to that value\n   * - Ratio value (ex: \"4:3\"): sets the row height based on width:height ratio\n   * - \"Fit\" mode (ex: \"fit\"): sets the row height to total height divided by number of rows\n   */\n  _rowHeight;\n  /** The amount of space between tiles. This will be something like '5px' or '2em'. */\n  _gutter = '1px';\n  /** Sets position and size styles for a tile */\n  _tileStyler;\n  /** Query list of tiles that are being rendered. */\n  _tiles;\n  constructor() {}\n  /** Amount of columns in the grid list. */\n  get cols() {\n    return this._cols;\n  }\n  set cols(value) {\n    this._cols = Math.max(1, Math.round(coerceNumberProperty(value)));\n  }\n  /** Size of the grid list's gutter in pixels. */\n  get gutterSize() {\n    return this._gutter;\n  }\n  set gutterSize(value) {\n    this._gutter = `${value == null ? '' : value}`;\n  }\n  /** Set internal representation of row height from the user-provided value. */\n  get rowHeight() {\n    return this._rowHeight;\n  }\n  set rowHeight(value) {\n    const newValue = `${value == null ? '' : value}`;\n    if (newValue !== this._rowHeight) {\n      this._rowHeight = newValue;\n      this._setTileStyler(this._rowHeight);\n    }\n  }\n  ngOnInit() {\n    this._checkCols();\n    this._checkRowHeight();\n  }\n  /**\n   * The layout calculation is fairly cheap if nothing changes, so there's little cost\n   * to run it frequently.\n   */\n  ngAfterContentChecked() {\n    this._layoutTiles();\n  }\n  /** Throw a friendly error if cols property is missing */\n  _checkCols() {\n    if (!this.cols && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error(`mat-grid-list: must pass in number of columns. ` + `Example: <mat-grid-list cols=\"3\">`);\n    }\n  }\n  /** Default to equal width:height if rowHeight property is missing */\n  _checkRowHeight() {\n    if (!this._rowHeight) {\n      this._setTileStyler('1:1');\n    }\n  }\n  /** Creates correct Tile Styler subtype based on rowHeight passed in by user */\n  _setTileStyler(rowHeight) {\n    if (this._tileStyler) {\n      this._tileStyler.reset(this);\n    }\n    if (rowHeight === MAT_FIT_MODE) {\n      this._tileStyler = new FitTileStyler();\n    } else if (rowHeight && rowHeight.indexOf(':') > -1) {\n      this._tileStyler = new RatioTileStyler(rowHeight);\n    } else {\n      this._tileStyler = new FixedTileStyler(rowHeight);\n    }\n  }\n  /** Computes and applies the size and position for all children grid tiles. */\n  _layoutTiles() {\n    if (!this._tileCoordinator) {\n      this._tileCoordinator = new TileCoordinator();\n    }\n    const tracker = this._tileCoordinator;\n    const tiles = this._tiles.filter(tile => !tile._gridList || tile._gridList === this);\n    const direction = this._dir ? this._dir.value : 'ltr';\n    this._tileCoordinator.update(this.cols, tiles);\n    this._tileStyler.init(this.gutterSize, tracker, this.cols, direction);\n    tiles.forEach((tile, index) => {\n      const pos = tracker.positions[index];\n      this._tileStyler.setStyle(tile, pos.row, pos.col);\n    });\n    this._setListStyle(this._tileStyler.getComputedHeight());\n  }\n  /** Sets style on the main grid-list element, given the style name and value. */\n  _setListStyle(style) {\n    if (style) {\n      this._element.nativeElement.style[style[0]] = style[1];\n    }\n  }\n  static ɵfac = function MatGridList_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatGridList)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatGridList,\n    selectors: [[\"mat-grid-list\"]],\n    contentQueries: function MatGridList_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatGridTile, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._tiles = _t);\n      }\n    },\n    hostAttrs: [1, \"mat-grid-list\"],\n    hostVars: 1,\n    hostBindings: function MatGridList_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"cols\", ctx.cols);\n      }\n    },\n    inputs: {\n      cols: \"cols\",\n      gutterSize: \"gutterSize\",\n      rowHeight: \"rowHeight\"\n    },\n    exportAs: [\"matGridList\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_GRID_LIST,\n      useExisting: MatGridList\n    }])],\n    ngContentSelectors: _c0,\n    decls: 2,\n    vars: 0,\n    template: function MatGridList_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵdomElementStart(0, \"div\");\n        i0.ɵɵprojection(1);\n        i0.ɵɵdomElementEnd();\n      }\n    },\n    styles: [_c3],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatGridList, [{\n    type: Component,\n    args: [{\n      selector: 'mat-grid-list',\n      exportAs: 'matGridList',\n      host: {\n        'class': 'mat-grid-list',\n        // Ensures that the \"cols\" input value is reflected in the DOM. This is\n        // needed for the grid-list harness.\n        '[attr.cols]': 'cols'\n      },\n      providers: [{\n        provide: MAT_GRID_LIST,\n        useExisting: MatGridList\n      }],\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      encapsulation: ViewEncapsulation.None,\n      template: \"<div>\\n  <ng-content></ng-content>\\n</div>\",\n      styles: [\".mat-grid-list{display:block;position:relative}.mat-grid-tile{display:block;position:absolute;overflow:hidden}.mat-grid-tile .mat-grid-tile-header,.mat-grid-tile .mat-grid-tile-footer{display:flex;align-items:center;height:48px;color:#fff;background:rgba(0,0,0,.38);overflow:hidden;padding:0 16px;position:absolute;left:0;right:0}.mat-grid-tile .mat-grid-tile-header>*,.mat-grid-tile .mat-grid-tile-footer>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-tile-header.mat-2-line,.mat-grid-tile .mat-grid-tile-footer.mat-2-line{height:68px}.mat-grid-tile .mat-grid-list-text{display:flex;flex-direction:column;flex:auto;box-sizing:border-box;overflow:hidden}.mat-grid-tile .mat-grid-list-text>*{margin:0;padding:0;font-weight:normal;font-size:inherit}.mat-grid-tile .mat-grid-list-text:empty{display:none}.mat-grid-tile .mat-grid-tile-header{top:0}.mat-grid-tile .mat-grid-tile-footer{bottom:0}.mat-grid-tile .mat-grid-avatar{padding-right:16px}[dir=rtl] .mat-grid-tile .mat-grid-avatar{padding-right:0;padding-left:16px}.mat-grid-tile .mat-grid-avatar:empty{display:none}.mat-grid-tile-header{font-size:var(--mat-grid-list-tile-header-primary-text-size, var(--mat-sys-body-large))}.mat-grid-tile-header .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile-header .mat-line:nth-child(n+2){font-size:var(--mat-grid-list-tile-header-secondary-text-size, var(--mat-sys-body-medium))}.mat-grid-tile-footer{font-size:var(--mat-grid-list-tile-footer-primary-text-size, var(--mat-sys-body-large))}.mat-grid-tile-footer .mat-line{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;box-sizing:border-box}.mat-grid-tile-footer .mat-line:nth-child(n+2){font-size:var(--mat-grid-list-tile-footer-secondary-text-size, var(--mat-sys-body-medium))}.mat-grid-tile-content{top:0;left:0;right:0;bottom:0;position:absolute;display:flex;align-items:center;justify-content:center;height:100%;padding:0;margin:0}\\n\"]\n    }]\n  }], () => [], {\n    _tiles: [{\n      type: ContentChildren,\n      args: [MatGridTile, {\n        descendants: true\n      }]\n    }],\n    cols: [{\n      type: Input\n    }],\n    gutterSize: [{\n      type: Input\n    }],\n    rowHeight: [{\n      type: Input\n    }]\n  });\n})();\nclass MatGridListModule {\n  static ɵfac = function MatGridListModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatGridListModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatGridListModule,\n    imports: [MatLineModule, MatCommonModule, MatGridList, MatGridTile, MatGridTileText, MatGridTileHeaderCssMatStyler, MatGridTileFooterCssMatStyler, MatGridAvatarCssMatStyler],\n    exports: [MatGridList, MatGridTile, MatGridTileText, MatLineModule, MatCommonModule, MatGridTileHeaderCssMatStyler, MatGridTileFooterCssMatStyler, MatGridAvatarCssMatStyler]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [MatLineModule, MatCommonModule, MatLineModule, MatCommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatGridListModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatLineModule, MatCommonModule, MatGridList, MatGridTile, MatGridTileText, MatGridTileHeaderCssMatStyler, MatGridTileFooterCssMatStyler, MatGridAvatarCssMatStyler],\n      exports: [MatGridList, MatGridTile, MatGridTileText, MatLineModule, MatCommonModule, MatGridTileHeaderCssMatStyler, MatGridTileFooterCssMatStyler, MatGridAvatarCssMatStyler]\n    }]\n  }], null, null);\n})();\nexport { MatGridAvatarCssMatStyler, MatGridList, MatGridListModule, MatGridTile, MatGridTileFooterCssMatStyler, MatGridTileHeaderCssMatStyler, MatGridTileText, MatLine };\n","import { Subject } from 'rxjs';\n\n/**\n * Class to be used to power selecting one or more options from a list.\n */\nclass SelectionModel {\n    _multiple;\n    _emitChanges;\n    compareWith;\n    /** Currently-selected values. */\n    _selection = new Set();\n    /** Keeps track of the deselected options that haven't been emitted by the change event. */\n    _deselectedToEmit = [];\n    /** Keeps track of the selected options that haven't been emitted by the change event. */\n    _selectedToEmit = [];\n    /** Cache for the array value of the selected items. */\n    _selected;\n    /** Selected values. */\n    get selected() {\n        if (!this._selected) {\n            this._selected = Array.from(this._selection.values());\n        }\n        return this._selected;\n    }\n    /** Event emitted when the value has changed. */\n    changed = new Subject();\n    constructor(_multiple = false, initiallySelectedValues, _emitChanges = true, compareWith) {\n        this._multiple = _multiple;\n        this._emitChanges = _emitChanges;\n        this.compareWith = compareWith;\n        if (initiallySelectedValues && initiallySelectedValues.length) {\n            if (_multiple) {\n                initiallySelectedValues.forEach(value => this._markSelected(value));\n            }\n            else {\n                this._markSelected(initiallySelectedValues[0]);\n            }\n            // Clear the array in order to avoid firing the change event for preselected values.\n            this._selectedToEmit.length = 0;\n        }\n    }\n    /**\n     * Selects a value or an array of values.\n     * @param values The values to select\n     * @return Whether the selection changed as a result of this call\n     */\n    select(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach(value => this._markSelected(value));\n        const changed = this._hasQueuedChanges();\n        this._emitChangeEvent();\n        return changed;\n    }\n    /**\n     * Deselects a value or an array of values.\n     * @param values The values to deselect\n     * @return Whether the selection changed as a result of this call\n     */\n    deselect(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach(value => this._unmarkSelected(value));\n        const changed = this._hasQueuedChanges();\n        this._emitChangeEvent();\n        return changed;\n    }\n    /**\n     * Sets the selected values\n     * @param values The new selected values\n     * @return Whether the selection changed as a result of this call\n     */\n    setSelection(...values) {\n        this._verifyValueAssignment(values);\n        const oldValues = this.selected;\n        const newSelectedSet = new Set(values.map(value => this._getConcreteValue(value)));\n        values.forEach(value => this._markSelected(value));\n        oldValues\n            .filter(value => !newSelectedSet.has(this._getConcreteValue(value, newSelectedSet)))\n            .forEach(value => this._unmarkSelected(value));\n        const changed = this._hasQueuedChanges();\n        this._emitChangeEvent();\n        return changed;\n    }\n    /**\n     * Toggles a value between selected and deselected.\n     * @param value The value to toggle\n     * @return Whether the selection changed as a result of this call\n     */\n    toggle(value) {\n        return this.isSelected(value) ? this.deselect(value) : this.select(value);\n    }\n    /**\n     * Clears all of the selected values.\n     * @param flushEvent Whether to flush the changes in an event.\n     *   If false, the changes to the selection will be flushed along with the next event.\n     * @return Whether the selection changed as a result of this call\n     */\n    clear(flushEvent = true) {\n        this._unmarkAll();\n        const changed = this._hasQueuedChanges();\n        if (flushEvent) {\n            this._emitChangeEvent();\n        }\n        return changed;\n    }\n    /**\n     * Determines whether a value is selected.\n     */\n    isSelected(value) {\n        return this._selection.has(this._getConcreteValue(value));\n    }\n    /**\n     * Determines whether the model does not have a value.\n     */\n    isEmpty() {\n        return this._selection.size === 0;\n    }\n    /**\n     * Determines whether the model has a value.\n     */\n    hasValue() {\n        return !this.isEmpty();\n    }\n    /**\n     * Sorts the selected values based on a predicate function.\n     */\n    sort(predicate) {\n        if (this._multiple && this.selected) {\n            this._selected.sort(predicate);\n        }\n    }\n    /**\n     * Gets whether multiple values can be selected.\n     */\n    isMultipleSelection() {\n        return this._multiple;\n    }\n    /** Emits a change event and clears the records of selected and deselected values. */\n    _emitChangeEvent() {\n        // Clear the selected values so they can be re-cached.\n        this._selected = null;\n        if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n            this.changed.next({\n                source: this,\n                added: this._selectedToEmit,\n                removed: this._deselectedToEmit,\n            });\n            this._deselectedToEmit = [];\n            this._selectedToEmit = [];\n        }\n    }\n    /** Selects a value. */\n    _markSelected(value) {\n        value = this._getConcreteValue(value);\n        if (!this.isSelected(value)) {\n            if (!this._multiple) {\n                this._unmarkAll();\n            }\n            if (!this.isSelected(value)) {\n                this._selection.add(value);\n            }\n            if (this._emitChanges) {\n                this._selectedToEmit.push(value);\n            }\n        }\n    }\n    /** Deselects a value. */\n    _unmarkSelected(value) {\n        value = this._getConcreteValue(value);\n        if (this.isSelected(value)) {\n            this._selection.delete(value);\n            if (this._emitChanges) {\n                this._deselectedToEmit.push(value);\n            }\n        }\n    }\n    /** Clears out the selected values. */\n    _unmarkAll() {\n        if (!this.isEmpty()) {\n            this._selection.forEach(value => this._unmarkSelected(value));\n        }\n    }\n    /**\n     * Verifies the value assignment and throws an error if the specified value array is\n     * including multiple values while the selection model is not supporting multiple values.\n     */\n    _verifyValueAssignment(values) {\n        if (values.length > 1 && !this._multiple && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMultipleValuesInSingleSelectionError();\n        }\n    }\n    /** Whether there are queued up change to be emitted. */\n    _hasQueuedChanges() {\n        return !!(this._deselectedToEmit.length || this._selectedToEmit.length);\n    }\n    /** Returns a value that is comparable to inputValue by applying compareWith function, returns the same inputValue otherwise. */\n    _getConcreteValue(inputValue, selection) {\n        if (!this.compareWith) {\n            return inputValue;\n        }\n        else {\n            selection = selection ?? this._selection;\n            for (let selectedValue of selection) {\n                if (this.compareWith(inputValue, selectedValue)) {\n                    return selectedValue;\n                }\n            }\n            return inputValue;\n        }\n    }\n}\n/**\n * Returns an error that reports that multiple values are passed into a selection model\n * with a single value.\n * @docs-private\n */\nfunction getMultipleValuesInSingleSelectionError() {\n    return Error('Cannot pass multiple values into SelectionModel with single-value mode.');\n}\n\nexport { SelectionModel, getMultipleValuesInSingleSelectionError };\n\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input } from '@angular/core';\nimport { _animationsDisabled } from './animation.mjs';\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\nclass MatPseudoCheckbox {\n  _animationsDisabled = _animationsDisabled();\n  /** Display state of the checkbox. */\n  state = 'unchecked';\n  /** Whether the checkbox is disabled. */\n  disabled = false;\n  /**\n   * Appearance of the pseudo checkbox. Default appearance of 'full' renders a checkmark/mixedmark\n   * indicator inside a square box. 'minimal' appearance only renders the checkmark/mixedmark.\n   */\n  appearance = 'full';\n  constructor() {}\n  static ɵfac = function MatPseudoCheckbox_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatPseudoCheckbox)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatPseudoCheckbox,\n    selectors: [[\"mat-pseudo-checkbox\"]],\n    hostAttrs: [1, \"mat-pseudo-checkbox\"],\n    hostVars: 12,\n    hostBindings: function MatPseudoCheckbox_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵclassProp(\"mat-pseudo-checkbox-indeterminate\", ctx.state === \"indeterminate\")(\"mat-pseudo-checkbox-checked\", ctx.state === \"checked\")(\"mat-pseudo-checkbox-disabled\", ctx.disabled)(\"mat-pseudo-checkbox-minimal\", ctx.appearance === \"minimal\")(\"mat-pseudo-checkbox-full\", ctx.appearance === \"full\")(\"_mat-animation-noopable\", ctx._animationsDisabled);\n      }\n    },\n    inputs: {\n      state: \"state\",\n      disabled: \"disabled\",\n      appearance: \"appearance\"\n    },\n    decls: 0,\n    vars: 0,\n    template: function MatPseudoCheckbox_Template(rf, ctx) {},\n    styles: [\".mat-pseudo-checkbox{border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{left:1px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{left:1px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after,.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{color:var(--mat-pseudo-checkbox-minimal-selected-checkmark-color, var(--mat-sys-primary))}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled::after,.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled::after{color:var(--mat-pseudo-checkbox-minimal-disabled-selected-checkmark-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-pseudo-checkbox-full{border-color:var(--mat-pseudo-checkbox-full-unselected-icon-color, var(--mat-sys-on-surface-variant));border-width:2px;border-style:solid}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-disabled{border-color:var(--mat-pseudo-checkbox-full-disabled-unselected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate{background-color:var(--mat-pseudo-checkbox-full-selected-icon-color, var(--mat-sys-primary));border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{color:var(--mat-pseudo-checkbox-full-selected-checkmark-color, var(--mat-sys-on-primary))}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled{background-color:var(--mat-pseudo-checkbox-full-disabled-selected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled::after,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled::after{color:var(--mat-pseudo-checkbox-full-disabled-selected-checkmark-color, var(--mat-sys-surface))}.mat-pseudo-checkbox{width:18px;height:18px}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after{width:14px;height:6px;transform-origin:center;top:-4.2426406871px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{top:8px;width:16px}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after{width:10px;height:4px;transform-origin:center;top:-2.8284271247px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{top:6px;width:12px}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatPseudoCheckbox, [{\n    type: Component,\n    args: [{\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      selector: 'mat-pseudo-checkbox',\n      template: '',\n      host: {\n        'class': 'mat-pseudo-checkbox',\n        '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n        '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n        '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n        '[class.mat-pseudo-checkbox-minimal]': 'appearance === \"minimal\"',\n        '[class.mat-pseudo-checkbox-full]': 'appearance === \"full\"',\n        '[class._mat-animation-noopable]': '_animationsDisabled'\n      },\n      styles: [\".mat-pseudo-checkbox{border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{left:1px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{left:1px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after,.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{color:var(--mat-pseudo-checkbox-minimal-selected-checkmark-color, var(--mat-sys-primary))}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled::after,.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled::after{color:var(--mat-pseudo-checkbox-minimal-disabled-selected-checkmark-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-pseudo-checkbox-full{border-color:var(--mat-pseudo-checkbox-full-unselected-icon-color, var(--mat-sys-on-surface-variant));border-width:2px;border-style:solid}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-disabled{border-color:var(--mat-pseudo-checkbox-full-disabled-unselected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate{background-color:var(--mat-pseudo-checkbox-full-selected-icon-color, var(--mat-sys-primary));border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{color:var(--mat-pseudo-checkbox-full-selected-checkmark-color, var(--mat-sys-on-primary))}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled{background-color:var(--mat-pseudo-checkbox-full-disabled-selected-icon-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled::after,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled::after{color:var(--mat-pseudo-checkbox-full-disabled-selected-checkmark-color, var(--mat-sys-surface))}.mat-pseudo-checkbox{width:18px;height:18px}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after{width:14px;height:6px;transform-origin:center;top:-4.2426406871px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{top:8px;width:16px}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after{width:10px;height:4px;transform-origin:center;top:-2.8284271247px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{top:6px;width:12px}\\n\"]\n    }]\n  }], () => [], {\n    state: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    appearance: [{\n      type: Input\n    }]\n  });\n})();\nexport { MatPseudoCheckbox };\n","import { _IdGenerator, FocusMonitor } from '@angular/cdk/a11y';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { hasModifierKey, RIGHT_ARROW, DOWN_ARROW, LEFT_ARROW, UP_ARROW, ENTER, SPACE } from '@angular/cdk/keycodes';\nimport { _CdkPrivateStyleLoader } from '@angular/cdk/private';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, inject, ChangeDetectorRef, EventEmitter, booleanAttribute, Directive, ContentChildren, Input, Output, ElementRef, HostAttributeToken, signal, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { MatRipple } from './ripple.mjs';\nimport { MatPseudoCheckbox } from './pseudo-checkbox.mjs';\nimport { _animationsDisabled } from './animation.mjs';\nimport { _StructuralStylesLoader } from './structural-styles.mjs';\nimport { MatCommonModule } from './common-module.mjs';\nimport { MatRippleModule } from './ripple-module.mjs';\nimport '@angular/cdk/platform';\nimport '@angular/cdk/coercion';\nimport '@angular/cdk/layout';\n\n/**\n * Injection token that can be used to configure the\n * default options for all button toggles within an app.\n */\nconst _c0 = [\"button\"];\nconst _c1 = [\"*\"];\nfunction MatButtonToggle_Conditional_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵelement(1, \"mat-pseudo-checkbox\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"disabled\", ctx_r1.disabled);\n  }\n}\nconst MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS', {\n  providedIn: 'root',\n  factory: MAT_BUTTON_TOGGLE_GROUP_DEFAULT_OPTIONS_FACTORY\n});\n/**\n * @docs-private\n * @deprecated No longer used, will be removed.\n * @breaking-change 21.0.0\n */\nfunction MAT_BUTTON_TOGGLE_GROUP_DEFAULT_OPTIONS_FACTORY() {\n  return {\n    hideSingleSelectionIndicator: false,\n    hideMultipleSelectionIndicator: false,\n    disabledInteractive: false\n  };\n}\n/**\n * Injection token that can be used to reference instances of `MatButtonToggleGroup`.\n * It serves as alternative token to the actual `MatButtonToggleGroup` class which\n * could cause unnecessary retention of the class and its component metadata.\n */\nconst MAT_BUTTON_TOGGLE_GROUP = new InjectionToken('MatButtonToggleGroup');\n/**\n * Provider Expression that allows mat-button-toggle-group to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatButtonToggleGroup),\n  multi: true\n};\n/** Change event object emitted by button toggle. */\nclass MatButtonToggleChange {\n  source;\n  value;\n  constructor(/** The button toggle that emits the event. */\n  source, /** The value assigned to the button toggle. */\n  value) {\n    this.source = source;\n    this.value = value;\n  }\n}\n/** Exclusive selection button toggle group that behaves like a radio-button group. */\nclass MatButtonToggleGroup {\n  _changeDetector = inject(ChangeDetectorRef);\n  _dir = inject(Directionality, {\n    optional: true\n  });\n  _multiple = false;\n  _disabled = false;\n  _disabledInteractive = false;\n  _selectionModel;\n  /**\n   * Reference to the raw value that the consumer tried to assign. The real\n   * value will exclude any values from this one that don't correspond to a\n   * toggle. Useful for the cases where the value is assigned before the toggles\n   * have been initialized or at the same that they're being swapped out.\n   */\n  _rawValue;\n  /**\n   * The method to be called in order to update ngModel.\n   * Now `ngModel` binding is not supported in multiple selection mode.\n   */\n  _controlValueAccessorChangeFn = () => {};\n  /** onTouch function registered via registerOnTouch (ControlValueAccessor). */\n  _onTouched = () => {};\n  /** Child button toggle buttons. */\n  _buttonToggles;\n  /** The appearance for all the buttons in the group. */\n  appearance;\n  /** `name` attribute for the underlying `input` element. */\n  get name() {\n    return this._name;\n  }\n  set name(value) {\n    this._name = value;\n    this._markButtonsForCheck();\n  }\n  _name = inject(_IdGenerator).getId('mat-button-toggle-group-');\n  /** Whether the toggle group is vertical. */\n  vertical;\n  /** Value of the toggle group. */\n  get value() {\n    const selected = this._selectionModel ? this._selectionModel.selected : [];\n    if (this.multiple) {\n      return selected.map(toggle => toggle.value);\n    }\n    return selected[0] ? selected[0].value : undefined;\n  }\n  set value(newValue) {\n    this._setSelectionByValue(newValue);\n    this.valueChange.emit(this.value);\n  }\n  /**\n   * Event that emits whenever the value of the group changes.\n   * Used to facilitate two-way data binding.\n   * @docs-private\n   */\n  valueChange = new EventEmitter();\n  /** Selected button toggles in the group. */\n  get selected() {\n    const selected = this._selectionModel ? this._selectionModel.selected : [];\n    return this.multiple ? selected : selected[0] || null;\n  }\n  /** Whether multiple button toggles can be selected. */\n  get multiple() {\n    return this._multiple;\n  }\n  set multiple(value) {\n    this._multiple = value;\n    this._markButtonsForCheck();\n  }\n  /** Whether multiple button toggle group is disabled. */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n    this._markButtonsForCheck();\n  }\n  /** Whether buttons in the group should be interactive while they're disabled. */\n  get disabledInteractive() {\n    return this._disabledInteractive;\n  }\n  set disabledInteractive(value) {\n    this._disabledInteractive = value;\n    this._markButtonsForCheck();\n  }\n  /** The layout direction of the toggle button group. */\n  get dir() {\n    return this._dir && this._dir.value === 'rtl' ? 'rtl' : 'ltr';\n  }\n  /** Event emitted when the group's value changes. */\n  change = new EventEmitter();\n  /** Whether checkmark indicator for single-selection button toggle groups is hidden. */\n  get hideSingleSelectionIndicator() {\n    return this._hideSingleSelectionIndicator;\n  }\n  set hideSingleSelectionIndicator(value) {\n    this._hideSingleSelectionIndicator = value;\n    this._markButtonsForCheck();\n  }\n  _hideSingleSelectionIndicator;\n  /** Whether checkmark indicator for multiple-selection button toggle groups is hidden. */\n  get hideMultipleSelectionIndicator() {\n    return this._hideMultipleSelectionIndicator;\n  }\n  set hideMultipleSelectionIndicator(value) {\n    this._hideMultipleSelectionIndicator = value;\n    this._markButtonsForCheck();\n  }\n  _hideMultipleSelectionIndicator;\n  constructor() {\n    const defaultOptions = inject(MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, {\n      optional: true\n    });\n    this.appearance = defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n    this.hideSingleSelectionIndicator = defaultOptions?.hideSingleSelectionIndicator ?? false;\n    this.hideMultipleSelectionIndicator = defaultOptions?.hideMultipleSelectionIndicator ?? false;\n  }\n  ngOnInit() {\n    this._selectionModel = new SelectionModel(this.multiple, undefined, false);\n  }\n  ngAfterContentInit() {\n    this._selectionModel.select(...this._buttonToggles.filter(toggle => toggle.checked));\n    if (!this.multiple) {\n      this._initializeTabIndex();\n    }\n  }\n  /**\n   * Sets the model value. Implemented as part of ControlValueAccessor.\n   * @param value Value to be set to the model.\n   */\n  writeValue(value) {\n    this.value = value;\n    this._changeDetector.markForCheck();\n  }\n  // Implemented as part of ControlValueAccessor.\n  registerOnChange(fn) {\n    this._controlValueAccessorChangeFn = fn;\n  }\n  // Implemented as part of ControlValueAccessor.\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  // Implemented as part of ControlValueAccessor.\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  /** Handle keydown event calling to single-select button toggle. */\n  _keydown(event) {\n    if (this.multiple || this.disabled || hasModifierKey(event)) {\n      return;\n    }\n    const target = event.target;\n    const buttonId = target.id;\n    const index = this._buttonToggles.toArray().findIndex(toggle => {\n      return toggle.buttonId === buttonId;\n    });\n    let nextButton = null;\n    switch (event.keyCode) {\n      case SPACE:\n      case ENTER:\n        nextButton = this._buttonToggles.get(index) || null;\n        break;\n      case UP_ARROW:\n        nextButton = this._getNextButton(index, -1);\n        break;\n      case LEFT_ARROW:\n        nextButton = this._getNextButton(index, this.dir === 'ltr' ? -1 : 1);\n        break;\n      case DOWN_ARROW:\n        nextButton = this._getNextButton(index, 1);\n        break;\n      case RIGHT_ARROW:\n        nextButton = this._getNextButton(index, this.dir === 'ltr' ? 1 : -1);\n        break;\n      default:\n        return;\n    }\n    if (nextButton) {\n      event.preventDefault();\n      nextButton._onButtonClick();\n      nextButton.focus();\n    }\n  }\n  /** Dispatch change event with current selection and group value. */\n  _emitChangeEvent(toggle) {\n    const event = new MatButtonToggleChange(toggle, this.value);\n    this._rawValue = event.value;\n    this._controlValueAccessorChangeFn(event.value);\n    this.change.emit(event);\n  }\n  /**\n   * Syncs a button toggle's selected state with the model value.\n   * @param toggle Toggle to be synced.\n   * @param select Whether the toggle should be selected.\n   * @param isUserInput Whether the change was a result of a user interaction.\n   * @param deferEvents Whether to defer emitting the change events.\n   */\n  _syncButtonToggle(toggle, select, isUserInput = false, deferEvents = false) {\n    // Deselect the currently-selected toggle, if we're in single-selection\n    // mode and the button being toggled isn't selected at the moment.\n    if (!this.multiple && this.selected && !toggle.checked) {\n      this.selected.checked = false;\n    }\n    if (this._selectionModel) {\n      if (select) {\n        this._selectionModel.select(toggle);\n      } else {\n        this._selectionModel.deselect(toggle);\n      }\n    } else {\n      deferEvents = true;\n    }\n    // We need to defer in some cases in order to avoid \"changed after checked errors\", however\n    // the side-effect is that we may end up updating the model value out of sequence in others\n    // The `deferEvents` flag allows us to decide whether to do it on a case-by-case basis.\n    if (deferEvents) {\n      Promise.resolve().then(() => this._updateModelValue(toggle, isUserInput));\n    } else {\n      this._updateModelValue(toggle, isUserInput);\n    }\n  }\n  /** Checks whether a button toggle is selected. */\n  _isSelected(toggle) {\n    return this._selectionModel && this._selectionModel.isSelected(toggle);\n  }\n  /** Determines whether a button toggle should be checked on init. */\n  _isPrechecked(toggle) {\n    if (typeof this._rawValue === 'undefined') {\n      return false;\n    }\n    if (this.multiple && Array.isArray(this._rawValue)) {\n      return this._rawValue.some(value => toggle.value != null && value === toggle.value);\n    }\n    return toggle.value === this._rawValue;\n  }\n  /** Initializes the tabindex attribute using the radio pattern. */\n  _initializeTabIndex() {\n    this._buttonToggles.forEach(toggle => {\n      toggle.tabIndex = -1;\n    });\n    if (this.selected) {\n      this.selected.tabIndex = 0;\n    } else {\n      for (let i = 0; i < this._buttonToggles.length; i++) {\n        const toggle = this._buttonToggles.get(i);\n        if (!toggle.disabled) {\n          toggle.tabIndex = 0;\n          break;\n        }\n      }\n    }\n  }\n  /** Obtain the subsequent toggle to which the focus shifts. */\n  _getNextButton(startIndex, offset) {\n    const items = this._buttonToggles;\n    for (let i = 1; i <= items.length; i++) {\n      const index = (startIndex + offset * i + items.length) % items.length;\n      const item = items.get(index);\n      if (item && !item.disabled) {\n        return item;\n      }\n    }\n    return null;\n  }\n  /** Updates the selection state of the toggles in the group based on a value. */\n  _setSelectionByValue(value) {\n    this._rawValue = value;\n    if (!this._buttonToggles) {\n      return;\n    }\n    const toggles = this._buttonToggles.toArray();\n    if (this.multiple && value) {\n      if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('Value must be an array in multiple-selection mode.');\n      }\n      this._clearSelection();\n      value.forEach(currentValue => this._selectValue(currentValue, toggles));\n    } else {\n      this._clearSelection();\n      this._selectValue(value, toggles);\n    }\n    // In single selection mode we need at least one enabled toggle to always be focusable.\n    if (!this.multiple && toggles.every(toggle => toggle.tabIndex === -1)) {\n      for (const toggle of toggles) {\n        if (!toggle.disabled) {\n          toggle.tabIndex = 0;\n          break;\n        }\n      }\n    }\n  }\n  /** Clears the selected toggles. */\n  _clearSelection() {\n    this._selectionModel.clear();\n    this._buttonToggles.forEach(toggle => {\n      toggle.checked = false;\n      // If the button toggle is in single select mode, initialize the tabIndex.\n      if (!this.multiple) {\n        toggle.tabIndex = -1;\n      }\n    });\n  }\n  /** Selects a value if there's a toggle that corresponds to it. */\n  _selectValue(value, toggles) {\n    for (const toggle of toggles) {\n      if (toggle.value === value) {\n        toggle.checked = true;\n        this._selectionModel.select(toggle);\n        if (!this.multiple) {\n          // If the button toggle is in single select mode, reset the tabIndex.\n          toggle.tabIndex = 0;\n        }\n        break;\n      }\n    }\n  }\n  /** Syncs up the group's value with the model and emits the change event. */\n  _updateModelValue(toggle, isUserInput) {\n    // Only emit the change event for user input.\n    if (isUserInput) {\n      this._emitChangeEvent(toggle);\n    }\n    // Note: we emit this one no matter whether it was a user interaction, because\n    // it is used by Angular to sync up the two-way data binding.\n    this.valueChange.emit(this.value);\n  }\n  /** Marks all of the child button toggles to be checked. */\n  _markButtonsForCheck() {\n    this._buttonToggles?.forEach(toggle => toggle._markForCheck());\n  }\n  static ɵfac = function MatButtonToggleGroup_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatButtonToggleGroup)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatButtonToggleGroup,\n    selectors: [[\"mat-button-toggle-group\"]],\n    contentQueries: function MatButtonToggleGroup_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatButtonToggle, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._buttonToggles = _t);\n      }\n    },\n    hostAttrs: [1, \"mat-button-toggle-group\"],\n    hostVars: 6,\n    hostBindings: function MatButtonToggleGroup_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function MatButtonToggleGroup_keydown_HostBindingHandler($event) {\n          return ctx._keydown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"role\", ctx.multiple ? \"group\" : \"radiogroup\")(\"aria-disabled\", ctx.disabled);\n        i0.ɵɵclassProp(\"mat-button-toggle-vertical\", ctx.vertical)(\"mat-button-toggle-group-appearance-standard\", ctx.appearance === \"standard\");\n      }\n    },\n    inputs: {\n      appearance: \"appearance\",\n      name: \"name\",\n      vertical: [2, \"vertical\", \"vertical\", booleanAttribute],\n      value: \"value\",\n      multiple: [2, \"multiple\", \"multiple\", booleanAttribute],\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      disabledInteractive: [2, \"disabledInteractive\", \"disabledInteractive\", booleanAttribute],\n      hideSingleSelectionIndicator: [2, \"hideSingleSelectionIndicator\", \"hideSingleSelectionIndicator\", booleanAttribute],\n      hideMultipleSelectionIndicator: [2, \"hideMultipleSelectionIndicator\", \"hideMultipleSelectionIndicator\", booleanAttribute]\n    },\n    outputs: {\n      valueChange: \"valueChange\",\n      change: \"change\"\n    },\n    exportAs: [\"matButtonToggleGroup\"],\n    features: [i0.ɵɵProvidersFeature([MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR, {\n      provide: MAT_BUTTON_TOGGLE_GROUP,\n      useExisting: MatButtonToggleGroup\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatButtonToggleGroup, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-button-toggle-group',\n      providers: [MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR, {\n        provide: MAT_BUTTON_TOGGLE_GROUP,\n        useExisting: MatButtonToggleGroup\n      }],\n      host: {\n        'class': 'mat-button-toggle-group',\n        '(keydown)': '_keydown($event)',\n        '[attr.role]': \"multiple ? 'group' : 'radiogroup'\",\n        '[attr.aria-disabled]': 'disabled',\n        '[class.mat-button-toggle-vertical]': 'vertical',\n        '[class.mat-button-toggle-group-appearance-standard]': 'appearance === \"standard\"'\n      },\n      exportAs: 'matButtonToggleGroup'\n    }]\n  }], () => [], {\n    _buttonToggles: [{\n      type: ContentChildren,\n      args: [forwardRef(() => MatButtonToggle), {\n        // Note that this would technically pick up toggles\n        // from nested groups, but that's not a case that we support.\n        descendants: true\n      }]\n    }],\n    appearance: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    vertical: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    value: [{\n      type: Input\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    multiple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disabledInteractive: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    change: [{\n      type: Output\n    }],\n    hideSingleSelectionIndicator: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    hideMultipleSelectionIndicator: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\n/** Single button inside of a toggle group. */\nclass MatButtonToggle {\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _elementRef = inject(ElementRef);\n  _focusMonitor = inject(FocusMonitor);\n  _idGenerator = inject(_IdGenerator);\n  _animationDisabled = _animationsDisabled();\n  _checked = false;\n  /**\n   * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n   * take precedence so this may be omitted.\n   */\n  ariaLabel;\n  /**\n   * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n   */\n  ariaLabelledby = null;\n  /** Underlying native `button` element. */\n  _buttonElement;\n  /** The parent button toggle group (exclusive selection). Optional. */\n  buttonToggleGroup;\n  /** Unique ID for the underlying `button` element. */\n  get buttonId() {\n    return `${this.id}-button`;\n  }\n  /** The unique ID for this button toggle. */\n  id;\n  /** HTML's 'name' attribute used to group radios for unique selection. */\n  name;\n  /** MatButtonToggleGroup reads this to assign its own value. */\n  value;\n  /** Tabindex of the toggle. */\n  get tabIndex() {\n    return this._tabIndex();\n  }\n  set tabIndex(value) {\n    this._tabIndex.set(value);\n  }\n  _tabIndex;\n  /** Whether ripples are disabled on the button toggle. */\n  disableRipple;\n  /** The appearance style of the button. */\n  get appearance() {\n    return this.buttonToggleGroup ? this.buttonToggleGroup.appearance : this._appearance;\n  }\n  set appearance(value) {\n    this._appearance = value;\n  }\n  _appearance;\n  /** Whether the button is checked. */\n  get checked() {\n    return this.buttonToggleGroup ? this.buttonToggleGroup._isSelected(this) : this._checked;\n  }\n  set checked(value) {\n    if (value !== this._checked) {\n      this._checked = value;\n      if (this.buttonToggleGroup) {\n        this.buttonToggleGroup._syncButtonToggle(this, this._checked);\n      }\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  /** Whether the button is disabled. */\n  get disabled() {\n    return this._disabled || this.buttonToggleGroup && this.buttonToggleGroup.disabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n  }\n  _disabled = false;\n  /** Whether the button should remain interactive when it is disabled. */\n  get disabledInteractive() {\n    return this._disabledInteractive || this.buttonToggleGroup !== null && this.buttonToggleGroup.disabledInteractive;\n  }\n  set disabledInteractive(value) {\n    this._disabledInteractive = value;\n  }\n  _disabledInteractive;\n  /** Event emitted when the group value changes. */\n  change = new EventEmitter();\n  constructor() {\n    inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n    const toggleGroup = inject(MAT_BUTTON_TOGGLE_GROUP, {\n      optional: true\n    });\n    const defaultTabIndex = inject(new HostAttributeToken('tabindex'), {\n      optional: true\n    }) || '';\n    const defaultOptions = inject(MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, {\n      optional: true\n    });\n    this._tabIndex = signal(parseInt(defaultTabIndex) || 0, ...(ngDevMode ? [{\n      debugName: \"_tabIndex\"\n    }] : []));\n    this.buttonToggleGroup = toggleGroup;\n    this.appearance = defaultOptions && defaultOptions.appearance ? defaultOptions.appearance : 'standard';\n    this.disabledInteractive = defaultOptions?.disabledInteractive ?? false;\n  }\n  ngOnInit() {\n    const group = this.buttonToggleGroup;\n    this.id = this.id || this._idGenerator.getId('mat-button-toggle-');\n    if (group) {\n      if (group._isPrechecked(this)) {\n        this.checked = true;\n      } else if (group._isSelected(this) !== this._checked) {\n        // As side effect of the circular dependency between the toggle group and the button,\n        // we may end up in a state where the button is supposed to be checked on init, but it\n        // isn't, because the checked value was assigned too early. This can happen when Ivy\n        // assigns the static input value before the `ngOnInit` has run.\n        group._syncButtonToggle(this, this._checked);\n      }\n    }\n  }\n  ngAfterViewInit() {\n    // This serves two purposes:\n    // 1. We don't want the animation to fire on the first render for pre-checked toggles so we\n    //    delay adding the class until the view is rendered.\n    // 2. We don't want animation if the `NoopAnimationsModule` is provided.\n    if (!this._animationDisabled) {\n      this._elementRef.nativeElement.classList.add('mat-button-toggle-animations-enabled');\n    }\n    this._focusMonitor.monitor(this._elementRef, true);\n  }\n  ngOnDestroy() {\n    const group = this.buttonToggleGroup;\n    this._focusMonitor.stopMonitoring(this._elementRef);\n    // Remove the toggle from the selection once it's destroyed. Needs to happen\n    // on the next tick in order to avoid \"changed after checked\" errors.\n    if (group && group._isSelected(this)) {\n      group._syncButtonToggle(this, false, false, true);\n    }\n  }\n  /** Focuses the button. */\n  focus(options) {\n    this._buttonElement.nativeElement.focus(options);\n  }\n  /** Checks the button toggle due to an interaction with the underlying native button. */\n  _onButtonClick() {\n    if (this.disabled) {\n      return;\n    }\n    const newChecked = this.isSingleSelector() ? true : !this._checked;\n    if (newChecked !== this._checked) {\n      this._checked = newChecked;\n      if (this.buttonToggleGroup) {\n        this.buttonToggleGroup._syncButtonToggle(this, this._checked, true);\n        this.buttonToggleGroup._onTouched();\n      }\n    }\n    if (this.isSingleSelector()) {\n      const focusable = this.buttonToggleGroup._buttonToggles.find(toggle => {\n        return toggle.tabIndex === 0;\n      });\n      // Modify the tabindex attribute of the last focusable button toggle to -1.\n      if (focusable) {\n        focusable.tabIndex = -1;\n      }\n      // Modify the tabindex attribute of the presently selected button toggle to 0.\n      this.tabIndex = 0;\n    }\n    // Emit a change event when it's the single selector\n    this.change.emit(new MatButtonToggleChange(this, this.value));\n  }\n  /**\n   * Marks the button toggle as needing checking for change detection.\n   * This method is exposed because the parent button toggle group will directly\n   * update bound properties of the radio button.\n   */\n  _markForCheck() {\n    // When the group value changes, the button will not be notified.\n    // Use `markForCheck` to explicit update button toggle's status.\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Gets the name that should be assigned to the inner DOM node. */\n  _getButtonName() {\n    if (this.isSingleSelector()) {\n      return this.buttonToggleGroup.name;\n    }\n    return this.name || null;\n  }\n  /** Whether the toggle is in single selection mode. */\n  isSingleSelector() {\n    return this.buttonToggleGroup && !this.buttonToggleGroup.multiple;\n  }\n  static ɵfac = function MatButtonToggle_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatButtonToggle)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatButtonToggle,\n    selectors: [[\"mat-button-toggle\"]],\n    viewQuery: function MatButtonToggle_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._buttonElement = _t.first);\n      }\n    },\n    hostAttrs: [\"role\", \"presentation\", 1, \"mat-button-toggle\"],\n    hostVars: 14,\n    hostBindings: function MatButtonToggle_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"focus\", function MatButtonToggle_focus_HostBindingHandler() {\n          return ctx.focus();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-label\", null)(\"aria-labelledby\", null)(\"id\", ctx.id)(\"name\", null);\n        i0.ɵɵclassProp(\"mat-button-toggle-standalone\", !ctx.buttonToggleGroup)(\"mat-button-toggle-checked\", ctx.checked)(\"mat-button-toggle-disabled\", ctx.disabled)(\"mat-button-toggle-disabled-interactive\", ctx.disabledInteractive)(\"mat-button-toggle-appearance-standard\", ctx.appearance === \"standard\");\n      }\n    },\n    inputs: {\n      ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n      ariaLabelledby: [0, \"aria-labelledby\", \"ariaLabelledby\"],\n      id: \"id\",\n      name: \"name\",\n      value: \"value\",\n      tabIndex: \"tabIndex\",\n      disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n      appearance: \"appearance\",\n      checked: [2, \"checked\", \"checked\", booleanAttribute],\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      disabledInteractive: [2, \"disabledInteractive\", \"disabledInteractive\", booleanAttribute]\n    },\n    outputs: {\n      change: \"change\"\n    },\n    exportAs: [\"matButtonToggle\"],\n    ngContentSelectors: _c1,\n    decls: 7,\n    vars: 13,\n    consts: [[\"button\", \"\"], [\"type\", \"button\", 1, \"mat-button-toggle-button\", \"mat-focus-indicator\", 3, \"click\", \"id\", \"disabled\"], [1, \"mat-button-toggle-checkbox-wrapper\"], [1, \"mat-button-toggle-label-content\"], [1, \"mat-button-toggle-focus-overlay\"], [\"matRipple\", \"\", 1, \"mat-button-toggle-ripple\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [\"state\", \"checked\", \"aria-hidden\", \"true\", \"appearance\", \"minimal\", 3, \"disabled\"]],\n    template: function MatButtonToggle_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r1 = i0.ɵɵgetCurrentView();\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"button\", 1, 0);\n        i0.ɵɵlistener(\"click\", function MatButtonToggle_Template_button_click_0_listener() {\n          i0.ɵɵrestoreView(_r1);\n          return i0.ɵɵresetView(ctx._onButtonClick());\n        });\n        i0.ɵɵconditionalCreate(2, MatButtonToggle_Conditional_2_Template, 2, 1, \"div\", 2);\n        i0.ɵɵelementStart(3, \"span\", 3);\n        i0.ɵɵprojection(4);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(5, \"span\", 4)(6, \"span\", 5);\n      }\n      if (rf & 2) {\n        const button_r3 = i0.ɵɵreference(1);\n        i0.ɵɵproperty(\"id\", ctx.buttonId)(\"disabled\", ctx.disabled && !ctx.disabledInteractive || null);\n        i0.ɵɵattribute(\"role\", ctx.isSingleSelector() ? \"radio\" : \"button\")(\"tabindex\", ctx.disabled && !ctx.disabledInteractive ? -1 : ctx.tabIndex)(\"aria-pressed\", !ctx.isSingleSelector() ? ctx.checked : null)(\"aria-checked\", ctx.isSingleSelector() ? ctx.checked : null)(\"name\", ctx._getButtonName())(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx.ariaLabelledby)(\"aria-disabled\", ctx.disabled && ctx.disabledInteractive ? \"true\" : null);\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(ctx.buttonToggleGroup && (!ctx.buttonToggleGroup.multiple && !ctx.buttonToggleGroup.hideSingleSelectionIndicator || ctx.buttonToggleGroup.multiple && !ctx.buttonToggleGroup.hideMultipleSelectionIndicator) ? 2 : -1);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"matRippleTrigger\", button_r3)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled);\n      }\n    },\n    dependencies: [MatRipple, MatPseudoCheckbox],\n    styles: [\".mat-button-toggle-standalone,.mat-button-toggle-group{position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;-webkit-tap-highlight-color:rgba(0,0,0,0);border-radius:var(--mat-button-toggle-legacy-shape);transform:translateZ(0)}.mat-button-toggle-standalone:not([class*=mat-elevation-z]),.mat-button-toggle-group:not([class*=mat-elevation-z]){box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}@media(forced-colors: active){.mat-button-toggle-standalone,.mat-button-toggle-group{outline:solid 1px}}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border-radius:var(--mat-button-toggle-shape, var(--mat-sys-corner-extra-large));border:solid 1px var(--mat-button-toggle-divider-color, var(--mat-sys-outline))}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard .mat-pseudo-checkbox,.mat-button-toggle-group-appearance-standard .mat-pseudo-checkbox{--mat-pseudo-checkbox-minimal-selected-checkmark-color: var(--mat-button-toggle-selected-state-text-color, var(--mat-sys-on-secondary-container))}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard:not([class*=mat-elevation-z]),.mat-button-toggle-group-appearance-standard:not([class*=mat-elevation-z]){box-shadow:none}@media(forced-colors: active){.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{outline:0}}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative;color:var(--mat-button-toggle-legacy-text-color);font-family:var(--mat-button-toggle-legacy-label-text-font);font-size:var(--mat-button-toggle-legacy-label-text-size);line-height:var(--mat-button-toggle-legacy-label-text-line-height);font-weight:var(--mat-button-toggle-legacy-label-text-weight);letter-spacing:var(--mat-button-toggle-legacy-label-text-tracking);--mat-pseudo-checkbox-minimal-selected-checkmark-color: var(--mat-button-toggle-legacy-selected-state-text-color)}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:var(--mat-button-toggle-legacy-focus-state-layer-opacity)}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle-checkbox-wrapper{display:inline-block;justify-content:flex-start;align-items:center;width:0;height:18px;line-height:18px;overflow:hidden;box-sizing:border-box;position:absolute;top:50%;left:16px;transform:translate3d(0, -50%, 0)}[dir=rtl] .mat-button-toggle-checkbox-wrapper{left:auto;right:16px}.mat-button-toggle-appearance-standard .mat-button-toggle-checkbox-wrapper{left:12px}[dir=rtl] .mat-button-toggle-appearance-standard .mat-button-toggle-checkbox-wrapper{left:auto;right:12px}.mat-button-toggle-checked .mat-button-toggle-checkbox-wrapper{width:18px}.mat-button-toggle-animations-enabled .mat-button-toggle-checkbox-wrapper{transition:width 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-button-toggle-vertical .mat-button-toggle-checkbox-wrapper{transition:none}.mat-button-toggle-checked{color:var(--mat-button-toggle-legacy-selected-state-text-color);background-color:var(--mat-button-toggle-legacy-selected-state-background-color)}.mat-button-toggle-disabled{pointer-events:none;color:var(--mat-button-toggle-legacy-disabled-state-text-color);background-color:var(--mat-button-toggle-legacy-disabled-state-background-color);--mat-pseudo-checkbox-minimal-disabled-selected-checkmark-color: var(--mat-button-toggle-legacy-disabled-state-text-color)}.mat-button-toggle-disabled.mat-button-toggle-checked{background-color:var(--mat-button-toggle-legacy-disabled-selected-state-background-color)}.mat-button-toggle-disabled-interactive{pointer-events:auto}.mat-button-toggle-appearance-standard{color:var(--mat-button-toggle-text-color, var(--mat-sys-on-surface));background-color:var(--mat-button-toggle-background-color, transparent);font-family:var(--mat-button-toggle-label-text-font, var(--mat-sys-label-large-font));font-size:var(--mat-button-toggle-label-text-size, var(--mat-sys-label-large-size));line-height:var(--mat-button-toggle-label-text-line-height, var(--mat-sys-label-large-line-height));font-weight:var(--mat-button-toggle-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-button-toggle-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-button-toggle-group-appearance-standard .mat-button-toggle-appearance-standard+.mat-button-toggle-appearance-standard{border-left:solid 1px var(--mat-button-toggle-divider-color, var(--mat-sys-outline))}[dir=rtl] .mat-button-toggle-group-appearance-standard .mat-button-toggle-appearance-standard+.mat-button-toggle-appearance-standard{border-left:none;border-right:solid 1px var(--mat-button-toggle-divider-color, var(--mat-sys-outline))}.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle-appearance-standard+.mat-button-toggle-appearance-standard{border-left:none;border-right:none;border-top:solid 1px var(--mat-button-toggle-divider-color, var(--mat-sys-outline))}.mat-button-toggle-appearance-standard.mat-button-toggle-checked{color:var(--mat-button-toggle-selected-state-text-color, var(--mat-sys-on-secondary-container));background-color:var(--mat-button-toggle-selected-state-background-color, var(--mat-sys-secondary-container))}.mat-button-toggle-appearance-standard.mat-button-toggle-disabled{color:var(--mat-button-toggle-disabled-state-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));background-color:var(--mat-button-toggle-disabled-state-background-color, transparent)}.mat-button-toggle-appearance-standard.mat-button-toggle-disabled .mat-pseudo-checkbox{--mat-pseudo-checkbox-minimal-disabled-selected-checkmark-color: var(--mat-button-toggle-disabled-selected-state-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-button-toggle-appearance-standard.mat-button-toggle-disabled.mat-button-toggle-checked{color:var(--mat-button-toggle-disabled-selected-state-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));background-color:var(--mat-button-toggle-disabled-selected-state-background-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{background-color:var(--mat-button-toggle-state-layer-color, var(--mat-sys-on-surface))}.mat-button-toggle-appearance-standard:hover .mat-button-toggle-focus-overlay{opacity:var(--mat-button-toggle-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-button-toggle-appearance-standard.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:var(--mat-button-toggle-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}@media(hover: none){.mat-button-toggle-appearance-standard:hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;user-select:none;display:inline-block;padding:0 16px;line-height:var(--mat-button-toggle-legacy-height);position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{padding:0 12px;line-height:var(--mat-button-toggle-height, 40px)}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;pointer-events:none;opacity:0;background-color:var(--mat-button-toggle-legacy-state-layer-color)}@media(forced-colors: active){.mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 500px;opacity:.5;height:0}.mat-button-toggle-checked:hover .mat-button-toggle-focus-overlay{opacity:.6}.mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 500px}}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-animations-enabled .mat-button-toggle-button{transition:padding 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-button-toggle-vertical .mat-button-toggle-button{transition:none}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}.mat-button-toggle-checked .mat-button-toggle-button:has(.mat-button-toggle-checkbox-wrapper){padding-left:30px}[dir=rtl] .mat-button-toggle-checked .mat-button-toggle-button:has(.mat-button-toggle-checkbox-wrapper){padding-left:0;padding-right:30px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard{--mat-focus-indicator-border-radius: var(--mat-button-toggle-shape, var(--mat-sys-corner-extra-large))}.mat-button-toggle-group-appearance-standard:not(.mat-button-toggle-vertical) .mat-button-toggle:last-of-type .mat-button-toggle-button::before{border-top-right-radius:var(--mat-button-toggle-shape, var(--mat-sys-corner-extra-large));border-bottom-right-radius:var(--mat-button-toggle-shape, var(--mat-sys-corner-extra-large))}.mat-button-toggle-group-appearance-standard:not(.mat-button-toggle-vertical) .mat-button-toggle:first-of-type .mat-button-toggle-button::before{border-top-left-radius:var(--mat-button-toggle-shape, var(--mat-sys-corner-extra-large));border-bottom-left-radius:var(--mat-button-toggle-shape, var(--mat-sys-corner-extra-large))}.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle:last-of-type .mat-button-toggle-button::before{border-bottom-right-radius:var(--mat-button-toggle-shape, var(--mat-sys-corner-extra-large));border-bottom-left-radius:var(--mat-button-toggle-shape, var(--mat-sys-corner-extra-large))}.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle:first-of-type .mat-button-toggle-button::before{border-top-right-radius:var(--mat-button-toggle-shape, var(--mat-sys-corner-extra-large));border-top-left-radius:var(--mat-button-toggle-shape, var(--mat-sys-corner-extra-large))}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatButtonToggle, [{\n    type: Component,\n    args: [{\n      selector: 'mat-button-toggle',\n      encapsulation: ViewEncapsulation.None,\n      exportAs: 'matButtonToggle',\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      host: {\n        '[class.mat-button-toggle-standalone]': '!buttonToggleGroup',\n        '[class.mat-button-toggle-checked]': 'checked',\n        '[class.mat-button-toggle-disabled]': 'disabled',\n        '[class.mat-button-toggle-disabled-interactive]': 'disabledInteractive',\n        '[class.mat-button-toggle-appearance-standard]': 'appearance === \"standard\"',\n        'class': 'mat-button-toggle',\n        '[attr.aria-label]': 'null',\n        '[attr.aria-labelledby]': 'null',\n        '[attr.id]': 'id',\n        '[attr.name]': 'null',\n        '(focus)': 'focus()',\n        'role': 'presentation'\n      },\n      imports: [MatRipple, MatPseudoCheckbox],\n      template: \"<button #button class=\\\"mat-button-toggle-button mat-focus-indicator\\\"\\n        type=\\\"button\\\"\\n        [id]=\\\"buttonId\\\"\\n        [attr.role]=\\\"isSingleSelector() ? 'radio' : 'button'\\\"\\n        [attr.tabindex]=\\\"disabled && !disabledInteractive ? -1 : tabIndex\\\"\\n        [attr.aria-pressed]=\\\"!isSingleSelector() ? checked : null\\\"\\n        [attr.aria-checked]=\\\"isSingleSelector() ? checked : null\\\"\\n        [disabled]=\\\"(disabled && !disabledInteractive) || null\\\"\\n        [attr.name]=\\\"_getButtonName()\\\"\\n        [attr.aria-label]=\\\"ariaLabel\\\"\\n        [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n        [attr.aria-disabled]=\\\"disabled && disabledInteractive ? 'true' : null\\\"\\n        (click)=\\\"_onButtonClick()\\\">\\n  @if (buttonToggleGroup && (\\n    !buttonToggleGroup.multiple && !buttonToggleGroup.hideSingleSelectionIndicator ||\\n    buttonToggleGroup.multiple && !buttonToggleGroup.hideMultipleSelectionIndicator)\\n  ) {\\n    <div class=\\\"mat-button-toggle-checkbox-wrapper\\\">\\n      <mat-pseudo-checkbox\\n        [disabled]=\\\"disabled\\\"\\n        state=\\\"checked\\\"\\n        aria-hidden=\\\"true\\\"\\n        appearance=\\\"minimal\\\"/>\\n    </div>\\n  }\\n\\n  <span class=\\\"mat-button-toggle-label-content\\\">\\n    <ng-content></ng-content>\\n  </span>\\n</button>\\n\\n<span class=\\\"mat-button-toggle-focus-overlay\\\"></span>\\n<span class=\\\"mat-button-toggle-ripple\\\" matRipple\\n     [matRippleTrigger]=\\\"button\\\"\\n     [matRippleDisabled]=\\\"this.disableRipple || this.disabled\\\">\\n</span>\\n\",\n      styles: [\".mat-button-toggle-standalone,.mat-button-toggle-group{position:relative;display:inline-flex;flex-direction:row;white-space:nowrap;overflow:hidden;-webkit-tap-highlight-color:rgba(0,0,0,0);border-radius:var(--mat-button-toggle-legacy-shape);transform:translateZ(0)}.mat-button-toggle-standalone:not([class*=mat-elevation-z]),.mat-button-toggle-group:not([class*=mat-elevation-z]){box-shadow:0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12)}@media(forced-colors: active){.mat-button-toggle-standalone,.mat-button-toggle-group{outline:solid 1px}}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{border-radius:var(--mat-button-toggle-shape, var(--mat-sys-corner-extra-large));border:solid 1px var(--mat-button-toggle-divider-color, var(--mat-sys-outline))}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard .mat-pseudo-checkbox,.mat-button-toggle-group-appearance-standard .mat-pseudo-checkbox{--mat-pseudo-checkbox-minimal-selected-checkmark-color: var(--mat-button-toggle-selected-state-text-color, var(--mat-sys-on-secondary-container))}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard:not([class*=mat-elevation-z]),.mat-button-toggle-group-appearance-standard:not([class*=mat-elevation-z]){box-shadow:none}@media(forced-colors: active){.mat-button-toggle-standalone.mat-button-toggle-appearance-standard,.mat-button-toggle-group-appearance-standard{outline:0}}.mat-button-toggle-vertical{flex-direction:column}.mat-button-toggle-vertical .mat-button-toggle-label-content{display:block}.mat-button-toggle{white-space:nowrap;position:relative;color:var(--mat-button-toggle-legacy-text-color);font-family:var(--mat-button-toggle-legacy-label-text-font);font-size:var(--mat-button-toggle-legacy-label-text-size);line-height:var(--mat-button-toggle-legacy-label-text-line-height);font-weight:var(--mat-button-toggle-legacy-label-text-weight);letter-spacing:var(--mat-button-toggle-legacy-label-text-tracking);--mat-pseudo-checkbox-minimal-selected-checkmark-color: var(--mat-button-toggle-legacy-selected-state-text-color)}.mat-button-toggle.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:var(--mat-button-toggle-legacy-focus-state-layer-opacity)}.mat-button-toggle .mat-icon svg{vertical-align:top}.mat-button-toggle-checkbox-wrapper{display:inline-block;justify-content:flex-start;align-items:center;width:0;height:18px;line-height:18px;overflow:hidden;box-sizing:border-box;position:absolute;top:50%;left:16px;transform:translate3d(0, -50%, 0)}[dir=rtl] .mat-button-toggle-checkbox-wrapper{left:auto;right:16px}.mat-button-toggle-appearance-standard .mat-button-toggle-checkbox-wrapper{left:12px}[dir=rtl] .mat-button-toggle-appearance-standard .mat-button-toggle-checkbox-wrapper{left:auto;right:12px}.mat-button-toggle-checked .mat-button-toggle-checkbox-wrapper{width:18px}.mat-button-toggle-animations-enabled .mat-button-toggle-checkbox-wrapper{transition:width 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-button-toggle-vertical .mat-button-toggle-checkbox-wrapper{transition:none}.mat-button-toggle-checked{color:var(--mat-button-toggle-legacy-selected-state-text-color);background-color:var(--mat-button-toggle-legacy-selected-state-background-color)}.mat-button-toggle-disabled{pointer-events:none;color:var(--mat-button-toggle-legacy-disabled-state-text-color);background-color:var(--mat-button-toggle-legacy-disabled-state-background-color);--mat-pseudo-checkbox-minimal-disabled-selected-checkmark-color: var(--mat-button-toggle-legacy-disabled-state-text-color)}.mat-button-toggle-disabled.mat-button-toggle-checked{background-color:var(--mat-button-toggle-legacy-disabled-selected-state-background-color)}.mat-button-toggle-disabled-interactive{pointer-events:auto}.mat-button-toggle-appearance-standard{color:var(--mat-button-toggle-text-color, var(--mat-sys-on-surface));background-color:var(--mat-button-toggle-background-color, transparent);font-family:var(--mat-button-toggle-label-text-font, var(--mat-sys-label-large-font));font-size:var(--mat-button-toggle-label-text-size, var(--mat-sys-label-large-size));line-height:var(--mat-button-toggle-label-text-line-height, var(--mat-sys-label-large-line-height));font-weight:var(--mat-button-toggle-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-button-toggle-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-button-toggle-group-appearance-standard .mat-button-toggle-appearance-standard+.mat-button-toggle-appearance-standard{border-left:solid 1px var(--mat-button-toggle-divider-color, var(--mat-sys-outline))}[dir=rtl] .mat-button-toggle-group-appearance-standard .mat-button-toggle-appearance-standard+.mat-button-toggle-appearance-standard{border-left:none;border-right:solid 1px var(--mat-button-toggle-divider-color, var(--mat-sys-outline))}.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle-appearance-standard+.mat-button-toggle-appearance-standard{border-left:none;border-right:none;border-top:solid 1px var(--mat-button-toggle-divider-color, var(--mat-sys-outline))}.mat-button-toggle-appearance-standard.mat-button-toggle-checked{color:var(--mat-button-toggle-selected-state-text-color, var(--mat-sys-on-secondary-container));background-color:var(--mat-button-toggle-selected-state-background-color, var(--mat-sys-secondary-container))}.mat-button-toggle-appearance-standard.mat-button-toggle-disabled{color:var(--mat-button-toggle-disabled-state-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));background-color:var(--mat-button-toggle-disabled-state-background-color, transparent)}.mat-button-toggle-appearance-standard.mat-button-toggle-disabled .mat-pseudo-checkbox{--mat-pseudo-checkbox-minimal-disabled-selected-checkmark-color: var(--mat-button-toggle-disabled-selected-state-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mat-button-toggle-appearance-standard.mat-button-toggle-disabled.mat-button-toggle-checked{color:var(--mat-button-toggle-disabled-selected-state-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent));background-color:var(--mat-button-toggle-disabled-selected-state-background-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{background-color:var(--mat-button-toggle-state-layer-color, var(--mat-sys-on-surface))}.mat-button-toggle-appearance-standard:hover .mat-button-toggle-focus-overlay{opacity:var(--mat-button-toggle-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-button-toggle-appearance-standard.cdk-keyboard-focused .mat-button-toggle-focus-overlay{opacity:var(--mat-button-toggle-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}@media(hover: none){.mat-button-toggle-appearance-standard:hover .mat-button-toggle-focus-overlay{display:none}}.mat-button-toggle-label-content{-webkit-user-select:none;user-select:none;display:inline-block;padding:0 16px;line-height:var(--mat-button-toggle-legacy-height);position:relative}.mat-button-toggle-appearance-standard .mat-button-toggle-label-content{padding:0 12px;line-height:var(--mat-button-toggle-height, 40px)}.mat-button-toggle-label-content>*{vertical-align:middle}.mat-button-toggle-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:inherit;pointer-events:none;opacity:0;background-color:var(--mat-button-toggle-legacy-state-layer-color)}@media(forced-colors: active){.mat-button-toggle-checked .mat-button-toggle-focus-overlay{border-bottom:solid 500px;opacity:.5;height:0}.mat-button-toggle-checked:hover .mat-button-toggle-focus-overlay{opacity:.6}.mat-button-toggle-checked.mat-button-toggle-appearance-standard .mat-button-toggle-focus-overlay{border-bottom:solid 500px}}.mat-button-toggle .mat-button-toggle-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-button-toggle-button{border:0;background:none;color:inherit;padding:0;margin:0;font:inherit;outline:none;width:100%;cursor:pointer}.mat-button-toggle-animations-enabled .mat-button-toggle-button{transition:padding 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-button-toggle-vertical .mat-button-toggle-button{transition:none}.mat-button-toggle-disabled .mat-button-toggle-button{cursor:default}.mat-button-toggle-button::-moz-focus-inner{border:0}.mat-button-toggle-checked .mat-button-toggle-button:has(.mat-button-toggle-checkbox-wrapper){padding-left:30px}[dir=rtl] .mat-button-toggle-checked .mat-button-toggle-button:has(.mat-button-toggle-checkbox-wrapper){padding-left:0;padding-right:30px}.mat-button-toggle-standalone.mat-button-toggle-appearance-standard{--mat-focus-indicator-border-radius: var(--mat-button-toggle-shape, var(--mat-sys-corner-extra-large))}.mat-button-toggle-group-appearance-standard:not(.mat-button-toggle-vertical) .mat-button-toggle:last-of-type .mat-button-toggle-button::before{border-top-right-radius:var(--mat-button-toggle-shape, var(--mat-sys-corner-extra-large));border-bottom-right-radius:var(--mat-button-toggle-shape, var(--mat-sys-corner-extra-large))}.mat-button-toggle-group-appearance-standard:not(.mat-button-toggle-vertical) .mat-button-toggle:first-of-type .mat-button-toggle-button::before{border-top-left-radius:var(--mat-button-toggle-shape, var(--mat-sys-corner-extra-large));border-bottom-left-radius:var(--mat-button-toggle-shape, var(--mat-sys-corner-extra-large))}.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle:last-of-type .mat-button-toggle-button::before{border-bottom-right-radius:var(--mat-button-toggle-shape, var(--mat-sys-corner-extra-large));border-bottom-left-radius:var(--mat-button-toggle-shape, var(--mat-sys-corner-extra-large))}.mat-button-toggle-group-appearance-standard.mat-button-toggle-vertical .mat-button-toggle:first-of-type .mat-button-toggle-button::before{border-top-right-radius:var(--mat-button-toggle-shape, var(--mat-sys-corner-extra-large));border-top-left-radius:var(--mat-button-toggle-shape, var(--mat-sys-corner-extra-large))}\\n\"]\n    }]\n  }], () => [], {\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaLabelledby: [{\n      type: Input,\n      args: ['aria-labelledby']\n    }],\n    _buttonElement: [{\n      type: ViewChild,\n      args: ['button']\n    }],\n    id: [{\n      type: Input\n    }],\n    name: [{\n      type: Input\n    }],\n    value: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    appearance: [{\n      type: Input\n    }],\n    checked: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disabledInteractive: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    change: [{\n      type: Output\n    }]\n  });\n})();\nclass MatButtonToggleModule {\n  static ɵfac = function MatButtonToggleModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatButtonToggleModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatButtonToggleModule,\n    imports: [MatCommonModule, MatRippleModule, MatButtonToggleGroup, MatButtonToggle],\n    exports: [MatCommonModule, MatButtonToggleGroup, MatButtonToggle]\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [MatCommonModule, MatRippleModule, MatButtonToggle, MatCommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatButtonToggleModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, MatRippleModule, MatButtonToggleGroup, MatButtonToggle],\n      exports: [MatCommonModule, MatButtonToggleGroup, MatButtonToggle]\n    }]\n  }], null, null);\n})();\nexport { MAT_BUTTON_TOGGLE_DEFAULT_OPTIONS, MAT_BUTTON_TOGGLE_GROUP, MAT_BUTTON_TOGGLE_GROUP_DEFAULT_OPTIONS_FACTORY, MAT_BUTTON_TOGGLE_GROUP_VALUE_ACCESSOR, MatButtonToggle, MatButtonToggleChange, MatButtonToggleGroup, MatButtonToggleModule };\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {ChangeDetectionStrategy, Component, HostListener, inject, signal} from '@angular/core';\nimport {Step, RECOMMENDATIONS} from './recommendations';\nimport {Clipboard} from '@angular/cdk/clipboard';\nimport {CdkMenuModule} from '@angular/cdk/menu';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {IconComponent} from '@angular/docs';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {marked} from 'marked';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\ninterface Option {\n  id: keyof Step;\n  name: string;\n  description: string;\n}\n\n@Component({\n  selector: 'adev-update-guide',\n  templateUrl: './update.component.html',\n  styleUrl: './update.component.scss',\n  imports: [\n    MatCheckboxModule,\n    MatInputModule,\n    MatCardModule,\n    MatGridListModule,\n    MatButtonToggleModule,\n    CdkMenuModule,\n    IconComponent,\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport default class UpdateComponent {\n  private readonly snackBar = inject(MatSnackBar);\n\n  protected title = signal('');\n\n  protected level = 1;\n  protected options: Record<string, boolean> = {\n    ngUpgrade: false,\n    material: false,\n    windows: isWindows(),\n  };\n\n  protected readonly optionList: Option[] = [\n    {id: 'ngUpgrade', name: 'ngUpgrade', description: '合并 AngularJS 与 Angular'},\n    {id: 'material', name: 'Angular Material', description: ''},\n    {id: 'windows', name: 'Windows', description: ''},\n  ];\n\n  protected packageManager: 'npm install' | 'yarn add' = 'npm install';\n\n  protected beforeRecommendations: Step[] = [];\n  protected duringRecommendations: Step[] = [];\n  protected afterRecommendations: Step[] = [];\n\n  protected readonly versions = [\n    {name: '20.0', number: 2000},\n    {name: '19.0', number: 1900},\n    {name: '18.0', number: 1800},\n    {name: '17.0', number: 1700},\n    {name: '16.0', number: 1600},\n    {name: '15.0', number: 1500},\n    {name: '14.0', number: 1400},\n    {name: '13.0', number: 1300},\n    {name: '12.0', number: 1200},\n    {name: '11.0', number: 1100},\n    {name: '10.2', number: 1020},\n    {name: '10.1', number: 1010},\n    {name: '10.0', number: 1000},\n    {name: '9.1', number: 910},\n    {name: '9.0', number: 900},\n    {name: '8.2', number: 820},\n    {name: '8.1', number: 810},\n    {name: '8.0', number: 800},\n    {name: '7.2', number: 720},\n    {name: '7.1', number: 710},\n    {name: '7.0', number: 700},\n    {name: '6.1', number: 610},\n    {name: '6.0', number: 600},\n    {name: '5.2', number: 520},\n    {name: '5.1', number: 510},\n    {name: '5.0', number: 500},\n    {name: '4.4', number: 440},\n    {name: '4.3', number: 430},\n    {name: '4.2', number: 420},\n    {name: '4.1', number: 410},\n    {name: '4.0', number: 400},\n    {name: '2.4', number: 204},\n    {name: '2.3', number: 203},\n    {name: '2.2', number: 202},\n    {name: '2.1', number: 201},\n    {name: '2.0', number: 200},\n  ];\n  protected from = this.versions.find((version) => version.name === '19.0')!;\n  protected to = this.versions.find((version) => version.name === '20.0')!;\n  protected futureVersion = 2100;\n\n  protected readonly steps: Step[] = RECOMMENDATIONS;\n\n  private readonly clipboard = inject(Clipboard);\n  private readonly router = inject(Router);\n  private readonly activatedRoute = inject(ActivatedRoute);\n\n  constructor() {\n    const queryMap = this.activatedRoute.snapshot.queryParamMap;\n    // Detect settings in URL\n    this.level = parseInt(queryMap.get('l')!, 10) || this.level;\n\n    // Detect versions of from and to\n    const versions = queryMap.get('v');\n    if (versions) {\n      const [from, to] = versions.split('-');\n      this.from = this.versions.find((version) => version.name === from)!;\n      this.to = this.versions.find((version) => version.name === to)!;\n      this.showUpdatePath();\n    }\n  }\n\n  @HostListener('click', ['$event.target'])\n  copyCode({tagName, textContent}: Element) {\n    if (tagName === 'CODE') {\n      this.clipboard.copy(textContent!);\n      this.snackBar.open('Copied to clipboard', '', {duration: 2000});\n    }\n  }\n\n  async showUpdatePath() {\n    this.beforeRecommendations = [];\n    this.duringRecommendations = [];\n    this.afterRecommendations = [];\n\n    // Refuse to generate recommendations for downgrades\n    if (this.to.number < this.from.number) {\n      alert('我们不支持降级 Angular 版本。');\n      return;\n    }\n\n    const labelTitle = 'Angular 应用程序更新指南';\n    const labelBasic = '基础应用';\n    const labelMedium = '中等应用';\n    const labelAdvanced = '高级应用';\n\n    this.title.set(`${labelTitle} v${this.from.name} -> v${this.to.name}\n    for\n    ${this.level < 2 ? labelBasic : this.level < 3 ? labelMedium : labelAdvanced}`);\n\n    // Find applicable steps and organize them into before, during, and after upgrade\n    for (const step of this.steps) {\n      if (step.level <= this.level && step.necessaryAsOf > this.from.number) {\n        // Check Options\n        // Only show steps that don't have a required option\n        // Or when the user has a matching option selected\n        let skip = false;\n        for (const option of this.optionList) {\n          // Skip steps which require an option not set by the user.\n          if (step[option.id] && !this.options[option.id]) {\n            skip = true;\n          }\n\n          // Skip steps which require **not** using an option which **is** set\n          // by the user.\n          if (step[option.id] === false && this.options[option.id]) {\n            skip = true;\n          }\n        }\n        if (skip) {\n          continue;\n        }\n\n        // Render and replace variables\n        step.renderedStep = await marked(this.replaceVariables(step.action));\n\n        // If you could do it before now, but didn't have to finish it before now\n        if (step.possibleIn <= this.from.number && step.necessaryAsOf >= this.from.number) {\n          this.beforeRecommendations.push(step);\n          // If you couldn't do it before now, and you must do it now\n        } else if (step.possibleIn > this.from.number && step.necessaryAsOf <= this.to.number) {\n          this.duringRecommendations.push(step);\n        } else if (step.possibleIn <= this.to.number) {\n          this.afterRecommendations.push(step);\n        }\n      }\n    }\n\n    // Update the URL so users can link to this transition\n    this.router.navigate([], {\n      relativeTo: this.activatedRoute,\n      queryParams: {v: `${this.from.name}-${this.to.name}`, l: this.level},\n      queryParamsHandling: 'merge',\n    });\n\n    // Tell everyone how to upgrade for v6 or earlier\n    this.renderPreV6Instructions();\n  }\n\n  private getAdditionalDependencies(version: number): string {\n    if (version < 500) {\n      return `typescript@'>=2.1.0 <2.4.0'`;\n    } else if (version < 600) {\n      return `typescript@2.4.2 rxjs@^5.5.2`;\n    } else {\n      return `typescript@2.7.x rxjs@^6.0.0`;\n    }\n  }\n\n  private getAngularVersion(version: number): string {\n    if (version < 400) {\n      return `'^2.0.0'`;\n    } else {\n      const major = Math.floor(version / 100);\n      const minor = Math.floor((version - major * 100) / 10);\n      return `^${major}.${minor}.0`;\n    }\n  }\n\n  private async renderPreV6Instructions(): Promise<void> {\n    let upgradeStep: Step;\n    const additionalDeps = this.getAdditionalDependencies(this.to.number);\n    const angularVersion = this.getAngularVersion(this.to.number);\n    const angularPackages = [\n      'animations',\n      'common',\n      'compiler',\n      'compiler-cli',\n      'core',\n      'forms',\n      'http',\n      'platform-browser',\n      'platform-browser-dynamic',\n      'platform-server',\n      'router',\n    ];\n\n    // Provide npm/yarn instructions for versions before 6\n    if (this.to.number < 600) {\n      const actionMessage = `将所有依赖项更新到最新的 Angular 和正确版本的 TypeScript。`;\n\n      if (isWindows()) {\n        const packages =\n          angularPackages\n            .map((packageName) => `@angular/${packageName}@${angularVersion}`)\n            .join(' ') +\n          ' ' +\n          additionalDeps;\n\n        upgradeStep = {\n          step: '一般更新',\n          action: `${actionMessage}\n          如果你正在使用 Windows，则可以用：\n\n\\`${this.packageManager} ${packages}\\``,\n        } as Step;\n      } else {\n        const packages = `@angular/{${angularPackages.join(',')}}@${angularVersion} ${additionalDeps}`;\n        upgradeStep = {\n          step: '一般更新',\n          action: `${actionMessage}\n          如果你正在使用 Linux/Mac，则可以用：\n\n\\`${this.packageManager} ${packages}\\``,\n        } as Step;\n      }\n\n      // Npm installs typescript wrong in v5, let's manually specify\n      // https://github.com/npm/npm/issues/16813\n      if (this.packageManager === 'npm install' && this.to.number === 500) {\n        upgradeStep.action += `\n\n\\`npm install typescript@2.4.2 --save-exact\\``;\n      }\n\n      upgradeStep.renderedStep = await marked(upgradeStep.action);\n\n      this.duringRecommendations.push(upgradeStep);\n    }\n  }\n\n  private replaceVariables(action: string): string {\n    let newAction = action;\n    newAction = newAction.replace(\n      '${packageManagerGlobalInstall}',\n      this.packageManager === 'npm install' ? 'npm install -g' : 'yarn global add',\n    );\n    newAction = newAction.replace('${packageManagerInstall}', this.packageManager);\n    return newAction;\n  }\n}\n\n/** Whether or not the user is running on a Windows OS. */\nfunction isWindows(): boolean {\n  if (typeof navigator === 'undefined') {\n    return false;\n  }\n\n  const platform = navigator.platform.toLowerCase();\n  return platform.includes('windows') || platform.includes('win32');\n}\n","<div class=\"page docs-viewer\">\n  <h1 class=\"page-header\" tabindex=\"-1\">更新指南</h1>\n  <div class=\"wizard\">\n    <div>\n      <h2>选择与你的更新相匹配的选项</h2>\n\n      <h3>Angular 版本</h3>\n\n      <div class=\"adev-version-selector\">\n        <span class=\"adev-template-select\">\n          从 v.\n\n          <button [cdkMenuTriggerFor]=\"templatesMenuFrom\">\n            <span>{{ from.name }}</span>\n            <docs-icon>expand_more</docs-icon>\n          </button>\n\n          <ng-template #templatesMenuFrom>\n            <ul class=\"adev-template-dropdown\" cdkMenu>\n              @for (version of versions; track $index) {\n                <li>\n                  <button cdkMenuItem type=\"button\" (click)=\"from=version; showUpdatePath()\">\n                    <span>{{ version.name }}</span>\n                  </button>\n                </li>\n              }\n            </ul>\n          </ng-template>\n        </span>\n\n        <span>\n          <span class=\"adev-template-select\">\n            到 v.\n            <button [cdkMenuTriggerFor]=\"templatesMenuTo\">\n              <span>{{ to.name }}</span>\n              <docs-icon>expand_more</docs-icon>\n            </button>\n\n            <ng-template #templatesMenuTo>\n              <ul class=\"adev-template-dropdown\" cdkMenu>\n                @for (version of versions; track $index) {\n                  <li>\n                    <button cdkMenuItem type=\"button\" (click)=\"to=version; showUpdatePath()\">\n                      <span>{{ version.name }}</span>\n                    </button>\n                  </li>\n                }\n              </ul>\n            </ng-template>\n          </span>\n        </span>\n      </div>\n\n      @if (from.number >= futureVersion || to.number >= futureVersion) {\n        <div class=\"docs-alert docs-alert-critical\">\n          <p>\n            <strong>警告：</strong>\n            当前主要版本之后的发布计划尚未最终确定，可能会有变化。这些建议是基于计划中的弃用情况。\n          </p>\n        </div>\n      }\n\n      @if (from.number > to.number) {\n        <div class=\"docs-alert docs-alert-critical\">\n          <p>\n            <strong>警告：</strong>\n            我们不支持降级 Angular 版本。\n          </p>\n        </div>\n      }\n\n      @if ((to.number - from.number > 150) && from.number > 240) {\n        <div class=\"docs-alert docs-alert-critical\">\n          <p>\n            <strong>警告：</strong>\n            确保按照以下指南把你的应用程序迁移到新版本。你每次运行 <code>ng update</code> 时不应该跳过任何主要版本来更新 Angular 应用程序。\n          </p>\n        </div>\n      }\n\n      <h3>应用程序复杂性</h3>\n      <mat-button-toggle-group\n        (change)=\"level = $event.value; showUpdatePath()\"\n        [value]=\"level\"\n        style=\"margin-bottom:16px;\"\n      >\n        <mat-button-toggle [value]=\"1\">基础</mat-button-toggle>\n        <mat-button-toggle [value]=\"2\">中等</mat-button-toggle>\n        <mat-button-toggle [value]=\"3\">高级</mat-button-toggle>\n      </mat-button-toggle-group>\n      @if (level === 1) {\n        <p>展示所有 Angular 开发者都感兴趣的信息。</p>\n      } @else if (level === 2) {\n        <p>展示更高级 Angular 开发者会感兴趣的信息。</p>\n      } @else if (level === 3) {\n        <p>展示关于这个更新的所有信息。</p>\n      }\n\n      <h3>Other dependencies</h3>\n      @for (option of optionList; track $index) {\n        <div>\n          <mat-checkbox\n            (change)=\"options[option.id] = $event.checked; showUpdatePath()\"\n            [checked]=\"options[option.id]\"\n            >I use {{option.name}} {{option.description}}</mat-checkbox\n          >\n        </div>\n      }\n\n      @if (from.number < 600) {\n        <h4>包管理器</h4>\n        <mat-button-toggle-group\n          (change)=\"packageManager = $event.value; showUpdatePath()\"\n          [value]=\"packageManager\"\n        >\n          <mat-button-toggle value=\"npm install\">npm</mat-button-toggle>\n          <mat-button-toggle value=\"yarn add\">yarn</mat-button-toggle>\n        </mat-button-toggle-group>\n      }\n\n      <button\n        type=\"button\"\n        (click)=\"showUpdatePath()\"\n        class=\"docs-primary-btn show-button\"\n        [attr.text]=\"'告诉我如何更新！'\"\n      >\n        告诉我如何更新\n      </button>\n    </div>\n  </div>\n\n  <hr />\n  <!-- RECOMMENDATIONS SECTION -->\n\n  @if (\n    beforeRecommendations.length > 0 || duringRecommendations.length > 0 || afterRecommendations.length > 0\n  ) {\n    <div class=\"recommendations\">\n      <h2>{{title()}}</h2>\n\n      <h3>在更新之前</h3>\n      @for (r  of beforeRecommendations; track $index) {\n        <div class=\"adev-recommendation-item\">\n          <mat-checkbox />\n          <div [innerHTML]=\"r.renderedStep\"></div>\n        </div>\n      }\n      @if (beforeRecommendations.length <= 0) {\n        <div>\n          <em>在这些版本之间切换之前，你无需进行任何操作。</em>\n        </div>\n      }\n\n      <h3>更新到新版本</h3>\n      @if (duringRecommendations.length > 0) {\n        <div>\n          <em>请审核这些更改并执行这些操作来更新应用程序。</em>\n        </div>\n      }\n\n      @for (r of duringRecommendations; track $index) {\n        <div class=\"adev-recommendation-item\">\n          <mat-checkbox />\n          <div [innerHTML]=\"r.renderedStep\"></div>\n        </div>\n      }\n      @if (duringRecommendations.length <= 0) {\n        <div>\n          <em>对这些版本之间的移动，没有任何建议。</em>\n        </div>\n      }\n\n      <h3>更新之后</h3>\n      @for (r of afterRecommendations; track $index) {\n        <div class=\"adev-recommendation-item\">\n          <mat-checkbox />\n          <div [innerHTML]=\"r.renderedStep\"></div>\n        </div>\n      }\n      @if (afterRecommendations.length <= 0) {\n        <div>\n          <em>在切换这些版本之后，你无需进行任何操作。</em>\n        </div>\n      }\n    </div>\n  }\n</div>\n"],"mappings":"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","names":["ApplicationComplexity","_c0","_c1","TransitionCheckState","_c0","_c1","_c2","_c0","_c1","_c2","_c3","_c0","_c1"],"x_google_ignoreList":[1,2,3,4,5,6,7,8,9,10,11,12,13]}