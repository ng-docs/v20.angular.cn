{
  "version": 3,
  "sources": ["src/content/examples/animations/src/app/animations-package/open-close.component.ts", "src/content/examples/animations/src/app/animations-package/open-close.component.html"],
  "sourcesContent": ["import {Component, signal} from '@angular/core';\nimport {trigger, transition, state, animate, style, keyframes} from '@angular/animations';\n\n@Component({\n  selector: 'app-open-close',\n  animations: [\n    trigger('openClose', [\n      state(\n        'open',\n        style({\n          height: '200px',\n          opacity: 1,\n          backgroundColor: 'yellow',\n        }),\n      ),\n      state(\n        'closed',\n        style({\n          height: '100px',\n          opacity: 0.5,\n          backgroundColor: 'green',\n        }),\n      ),\n      // ...\n      transition('* => *', [\n        animate(\n          '1s',\n          keyframes([\n            style({opacity: 0.1, offset: 0.1}),\n            style({opacity: 0.6, offset: 0.2}),\n            style({opacity: 1, offset: 0.5}),\n            style({opacity: 0.2, offset: 0.7}),\n          ]),\n        ),\n      ]),\n    ]),\n  ],\n  templateUrl: 'open-close.component.html',\n  styleUrl: 'open-close.component.css',\n})\nexport class OpenCloseComponent {\n  isOpen = signal(false);\n\n  toggle() {\n    this.isOpen.update((isOpen) => !isOpen);\n  }\n}\n", "<!-- #docplaster -->\n<nav>\n  <button type=\"button\" (click)=\"toggle()\">Toggle Open/Close</button>\n</nav>\n\n<div [@openClose]=\"isOpen() ? 'open' : 'closed'\" class=\"open-close-container\">\n  <p>The box is now {{ isOpen() ? 'Open' : 'Closed' }}!</p>\n</div>\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAwCM,IAAO,sBAAP,MAAO,oBAAkB;EAC7B,SAAS,OAAO,OAAK,GAAA,YAAA,CAAA,EAAA,WAAA,SAAA,CAAA,IAAA,CAAA,CAAA;EAErB,SAAM;AACJ,SAAK,OAAO,OAAO,CAAC,WAAW,CAAC,MAAM;EACxC;;AAL6B;cAAlB;mCAAA,qBAAkB;AAAA;cAAlB,sFAAA,qBAAkB,WAAA,CAAA,CAAA,gBAAA,CAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,QAAA,UAAA,GAAA,OAAA,GAAA,CAAA,GAAA,sBAAA,CAAA,GAAA,UAAA,gCAAA,4BAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;ACvC/B,IAAA,4BAAA,GAAA,KAAA,EAAK,GAAA,UAAA,CAAA;AACmB,IAAA,wBAAA,SAAA,gCAAA,sDAAA;AAAA,aAAS,IAAA,OAAA;IAAQ,GAAjB,sDAAiB;AAAE,IAAA,iBAAA,GAAA,mBAAA;AAAiB,IAAA,0BAAA,EAAS;AAGrE,IAAA,4BAAA,GAAA,OAAA,CAAA,EAA8E,GAAA,GAAA;AACzE,IAAA,iBAAA,CAAA;AAAkD,IAAA,0BAAA,EAAI;;;AADtD,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,cAAA,IAAA,OAAA,IAAA,SAAA,QAAA;AACA,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,mBAAA,IAAA,OAAA,IAAA,SAAA,UAAA,GAAA;;GDkC0B,sXAnCjB;EACV,QAAQ,aAAa;IACnB,MACE,QACA,MAAM;MACJ,QAAQ;MACR,SAAS;MACT,iBAAiB;KAClB,CAAC;IAEJ,MACE,UACA,MAAM;MACJ,QAAQ;MACR,SAAS;MACT,iBAAiB;KAClB,CAAC;;IAGJ,WAAW,UAAU;MACnB,QACE,MACA,UAAU;QACR,MAAM,EAAC,SAAS,KAAK,QAAQ,IAAG,CAAC;QACjC,MAAM,EAAC,SAAS,KAAK,QAAQ,IAAG,CAAC;QACjC,MAAM,EAAC,SAAS,GAAG,QAAQ,IAAG,CAAC;QAC/B,MAAM,EAAC,SAAS,KAAK,QAAQ,IAAG,CAAC;OAClC,CAAC;KAEL;GACF;EACF,EAAA,CAAA;AAIG,IAAO,qBAAP;;sEAAO,oBAAkB,CAAA;UArC9B;uBACW,kBAAgB,YACd;MACV,QAAQ,aAAa;QACnB,MACE,QACA,MAAM;UACJ,QAAQ;UACR,SAAS;UACT,iBAAiB;SAClB,CAAC;QAEJ,MACE,UACA,MAAM;UACJ,QAAQ;UACR,SAAS;UACT,iBAAiB;SAClB,CAAC;;QAGJ,WAAW,UAAU;UACnB,QACE,MACA,UAAU;YACR,MAAM,EAAC,SAAS,KAAK,QAAQ,IAAG,CAAC;YACjC,MAAM,EAAC,SAAS,KAAK,QAAQ,IAAG,CAAC;YACjC,MAAM,EAAC,SAAS,GAAG,QAAQ,IAAG,CAAC;YAC/B,MAAM,EAAC,SAAS,KAAK,QAAQ,IAAG,CAAC;WAClC,CAAC;SAEL;OACF;OACF,UAAA;;;;;;;;GAAA,QAAA,CAAA,kXAAA,EAAA,CAAA;;;;6EAIU,oBAAkB,EAAA,WAAA,sBAAA,UAAA,sFAAA,YAAA,GAAA,CAAA;AAAA,GAAA;",
  "names": []
}
