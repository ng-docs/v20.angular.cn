{
  "version": 3,
  "sources": ["src/content/examples/drag-drop/src/disable-sorting/app/app.component.ts", "src/content/examples/drag-drop/src/disable-sorting/app/app.component.html"],
  "sourcesContent": ["import {\n  CdkDrag,\n  CdkDragDrop,\n  CdkDropList,\n  CdkDropListGroup,\n  moveItemInArray,\n  transferArrayItem,\n} from '@angular/cdk/drag-drop';\nimport {Component} from '@angular/core';\n\n/**\n * @title Drag&Drop disabled sorting\n */\n@Component({\n  selector: 'cdk-drag-drop-disabled-sorting-example',\n  templateUrl: 'app.component.html',\n  styleUrl: 'app.component.css',\n  standalone: true,\n  imports: [CdkDropListGroup, CdkDropList, CdkDrag],\n})\nexport class CdkDragDropDisabledSortingExample {\n  items = ['Carrots', 'Tomatoes', 'Onions', 'Apples', 'Avocados'];\n\n  basket = ['Oranges', 'Bananas', 'Cucumbers'];\n\n  drop(event: CdkDragDrop<string[]>) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(\n        event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex,\n      );\n    }\n  }\n}\n", "<div cdkDropListGroup>\n  <div class=\"example-container\">\n    <h2>Available items</h2>\n\n    <div\n      cdkDropList\n      [cdkDropListData]=\"items\"\n      class=\"example-list\"\n      cdkDropListSortingDisabled\n      (cdkDropListDropped)=\"drop($event)\">\n      @for (item of items; track item) {\n        <div class=\"example-box\" cdkDrag>{{item}}</div>\n      }\n    </div>\n  </div>\n\n  <div class=\"example-container\">\n    <h2>Shopping basket</h2>\n\n    <div\n      cdkDropList\n      [cdkDropListData]=\"basket\"\n      class=\"example-list\"\n      (cdkDropListDropped)=\"drop($event)\">\n      @for (item of basket; track item) {\n        <div class=\"example-box\" cdkDrag>{{item}}</div>\n      }\n    </div>\n  </div>\n</div>\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACWQ,IAAA,yBAAA,GAAA,OAAA,CAAA;AAAiC,IAAA,iBAAA,CAAA;AAAQ,IAAA,uBAAA;;;;AAAR,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA;;;;;;AAcjC,IAAA,yBAAA,GAAA,OAAA,CAAA;AAAiC,IAAA,iBAAA,CAAA;AAAQ,IAAA,uBAAA;;;;AAAR,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA;;;;ADLnC,IAAO,qCAAP,MAAO,mCAAiC;EAC5C,QAAQ,CAAC,WAAW,YAAY,UAAU,UAAU,UAAU;EAE9D,SAAS,CAAC,WAAW,WAAW,WAAW;EAE3C,KAAK,OAA4B;AAC/B,QAAI,MAAM,sBAAsB,MAAM,WAAW;AAC/C,sBAAgB,MAAM,UAAU,MAAM,MAAM,eAAe,MAAM,YAAY;IAC/E,OAAO;AACL,wBACE,MAAM,kBAAkB,MACxB,MAAM,UAAU,MAChB,MAAM,eACN,MAAM,YAAY;IAEtB;EACF;;AAhB4C;cAAjC;mCAAA,oCAAiC;AAAA;cAAjC,qGAAA,oCAAiC,WAAA,CAAA,CAAA,wCAAA,CAAA,GAAA,OAAA,IAAA,MAAA,GAAA,QAAA,CAAA,CAAA,oBAAA,EAAA,GAAA,CAAA,GAAA,mBAAA,GAAA,CAAA,eAAA,IAAA,8BAAA,IAAA,GAAA,gBAAA,GAAA,sBAAA,iBAAA,GAAA,CAAA,WAAA,IAAA,GAAA,aAAA,GAAA,CAAA,eAAA,IAAA,GAAA,gBAAA,GAAA,sBAAA,iBAAA,CAAA,GAAA,UAAA,gCAAA,2CAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;ACpB9C,IAAA,yBAAA,GAAA,OAAA,CAAA,EAAsB,GAAA,OAAA,CAAA,EACW,GAAA,IAAA;AACzB,IAAA,iBAAA,GAAA,iBAAA;AAAe,IAAA,uBAAA;AAEnB,IAAA,yBAAA,GAAA,OAAA,CAAA;AAKE,IAAA,qBAAA,sBAAA,gCAAA,6EAAA,QAAA;AAAA,aAAsB,IAAA,KAAA,MAAA;IAAY,GAAlC,+EAAkC;AAClC,IAAA,2BAAA,GAAA,kDAAA,GAAA,GAAA,OAAA,GAAA,mCAAA;AAGF,IAAA,uBAAA,EAAM;AAGR,IAAA,yBAAA,GAAA,OAAA,CAAA,EAA+B,GAAA,IAAA;AACzB,IAAA,iBAAA,GAAA,iBAAA;AAAe,IAAA,uBAAA;AAEnB,IAAA,yBAAA,IAAA,OAAA,CAAA;AAIE,IAAA,qBAAA,sBAAA,gCAAA,8EAAA,QAAA;AAAA,aAAsB,IAAA,KAAA,MAAA;IAAY,GAAlC,gFAAkC;AAClC,IAAA,2BAAA,IAAA,mDAAA,GAAA,GAAA,OAAA,GAAA,mCAAA;AAGF,IAAA,uBAAA,EAAM,EACF;;;AAtBF,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,mBAAA,IAAA,KAAA;AAIA,IAAA,oBAAA;AAAA,IAAA,qBAAA,IAAA,KAAA;AAWA,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,mBAAA,IAAA,MAAA;AAGA,IAAA,oBAAA;AAAA,IAAA,qBAAA,IAAA,MAAA;;GDJwC,8DAFlC,kBAAkB,aAAa,OAAO,GAAA,QAAA,CAAA,o4CAAA,EAAA,CAAA;AAE5C,IAAO,oCAAP;;sEAAO,mCAAiC,CAAA;UAP7C;uBACW,0CAAwC,YAGtC,MAAI,SACP,CAAC,kBAAkB,aAAa,OAAO,GAAC,UAAA,guBAAA,QAAA,CAAA,suCAAA,EAAA,CAAA;;;;6EAEtC,mCAAiC,EAAA,WAAA,qCAAA,UAAA,2EAAA,YAAA,GAAA,CAAA;AAAA,GAAA;",
  "names": []
}
