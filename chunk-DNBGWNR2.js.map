{
  "version": 3,
  "sources": ["src/content/examples/dynamic-form/src/app/question-control.service.ts", "src/content/examples/dynamic-form/src/app/dynamic-form.component.ts", "src/content/examples/dynamic-form/src/app/dynamic-form.component.html"],
  "sourcesContent": ["// #docregion\nimport {Injectable} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\n\nimport {QuestionBase} from './question-base';\n\n@Injectable()\nexport class QuestionControlService {\n  toFormGroup(questions: QuestionBase<string>[]) {\n    const group: any = {};\n\n    questions.forEach((question) => {\n      group[question.key] = question.required\n        ? new FormControl(question.value || '', Validators.required)\n        : new FormControl(question.value || '');\n    });\n    return new FormGroup(group);\n  }\n}\n", "// #docregion\nimport {Component, computed, inject, input} from '@angular/core';\nimport {FormGroup, ReactiveFormsModule} from '@angular/forms';\n\nimport {DynamicFormQuestionComponent} from './dynamic-form-question.component';\n\nimport {QuestionBase} from './question-base';\nimport {QuestionControlService} from './question-control.service';\n\n@Component({\n  selector: 'app-dynamic-form',\n  templateUrl: './dynamic-form.component.html',\n  providers: [QuestionControlService],\n  imports: [DynamicFormQuestionComponent, ReactiveFormsModule],\n})\nexport class DynamicFormComponent {\n  private readonly qcs = inject(QuestionControlService);\n\n  readonly questions = input<QuestionBase<string>[] | null>([]);\n  readonly form = computed<FormGroup>(() =>\n    this.qcs.toFormGroup(this.questions() as QuestionBase<string>[]),\n  );\n  payLoad = '';\n\n  onSubmit() {\n    this.payLoad = JSON.stringify(this.form().getRawValue());\n  }\n}\n", "<!-- #docregion -->\n<div>\n  <form (ngSubmit)=\"onSubmit()\" [formGroup]=\"form()\">\n    @for (question of questions(); track question) {\n      <div class=\"form-row\">\n        <app-question [question]=\"question\" [form]=\"form()\" />\n      </div>\n    }\n\n    <div class=\"form-row\">\n      <button type=\"submit\" [disabled]=\"!form().valid\">Save</button>\n    </div>\n  </form>\n\n  @if (payLoad) {\n    <div class=\"form-row\"><strong>Saved the following values</strong><br />{{ payLoad }}</div>\n  }\n</div>\n"],
  "mappings": "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",
  "names": []
}
