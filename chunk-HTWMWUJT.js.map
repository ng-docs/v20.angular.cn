{
  "version": 3,
  "sources": ["src/content/examples/structural-directives/src/app/trigonometry.directive.ts", "src/content/examples/structural-directives/src/app/app.component.ts", "src/content/examples/structural-directives/src/app/app.component.html"],
  "sourcesContent": ["import {Directive, effect, input, TemplateRef, ViewContainerRef} from '@angular/core';\n\n@Directive({\n  selector: '[appTrigonometry]',\n})\nexport class TrigonometryDirective {\n  private isViewCreated = false;\n  private readonly context = new TrigonometryContext();\n\n  angleInDegrees = input.required<number>({alias: 'appTrigonometry'});\n\n  constructor(\n    private readonly viewContainerRef: ViewContainerRef,\n    private readonly templateRef: TemplateRef<TrigonometryContext>,\n  ) {\n    effect(() => {\n      const angleInRadians = toRadians(this.angleInDegrees());\n      this.context.sin = Math.sin(angleInRadians);\n      this.context.cos = Math.cos(angleInRadians);\n      this.context.tan = Math.tan(angleInRadians);\n\n      if (!this.isViewCreated) {\n        this.viewContainerRef.createEmbeddedView(this.templateRef, this.context);\n        this.isViewCreated = true;\n      }\n    });\n  }\n\n  // Make sure the template checker knows the type of the context with which the\n  // template of this directive will be rendered\n  static ngTemplateContextGuard(\n    directive: TrigonometryDirective,\n    context: unknown,\n  ): context is TrigonometryContext {\n    return true;\n  }\n}\n\nclass TrigonometryContext {\n  sin = 0;\n  cos = 0;\n  tan = 0;\n}\n\nfunction toRadians(degrees: number): number {\n  return degrees * (Math.PI / 180);\n}\n", "import {Component} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {heroSwitchComponents} from './hero-switch.components';\nimport {HeroComponent} from './hero.component';\nimport {TrigonometryDirective} from './trigonometry.directive';\n\nimport {Hero, heroes} from './hero';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  imports: [CommonModule, FormsModule, heroSwitchComponents, HeroComponent, TrigonometryDirective],\n})\nexport class AppComponent {\n  heroes = heroes;\n  hero: Hero | null = this.heroes[0];\n  // #docregion condition\n  condition = false;\n  // #enddocregion condition\n  logs: string[] = [];\n  showSad = true;\n  status = 'ready';\n\n  trackById(index: number, hero: Hero): number {\n    return hero.id;\n  }\n}\n", "<!-- #docplaster -->\n<!-- #docregion -->\n<h1>Structural Directives</h1>\n\n<p>Conditional display of hero</p>\n\n<blockquote>\n<!-- #docregion asterisk -->\n<div *ngIf=\"hero\" class=\"name\">{{hero.name}}</div>\n<!-- #enddocregion asterisk -->\n</blockquote>\n\n<p>List of heroes</p>\n\n<ul>\n  <li *ngFor=\"let hero of heroes\">{{hero.name}}</li>\n</ul>\n\n<hr>\n\n<h2 id=\"ngIf\">NgIf</h2>\n\n<p *ngIf=\"true\">\n  Expression is true and ngIf is true.\n  This paragraph is in the DOM.\n</p>\n<p *ngIf=\"false\">\n  Expression is false and ngIf is false.\n  This paragraph is not in the DOM.\n</p>\n\n<p [style.display]=\"'block'\">\n  Expression sets display to \"block\".\n  This paragraph is visible.\n</p>\n<p [style.display]=\"'none'\">\n  Expression sets display to \"none\".\n  This paragraph is hidden but still in the DOM.\n</p>\n\n<h4>NgIf with template</h4>\n<p>&lt;ng-template&gt; element</p>\n<!-- #docregion ngif-template -->\n<ng-template [ngIf]=\"hero\">\n  <div class=\"name\">{{hero.name}}</div>\n</ng-template>\n<!-- #enddocregion ngif-template -->\n\n<hr>\n\n<h2 id=\"ng-container\">&lt;ng-container&gt;</h2>\n\n<h4>*ngIf with a &lt;ng-container&gt;</h4>\n\n<button type=\"button\" (click)=\"hero = hero ? null : heroes[0]\">Toggle hero</button>\n\n<!-- #docregion ngif-ngcontainer -->\n<p>\n  I turned the corner\n  <ng-container *ngIf=\"hero\">\n    and saw {{hero.name}}. I waved\n  </ng-container>\n  and continued on my way.\n</p>\n<!-- #enddocregion ngif-ngcontainer -->\n\n<p>\n  I turned the corner\n  <span *ngIf=\"hero\">\n    and saw {{hero.name}}. I waved\n  </span>\n  and continued on my way.\n</p>\n\n<p><em>&lt;select&gt; with &lt;span&gt;</em></p>\n\n<div>\n  Pick your favorite hero\n  (<label for=\"show-sad\"><input id=\"show-sad\" type=\"checkbox\" checked (change)=\"showSad = !showSad\">show sad</label>)\n</div>\n<select [(ngModel)]=\"hero\">\n  <span *ngFor=\"let h of heroes\">\n    <span *ngIf=\"showSad || h.emotion !== 'sad'\">\n      <option [ngValue]=\"h\">{{h.name}} ({{h.emotion}})</option>\n    </span>\n  </span>\n</select>\n\n<p><em>&lt;select&gt; with &lt;ng-container&gt;</em></p>\n<!-- #docregion select-ngcontainer -->\n<div>\n  Pick your favorite hero\n  (<label for=\"showSad\"><input id=\"showSad\" type=\"checkbox\" checked (change)=\"showSad = !showSad\">show sad</label>)\n</div>\n<select [(ngModel)]=\"hero\">\n  <ng-container *ngFor=\"let h of heroes\">\n    <ng-container *ngIf=\"showSad || h.emotion !== 'sad'\">\n      <option [ngValue]=\"h\">{{h.name}} ({{h.emotion}})</option>\n    </ng-container>\n  </ng-container>\n</select>\n<!-- #enddocregion select-ngcontainer -->\n<br><br>\n\n<hr>\n\n<h2 id=\"ngFor\">NgFor</h2>\n\n<div class=\"box\">\n\n<p class=\"code\">&lt;div *ngFor=\"let hero of heroes; let i=index; let odd=odd; trackBy: trackById\" [class.odd]=\"odd\"&gt;</p>\n<!--#docregion inside-ngfor -->\n<div\n  *ngFor=\"let hero of heroes; let i=index; let odd=odd; trackBy: trackById\"\n  [class.odd]=\"odd\">\n  ({{i}}) {{hero.name}}\n</div>\n\n<!--#enddocregion inside-ngfor -->\n<p class=\"code\">&lt;ng-template ngFor let-hero [ngForOf]=\"heroes\" let-i=\"index\" let-odd=\"odd\" [ngForTrackBy]=\"trackById\"/&gt;</p>\n<!--#docregion inside-ngfor -->\n<ng-template ngFor let-hero [ngForOf]=\"heroes\"\n  let-i=\"index\" let-odd=\"odd\" [ngForTrackBy]=\"trackById\">\n  <div [class.odd]=\"odd\">\n    ({{i}}) {{hero.name}}\n  </div>\n</ng-template>\n<!--#enddocregion inside-ngfor -->\n\n</div>\n<hr>\n\n<h2 id=\"ngSwitch\">NgSwitch</h2>\n\n<div>Pick your favorite hero</div>\n<p>\n  <label for=\"hero-{{h}}\" *ngFor=\"let h of heroes\">\n    <input id=\"hero-{{h}}\" type=\"radio\" name=\"heroes\" [(ngModel)]=\"hero\" [value]=\"h\">{{h.name}}\n  </label>\n  <label for=\"none-of-the-above\"><input id=\"none-of-the-above\" type=\"radio\" name=\"heroes\" (click)=\"hero = null\">None of the above</label>\n</p>\n\n<h4>NgSwitch</h4>\n\n<div [ngSwitch]=\"hero?.emotion\">\n  <app-happy-hero    *ngSwitchCase=\"'happy'\"    [hero]=\"hero!\"></app-happy-hero>\n  <app-sad-hero      *ngSwitchCase=\"'sad'\"      [hero]=\"hero!\"></app-sad-hero>\n  <app-confused-hero *ngSwitchCase=\"'confused'\" [hero]=\"hero!\"></app-confused-hero>\n  <app-unknown-hero  *ngSwitchDefault           [hero]=\"hero!\"></app-unknown-hero>\n</div>\n\n<h4>NgSwitch with &lt;ng-template&gt;</h4>\n<div [ngSwitch]=\"hero?.emotion\">\n  <ng-template ngSwitchCase=\"happy\">\n    <app-happy-hero [hero]=\"hero!\"></app-happy-hero>\n  </ng-template>\n  <ng-template ngSwitchCase=\"sad\">\n    <app-sad-hero [hero]=\"hero!\"></app-sad-hero>\n  </ng-template>\n  <ng-template ngSwitchCase=\"confused\">\n    <app-confused-hero [hero]=\"hero!\"></app-confused-hero>\n  </ng-template >\n  <ng-template ngSwitchDefault>\n    <app-unknown-hero [hero]=\"hero!\"></app-unknown-hero>\n  </ng-template>\n</div>\n\n<hr>\n\n<hr>\n\n<h2 id=\"appIfLoaded\">IfLoadedDirective</h2>\n<app-hero></app-hero>\n\n<hr>\n\n<h2 id=\"appTrigonometry\">TrigonometryDirective</h2>\n\n<!-- #docregion appTrigonometry -->\n<ul *appTrigonometry=\"30; sin as s; cos as c; tan as t\">\n  <li>sin(30°): {{ s }}</li>\n  <li>cos(30°): {{ c }}</li>\n  <li>tan(30°): {{ t }}</li>\n</ul>\n<!-- #enddocregion appTrigonometry -->\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAKM,IAAO,yBAAP,MAAO,uBAAqB;EAOb;EACA;EAPX,gBAAgB;EACP,UAAU,IAAI,oBAAmB;EAElD,iBAAiB,MAAM,SAAQ,GAAA,YAAA,CAAA,EAAA,WAAA,kBAAU,OAAO,kBAAiB,CAAA,IAAA,CAAzB,EAAC,OAAO,kBAAiB,CAAC,CAAA;EAElE,YACmB,kBACA,aAA6C;AAD7C,SAAA,mBAAA;AACA,SAAA,cAAA;AAEjB,WAAO,MAAK;AACV,YAAM,iBAAiB,UAAU,KAAK,eAAc,CAAE;AACtD,WAAK,QAAQ,MAAM,KAAK,IAAI,cAAc;AAC1C,WAAK,QAAQ,MAAM,KAAK,IAAI,cAAc;AAC1C,WAAK,QAAQ,MAAM,KAAK,IAAI,cAAc;AAE1C,UAAI,CAAC,KAAK,eAAe;AACvB,aAAK,iBAAiB,mBAAmB,KAAK,aAAa,KAAK,OAAO;AACvE,aAAK,gBAAgB;MACvB;IACF,CAAC;EACH;;;EAIA,OAAO,uBACL,WACA,SAAgB;AAEhB,WAAO;EACT;;AA9BgC;cAArB;mCAAA,wBAAqB,4BAAA,gBAAA,GAAA,4BAAA,WAAA,CAAA;AAAA;cAArB,yFAAA,wBAAqB,WAAA,CAAA,CAAA,IAAA,mBAAA,EAAA,CAAA,GAAA,QAAA,EAAA,gBAAA,CAAA,GAAA,mBAAA,gBAAA,EAAA,EAAA,CAAA;AAA5B,IAAO,wBAAP;;sEAAO,uBAAqB,CAAA;UAHjC;WAAU;MACT,UAAU;KACX;;;AAkCD,IAAM,uBAAN,MAAM,qBAAmB;EACvB,MAAM;EACN,MAAM;EACN,MAAM;;AAHiB;AAAzB,IAAM,sBAAN;AAMA,SAAS,UAAU,SAAe;AAChC,SAAO,WAAW,KAAK,KAAK;AAC9B;AAFS;;;;;AEpCT,IAAA,yBAAA,GAAA,OAAA,EAAA;AAA+B,IAAA,iBAAA,CAAA;AAAa,IAAA,uBAAA;;;;AAAb,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,KAAA,IAAA;;;;;;AAO7B,IAAA,yBAAA,GAAA,IAAA;AAAgC,IAAA,iBAAA,CAAA;AAAa,IAAA,uBAAA;;;;AAAb,IAAA,oBAAA;AAAA,IAAA,4BAAA,QAAA,IAAA;;;;;;AAOlC,IAAA,yBAAA,GAAA,GAAA;AACE,IAAA,iBAAA,GAAA,uEAAA;AAEF,IAAA,uBAAA;;;;;;AACA,IAAA,yBAAA,GAAA,GAAA;AACE,IAAA,iBAAA,GAAA,6EAAA;AAEF,IAAA,uBAAA;;;;;;AAeE,IAAA,yBAAA,GAAA,OAAA,EAAA;AAAkB,IAAA,iBAAA,CAAA;AAAa,IAAA,uBAAA;;;;AAAb,IAAA,oBAAA;AAAA,IAAA,4BAAA,OAAA,KAAA,IAAA;;;;;;AAelB,IAAA,kCAAA,CAAA;AACE,IAAA,iBAAA,CAAA;;;;;AAAA,IAAA,oBAAA;AAAA,IAAA,6BAAA,aAAA,OAAA,KAAA,MAAA,YAAA;;;;;;AAQF,IAAA,yBAAA,GAAA,MAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;AADE,IAAA,oBAAA;AAAA,IAAA,6BAAA,aAAA,OAAA,KAAA,MAAA,YAAA;;;;;;AAaA,IAAA,yBAAA,GAAA,MAAA,EAA6C,GAAA,UAAA,EAAA;AACrB,IAAA,iBAAA,CAAA;AAA0B,IAAA,uBAAA,EAAS;;;;AAAjD,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,IAAA;AAAc,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,KAAA,MAAA,MAAA,KAAA,SAAA,GAAA;;;;;;AAF1B,IAAA,yBAAA,GAAA,MAAA;AACE,IAAA,qBAAA,GAAA,sCAAA,GAAA,GAAA,QAAA,CAAA;AAGF,IAAA,uBAAA;;;;;AAHS,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,WAAA,KAAA,YAAA,KAAA;;;;;;AAcP,IAAA,kCAAA,CAAA;AACE,IAAA,yBAAA,GAAA,UAAA,EAAA;AAAsB,IAAA,iBAAA,CAAA;AAA0B,IAAA,uBAAA;;;;;AAAxC,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,IAAA;AAAc,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,KAAA,MAAA,MAAA,KAAA,SAAA,GAAA;;;;;;AAF1B,IAAA,kCAAA,CAAA;AACE,IAAA,qBAAA,GAAA,sDAAA,GAAA,GAAA,gBAAA,CAAA;;;;;;AAAe,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,OAAA,WAAA,KAAA,YAAA,KAAA;;;;;;AAgBnB,IAAA,yBAAA,GAAA,KAAA;AAGE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;;AAFE,IAAA,sBAAA,OAAA,MAAA;AACA,IAAA,oBAAA;AAAA,IAAA,6BAAA,MAAA,MAAA,MAAA,QAAA,MAAA,IAAA;;;;;;AAQA,IAAA,yBAAA,GAAA,KAAA;AACE,IAAA,iBAAA,CAAA;AACF,IAAA,uBAAA;;;;;;AAFK,IAAA,sBAAA,OAAA,OAAA;AACH,IAAA,oBAAA;AAAA,IAAA,6BAAA,MAAA,MAAA,MAAA,QAAA,MAAA,GAAA;;;;;;;AAYF,IAAA,yBAAA,GAAA,SAAA,EAAA,EAAiD,GAAA,SAAA,EAAA;AACG,IAAA,2BAAA,iBAAA,gCAAA,8DAAA,QAAA;AAAA,MAAA,wBAAA,IAAA;AAAA,YAAA,SAAA,wBAAA;AAAA,MAAA,6BAAA,OAAA,MAAA,MAAA,MAAA,OAAA,OAAA;AAAA,aAAA,sBAAA,MAAA;IAAA,GAAA,gEAAA;AAAlD,IAAA,uBAAA;AAAiF,IAAA,iBAAA,CAAA;AACnF,IAAA,uBAAA;;;;;AAFO,IAAA,qBAAA,OAAA,yBAAA,SAAA,KAAA,CAAgB;AACd,IAAA,oBAAA;AAAA,IAAA,qBAAA,MAAA,yBAAA,SAAA,KAAA,CAAe;AAA4B,IAAA,2BAAA,WAAA,OAAA,IAAA;AAAmB,IAAA,qBAAA,SAAA,KAAA;AAAY,IAAA,oBAAA;AAAA,IAAA,6BAAA,IAAA,MAAA,MAAA,GAAA;;;;;;AAQnF,IAAA,oBAAA,GAAA,kBAAA,EAAA;;;;AAA8C,IAAA,qBAAA,QAAA,OAAA,IAAA;;;;;;AAC9C,IAAA,oBAAA,GAAA,gBAAA,EAAA;;;;AAA8C,IAAA,qBAAA,QAAA,OAAA,IAAA;;;;;;AAC9C,IAAA,oBAAA,GAAA,qBAAA,EAAA;;;;AAA8C,IAAA,qBAAA,QAAA,OAAA,IAAA;;;;;;AAC9C,IAAA,oBAAA,GAAA,oBAAA,EAAA;;;;AAA8C,IAAA,qBAAA,QAAA,OAAA,IAAA;;;;;;AAM5C,IAAA,oBAAA,GAAA,kBAAA,EAAA;;;;AAAgB,IAAA,qBAAA,QAAA,OAAA,IAAA;;;;;;AAGhB,IAAA,oBAAA,GAAA,gBAAA,EAAA;;;;AAAc,IAAA,qBAAA,QAAA,OAAA,IAAA;;;;;;AAGd,IAAA,oBAAA,GAAA,qBAAA,EAAA;;;;AAAmB,IAAA,qBAAA,QAAA,OAAA,IAAA;;;;;;AAGnB,IAAA,oBAAA,GAAA,oBAAA,EAAA;;;;AAAkB,IAAA,qBAAA,QAAA,OAAA,IAAA;;;;;;AAgBtB,IAAA,yBAAA,GAAA,IAAA,EAAwD,GAAA,IAAA;AAClD,IAAA,iBAAA,CAAA;AAAiB,IAAA,uBAAA;AACrB,IAAA,yBAAA,GAAA,IAAA;AAAI,IAAA,iBAAA,CAAA;AAAiB,IAAA,uBAAA;AACrB,IAAA,yBAAA,GAAA,IAAA;AAAI,IAAA,iBAAA,CAAA;AAAiB,IAAA,uBAAA,EAAK;;;;;;AAFtB,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,iBAAA,KAAA;AACA,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,iBAAA,KAAA;AACA,IAAA,oBAAA,CAAA;AAAA,IAAA,6BAAA,iBAAA,KAAA;;;;ADtKA,IAAO,gBAAP,MAAO,cAAY;EACvB,SAAS;EACT,OAAoB,KAAK,OAAO,CAAC;;EAEjC,YAAY;;EAEZ,OAAiB,CAAA;EACjB,UAAU;EACV,SAAS;EAET,UAAU,OAAe,MAAU;AACjC,WAAO,KAAK;EACd;;AAZuB;cAAZ;mCAAA,eAAY;AAAA;cAAZ,gFAAA,eAAY,WAAA,CAAA,CAAA,UAAA,CAAA,GAAA,OAAA,KAAA,MAAA,IAAA,QAAA,CAAA,CAAA,SAAA,QAAA,GAAA,MAAA,GAAA,CAAA,GAAA,SAAA,SAAA,GAAA,CAAA,MAAA,MAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,MAAA,cAAA,GAAA,CAAA,QAAA,UAAA,GAAA,OAAA,GAAA,CAAA,OAAA,UAAA,GAAA,CAAA,MAAA,YAAA,QAAA,YAAA,WAAA,IAAA,GAAA,QAAA,GAAA,CAAA,GAAA,iBAAA,SAAA,GAAA,CAAA,OAAA,SAAA,GAAA,CAAA,MAAA,WAAA,QAAA,YAAA,WAAA,IAAA,GAAA,QAAA,GAAA,CAAA,MAAA,OAAA,GAAA,CAAA,GAAA,KAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,OAAA,GAAA,SAAA,WAAA,cAAA,GAAA,CAAA,SAAA,IAAA,GAAA,WAAA,cAAA,GAAA,CAAA,MAAA,UAAA,GAAA,CAAA,GAAA,OAAA,GAAA,SAAA,SAAA,GAAA,CAAA,OAAA,mBAAA,GAAA,CAAA,MAAA,qBAAA,QAAA,SAAA,QAAA,UAAA,GAAA,OAAA,GAAA,CAAA,GAAA,UAAA,GAAA,CAAA,GAAA,QAAA,GAAA,cAAA,GAAA,CAAA,GAAA,QAAA,GAAA,iBAAA,GAAA,CAAA,gBAAA,OAAA,GAAA,CAAA,gBAAA,KAAA,GAAA,CAAA,gBAAA,UAAA,GAAA,CAAA,mBAAA,EAAA,GAAA,CAAA,MAAA,aAAA,GAAA,CAAA,MAAA,iBAAA,GAAA,CAAA,GAAA,iBAAA,GAAA,CAAA,GAAA,MAAA,GAAA,CAAA,GAAA,SAAA,GAAA,CAAA,GAAA,KAAA,GAAA,CAAA,QAAA,SAAA,QAAA,UAAA,GAAA,iBAAA,MAAA,WAAA,OAAA,GAAA,CAAA,GAAA,MAAA,CAAA,GAAA,UAAA,gCAAA,sBAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;ACdzB,IAAA,yBAAA,GAAA,IAAA;AAAI,IAAA,iBAAA,GAAA,uBAAA;AAAqB,IAAA,uBAAA;AAEzB,IAAA,yBAAA,GAAA,GAAA;AAAG,IAAA,iBAAA,GAAA,6BAAA;AAA2B,IAAA,uBAAA;AAE9B,IAAA,yBAAA,GAAA,YAAA;AAEA,IAAA,qBAAA,GAAA,6BAAA,GAAA,GAAA,OAAA,CAAA;AAEA,IAAA,uBAAA;AAEA,IAAA,yBAAA,GAAA,GAAA;AAAG,IAAA,iBAAA,GAAA,gBAAA;AAAc,IAAA,uBAAA;AAEjB,IAAA,yBAAA,GAAA,IAAA;AACE,IAAA,qBAAA,GAAA,4BAAA,GAAA,GAAA,MAAA,CAAA;AACF,IAAA,uBAAA;AAEA,IAAA,oBAAA,IAAA,IAAA;AAEA,IAAA,yBAAA,IAAA,MAAA,CAAA;AAAc,IAAA,iBAAA,IAAA,MAAA;AAAI,IAAA,uBAAA;AAElB,IAAA,qBAAA,IAAA,4BAAA,GAAA,GAAA,KAAA,CAAA,EAAgB,IAAA,4BAAA,GAAA,GAAA,KAAA,CAAA;AAShB,IAAA,yBAAA,IAAA,GAAA;AACE,IAAA,iBAAA,IAAA,mEAAA;AAEF,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,GAAA;AACE,IAAA,iBAAA,IAAA,sFAAA;AAEF,IAAA,uBAAA;AAEA,IAAA,yBAAA,IAAA,IAAA;AAAI,IAAA,iBAAA,IAAA,oBAAA;AAAkB,IAAA,uBAAA;AACtB,IAAA,yBAAA,IAAA,GAAA;AAAG,IAAA,iBAAA,IAAA,uBAAA;AAA2B,IAAA,uBAAA;AAE9B,IAAA,qBAAA,IAAA,sCAAA,GAAA,GAAA,eAAA,CAAA;AAKA,IAAA,oBAAA,IAAA,IAAA;AAEA,IAAA,yBAAA,IAAA,MAAA,CAAA;AAAsB,IAAA,iBAAA,IAAA,gBAAA;AAAoB,IAAA,uBAAA;AAE1C,IAAA,yBAAA,IAAA,IAAA;AAAI,IAAA,iBAAA,IAAA,6BAAA;AAAiC,IAAA,uBAAA;AAErC,IAAA,yBAAA,IAAA,UAAA,CAAA;AAAsB,IAAA,qBAAA,SAAA,gCAAA,iDAAA;AAAA,aAAA,IAAA,OAAA,IAAA,OAAuB,OAAI,IAAA,OAAU,CAAC;IAAA,GAAtC,iDAAsC;AAAG,IAAA,iBAAA,IAAA,aAAA;AAAW,IAAA,uBAAA;AAG1E,IAAA,yBAAA,IAAA,GAAA;AACE,IAAA,iBAAA,IAAA,uBAAA;AACA,IAAA,qBAAA,IAAA,uCAAA,GAAA,GAAA,gBAAA,CAAA;AAGA,IAAA,iBAAA,IAAA,6BAAA;AACF,IAAA,uBAAA;AAGA,IAAA,yBAAA,IAAA,GAAA;AACE,IAAA,iBAAA,IAAA,uBAAA;AACA,IAAA,qBAAA,IAAA,+BAAA,GAAA,GAAA,QAAA,CAAA;AAGA,IAAA,iBAAA,IAAA,6BAAA;AACF,IAAA,uBAAA;AAEA,IAAA,yBAAA,IAAA,GAAA,EAAG,IAAA,IAAA;AAAI,IAAA,iBAAA,IAAA,sBAAA;AAAgC,IAAA,uBAAA,EAAK;AAE5C,IAAA,yBAAA,IAAA,KAAA;AACE,IAAA,iBAAA,IAAA,4BAAA;AACC,IAAA,yBAAA,IAAA,SAAA,CAAA,EAAsB,IAAA,SAAA,CAAA;AAA6C,IAAA,qBAAA,UAAA,gCAAA,iDAAA;AAAA,aAAA,IAAA,UAAA,CAAA,IAAA;IAAA,GAAA,iDAAA;AAA7C,IAAA,uBAAA;AAA2E,IAAA,iBAAA,IAAA,UAAA;AAAQ,IAAA,uBAAA;AAAQ,IAAA,iBAAA,IAAA,KAAA;AACpH,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,UAAA,CAAA;AAAQ,IAAA,2BAAA,iBAAA,gCAAA,uDAAA,QAAA;AAAA,MAAA,6BAAA,IAAA,MAAA,MAAA,MAAA,IAAA,OAAA;AAAA,aAAA;IAAA,GAAA,yDAAA;AACN,IAAA,qBAAA,IAAA,+BAAA,GAAA,GAAA,QAAA,CAAA;AAKF,IAAA,uBAAA;AAEA,IAAA,yBAAA,IAAA,GAAA,EAAG,IAAA,IAAA;AAAI,IAAA,iBAAA,IAAA,8BAAA;AAAwC,IAAA,uBAAA,EAAK;AAEpD,IAAA,yBAAA,IAAA,KAAA;AACE,IAAA,iBAAA,IAAA,4BAAA;AACC,IAAA,yBAAA,IAAA,SAAA,EAAA,EAAqB,IAAA,SAAA,EAAA;AAA4C,IAAA,qBAAA,UAAA,gCAAA,iDAAA;AAAA,aAAA,IAAA,UAAA,CAAA,IAAA;IAAA,GAAA,iDAAA;AAA5C,IAAA,uBAAA;AAA0E,IAAA,iBAAA,IAAA,UAAA;AAAQ,IAAA,uBAAA;AAAQ,IAAA,iBAAA,IAAA,KAAA;AAClH,IAAA,uBAAA;AACA,IAAA,yBAAA,IAAA,UAAA,CAAA;AAAQ,IAAA,2BAAA,iBAAA,gCAAA,uDAAA,QAAA;AAAA,MAAA,6BAAA,IAAA,MAAA,MAAA,MAAA,IAAA,OAAA;AAAA,aAAA;IAAA,GAAA,yDAAA;AACN,IAAA,qBAAA,IAAA,uCAAA,GAAA,GAAA,gBAAA,CAAA;AAKF,IAAA,uBAAA;AAEA,IAAA,oBAAA,IAAA,IAAA,EAAI,IAAA,IAAA,EAAI,IAAA,IAAA;AAIR,IAAA,yBAAA,IAAA,MAAA,EAAA;AAAe,IAAA,iBAAA,IAAA,OAAA;AAAK,IAAA,uBAAA;AAEpB,IAAA,yBAAA,IAAA,OAAA,EAAA,EAAiB,IAAA,KAAA,EAAA;AAED,IAAA,iBAAA,IAAA,mGAAA;AAAuG,IAAA,uBAAA;AAEvH,IAAA,qBAAA,IAAA,8BAAA,GAAA,GAAA,OAAA,EAAA;AAOA,IAAA,yBAAA,IAAA,KAAA,EAAA;AAAgB,IAAA,iBAAA,IAAA,yGAAA;AAA6G,IAAA,uBAAA;AAE7H,IAAA,qBAAA,IAAA,sCAAA,GAAA,GAAA,eAAA,EAAA;AAQA,IAAA,uBAAA;AACA,IAAA,oBAAA,IAAA,IAAA;AAEA,IAAA,yBAAA,IAAA,MAAA,EAAA;AAAkB,IAAA,iBAAA,IAAA,UAAA;AAAQ,IAAA,uBAAA;AAE1B,IAAA,yBAAA,IAAA,KAAA;AAAK,IAAA,iBAAA,IAAA,yBAAA;AAAuB,IAAA,uBAAA;AAC5B,IAAA,yBAAA,IAAA,GAAA;AACE,IAAA,qBAAA,IAAA,gCAAA,GAAA,GAAA,SAAA,EAAA;AAGA,IAAA,yBAAA,IAAA,SAAA,EAAA,EAA+B,IAAA,SAAA,EAAA;AAAyD,IAAA,qBAAA,SAAA,gCAAA,gDAAA;AAAA,aAAA,IAAA,OAAgB;IAAI,GAApB,gDAAoB;AAA7E,IAAA,uBAAA;AAA+E,IAAA,iBAAA,IAAA,mBAAA;AAAiB,IAAA,uBAAA,EAAQ;AAGzI,IAAA,yBAAA,IAAA,IAAA;AAAI,IAAA,iBAAA,IAAA,UAAA;AAAQ,IAAA,uBAAA;AAEZ,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,qBAAA,IAAA,yCAAA,GAAA,GAAA,kBAAA,EAAA,EAA6D,IAAA,uCAAA,GAAA,GAAA,gBAAA,EAAA,EACA,IAAA,4CAAA,GAAA,GAAA,qBAAA,EAAA,EACA,IAAA,2CAAA,GAAA,GAAA,oBAAA,EAAA;AAE/D,IAAA,uBAAA;AAEA,IAAA,yBAAA,IAAA,IAAA;AAAI,IAAA,iBAAA,IAAA,6BAAA;AAAiC,IAAA,uBAAA;AACrC,IAAA,yBAAA,IAAA,OAAA,EAAA;AACE,IAAA,qBAAA,IAAA,sCAAA,GAAA,GAAA,eAAA,EAAA,EAAkC,IAAA,sCAAA,GAAA,GAAA,eAAA,EAAA,EAGF,IAAA,sCAAA,GAAA,GAAA,eAAA,EAAA,EAGK,IAAA,sCAAA,GAAA,GAAA,eAAA,EAAA;AAMvC,IAAA,uBAAA;AAEA,IAAA,oBAAA,IAAA,IAAA,EAAI,IAAA,IAAA;AAIJ,IAAA,yBAAA,IAAA,MAAA,EAAA;AAAqB,IAAA,iBAAA,KAAA,mBAAA;AAAiB,IAAA,uBAAA;AACtC,IAAA,oBAAA,KAAA,UAAA,EAAqB,KAAA,IAAA;AAIrB,IAAA,yBAAA,KAAA,MAAA,EAAA;AAAyB,IAAA,iBAAA,KAAA,uBAAA;AAAqB,IAAA,uBAAA;AAG9C,IAAA,qBAAA,KAAA,8BAAA,GAAA,GAAA,MAAA,EAAA;;;AA3KM,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,IAAA;AAOiB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,IAAA,MAAA;AAOnB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,IAAA;AAIA,IAAA,oBAAA;AAAA,IAAA,qBAAA,QAAA,KAAA;AAKD,IAAA,oBAAA;AAAA,IAAA,sBAAA,WAAA,OAAA;AAIA,IAAA,oBAAA,CAAA;AAAA,IAAA,sBAAA,WAAA,MAAA;AAQU,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,IAAA;AAgBI,IAAA,oBAAA,EAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,IAAA;AASR,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,QAAA,IAAA,IAAA;AAYD,IAAA,oBAAA,EAAA;AAAA,IAAA,2BAAA,WAAA,IAAA,IAAA;AACc,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,IAAA,MAAA;AAad,IAAA,oBAAA,EAAA;AAAA,IAAA,2BAAA,WAAA,IAAA,IAAA;AACsB,IAAA,oBAAA;AAAA,IAAA,qBAAA,WAAA,IAAA,MAAA;AAkBX,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,IAAA,MAAA,EAAW,gBAAA,IAAA,SAAA;AAQF,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,IAAA,MAAA,EAAkB,gBAAA,IAAA,SAAA;AAeN,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,WAAA,IAAA,MAAA;AAQnC,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,YAAA,IAAA,QAAA,OAAA,OAAA,IAAA,KAAA,OAAA;AACiB,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,OAAA;AACA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,KAAA;AACA,IAAA,oBAAA;AAAA,IAAA,qBAAA,gBAAA,UAAA;AAKjB,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,YAAA,IAAA,QAAA,OAAA,OAAA,IAAA,KAAA,OAAA;AA2BA,IAAA,oBAAA,EAAA;AAAA,IAAA,qBAAA,mBAAA,EAAA;;GDnKoB,yCAFb,cAAY,SAAA,MAAA,UAAA,cAAA,iBAAE,aAAW,gBAAA,8BAAA,sBAAA,4BAAA,2BAAA,iBAAA,SAAA,oBAAA,kBAAA,uBAAA,sBAAwB,eAAe,qBAAqB,GAAA,QAAA,CAAA,w0CAAA,EAAA,CAAA;AAE3F,IAAO,eAAP;;sEAAO,cAAY,CAAA;UANxB;uBACW,YAAU,SAGX,CAAC,cAAc,aAAa,sBAAsB,eAAe,qBAAqB,GAAC,UAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAAA,QAAA,CAAA,2/BAAA,EAAA,CAAA;;;;6EAErF,cAAY,EAAA,WAAA,gBAAA,UAAA,uEAAA,YAAA,GAAA,CAAA;AAAA,GAAA;",
  "names": []
}
