{"type":"editor","openFiles":["src/app/app.ts","src/app/app.css"],"allFiles":["BUILD.bazel","angular.json","package-lock.json","package.json.template","tsconfig.app.json","tsconfig.json","src/favicon.ico","src/index.html","src/main.ts","src/styles.css","src/assets/angular.svg","src/app/app.config.ts","package.json","idx/dev.nix","config.json","src/app/app.css","src/app/app.ts","answer/src/app/app.css","answer/src/app/app.ts"],"tutorialFiles":{"src/app/app.ts":"// TODO: Import computed from @angular/core\nimport {Component, signal, ChangeDetectionStrategy} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <div class=\"user-profile\">\n      <h1>User Dashboard</h1>\n      <div class=\"status-indicator\" [class]=\"userStatus()\">\n        <span class=\"status-dot\"></span>\n        Status: {{ userStatus() }}\n      </div>\n\n      <div class=\"status-info\">\n        <div class=\"notifications\">\n          <strong>Notifications:</strong>\n          <!-- TODO: Replace 'Loading...' with @if block using notificationsEnabled() -->\n          Loading...\n        </div>\n        <div class=\"message\">\n          <strong>Message:</strong>\n          <!-- TODO: Replace 'Loading...' with {{ statusMessage() }} -->\n          Loading...\n        </div>\n        <div class=\"working-hours\">\n          <strong>Within Working Hours:</strong>\n          <!-- TODO: Replace 'Loading...' with @if block using isWithinWorkingHours() -->\n          Loading...\n        </div>\n      </div>\n\n      <div class=\"status-controls\">\n        <button (click)=\"goOnline()\" [disabled]=\"userStatus() === 'online'\">\n          Go Online\n        </button>\n        <button (click)=\"goAway()\" [disabled]=\"userStatus() === 'away'\">\n          Set Away\n        </button>\n        <button (click)=\"goOffline()\" [disabled]=\"userStatus() === 'offline'\">\n          Go Offline\n        </button>\n        <button (click)=\"toggleStatus()\" class=\"toggle-btn\">\n          Cycle Status\n        </button>\n      </div>\n    </div>\n  `,\n  styleUrl: './app.css',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class App {\n  userStatus = signal<'online' | 'away' | 'offline'>('offline');\n\n  // TODO: Create notificationsEnabled computed signal that returns true when status is 'online'\n\n  // TODO: Create statusMessage computed signal that returns appropriate message for each status\n\n  // TODO: Create isWithinWorkingHours computed signal that calculates if user is within working hours\n\n  goOnline() {\n    this.userStatus.set('online');\n  }\n\n  goAway() {\n    this.userStatus.set('away');\n  }\n\n  goOffline() {\n    this.userStatus.set('offline');\n  }\n\n  toggleStatus() {\n    const current = this.userStatus();\n    switch (current) {\n      case 'offline':\n        this.userStatus.set('online');\n        break;\n      case 'online':\n        this.userStatus.set('away');\n        break;\n      case 'away':\n        this.userStatus.set('offline');\n        break;\n    }\n  }\n}\n","src/app/app.css":".user-profile {\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: Arial, sans-serif;\n}\n\n.status-indicator {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 12px 16px;\n  border-radius: 8px;\n  margin: 20px 0;\n  font-weight: bold;\n  text-transform: capitalize;\n}\n\n.status-dot {\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  display: inline-block;\n}\n\n.status-indicator.online .status-dot {\n  background: #4caf50;\n}\n\n.status-indicator.away .status-dot {\n  background: #ff9800;\n}\n\n.status-indicator.offline .status-dot {\n  background: #f44336;\n}\n\n.status-info {\n  margin: 20px 0;\n  padding: 16px;\n  background: #f8f9fa;\n  border-radius: 8px;\n  border-left: 4px solid;\n  border-left-color: var(--status-color);\n}\n\n.availability, .message {\n  margin: 8px 0;\n}\n\n.status-controls {\n  display: flex;\n  gap: 8px;\n  flex-wrap: wrap;\n}\n\nbutton {\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-weight: bold;\n  transition: background-color 0.2s;\n}\n\nbutton:not(:disabled) {\n  background-color: #007bff;\n  color: white;\n}\n\nbutton:disabled {\n  background-color: #6c757d;\n  color: #fff;\n  cursor: not-allowed;\n  opacity: 0.6;\n}\n\n.status-controls .toggle-btn {\n  background-color: #28a745;\n}"},"answerFiles":{"src/app/app.css":".user-profile {\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: Arial, sans-serif;\n}\n\n.status-indicator {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  padding: 12px 16px;\n  border-radius: 8px;\n  margin: 20px 0;\n  font-weight: bold;\n  text-transform: capitalize;\n}\n\n.status-dot {\n  width: 12px;\n  height: 12px;\n  border-radius: 50%;\n  display: inline-block;\n}\n\n.status-indicator.online .status-dot {\n  background: #4caf50;\n}\n\n.status-indicator.away .status-dot {\n  background: #ff9800;\n}\n\n.status-indicator.offline .status-dot {\n  background: #f44336;\n}\n\n.status-info {\n  margin: 20px 0;\n  padding: 16px;\n  background: #f8f9fa;\n  border-radius: 8px;\n  border-left: 4px solid;\n  border-left-color: var(--status-color);\n}\n\n.notifications, .message, .working-hours {\n  margin: 8px 0;\n}\n\n.status-controls {\n  display: flex;\n  gap: 8px;\n  flex-wrap: wrap;\n}\n\nbutton {\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-weight: bold;\n  transition: background-color 0.2s;\n}\n\nbutton:not(:disabled) {\n  background-color: #007bff;\n  color: white;\n}\n\nbutton:disabled {\n  background-color: #6c757d;\n  color: #fff;\n  cursor: not-allowed;\n  opacity: 0.6;\n}\n\n.status-controls .toggle-btn {\n  background-color: #28a745;\n}","src/app/app.ts":"import {Component, signal, computed, ChangeDetectionStrategy} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <div class=\"user-profile\">\n      <h1>User Dashboard</h1>\n      <div class=\"status-indicator\" [class]=\"userStatus()\">\n        <span class=\"status-dot\"></span>\n        Status: {{ userStatus() }}\n      </div>\n      \n      <div class=\"status-info\">\n        <div class=\"notifications\">\n          <strong>Notifications:</strong> \n          @if (notificationsEnabled()) {\n            Enabled\n          } @else {\n            Disabled\n          }\n        </div>\n        <div class=\"message\">\n          <strong>Message:</strong> {{ statusMessage() }}\n        </div>\n        <div class=\"working-hours\">\n          <strong>Within Working Hours:</strong> \n          @if (isWithinWorkingHours()) {\n            Yes\n          } @else {\n            No\n          }\n        </div>\n      </div>\n      \n      <div class=\"status-controls\">\n        <button (click)=\"goOnline()\" [disabled]=\"userStatus() === 'online'\">\n          Go Online\n        </button>\n        <button (click)=\"goAway()\" [disabled]=\"userStatus() === 'away'\">\n          Set Away\n        </button>\n        <button (click)=\"goOffline()\" [disabled]=\"userStatus() === 'offline'\">\n          Go Offline\n        </button>\n        <button (click)=\"toggleStatus()\" class=\"toggle-btn\">\n          Cycle Status\n        </button>\n      </div>\n    </div>\n  `,\n  styleUrl: './app.css',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class App {\n  userStatus = signal<'online' | 'away' | 'offline'>('offline');\n\n  notificationsEnabled = computed(() => this.userStatus() === 'online');\n\n  statusMessage = computed(() => {\n    const status = this.userStatus();\n    switch (status) {\n      case 'online':\n        return 'Available for meetings and messages';\n      case 'away':\n        return 'Temporarily away, will respond soon';\n      case 'offline':\n        return 'Not available, check back later';\n      default:\n        return 'Status unknown';\n    }\n  });\n\n  isWithinWorkingHours = computed(() => {\n    const now = new Date();\n    const hour = now.getHours();\n    const isWeekday = now.getDay() > 0 && now.getDay() < 6;\n    return isWeekday && hour >= 9 && hour < 17 && this.userStatus() !== 'offline';\n  });\n\n  goOnline() {\n    this.userStatus.set('online');\n  }\n\n  goAway() {\n    this.userStatus.set('away');\n  }\n\n  goOffline() {\n    this.userStatus.set('offline');\n  }\n\n  toggleStatus() {\n    const current = this.userStatus();\n    switch (current) {\n      case 'offline':\n        this.userStatus.set('online');\n        break;\n      case 'online':\n        this.userStatus.set('away');\n        break;\n      case 'away':\n        this.userStatus.set('offline');\n        break;\n    }\n  }\n}\n"},"hiddenFiles":["BUILD.bazel","angular.json","package-lock.json","package.json.template","tsconfig.app.json","tsconfig.json","src/favicon.ico","src/index.html","src/main.ts","src/styles.css","src/assets/angular.svg","src/app/app.config.ts","package.json","idx/dev.nix","config.json","answer/src/app/app.css","answer/src/app/app.ts"],"dependencies":{"@angular/common":"^20.1.0-next","@angular/compiler":"^20.1.0-next","@angular/core":"^20.1.0-next","@angular/forms":"^20.1.0-next","@angular/platform-browser":"^20.1.0-next","@angular/router":"^20.1.0-next","rxjs":"~7.8.0","tslib":"^2.3.0","zone.js":"~0.15.1","@angular/build":"^20.1.0-next","@angular/cli":"^20.1.0-next","@angular/compiler-cli":"^20.1.0-next","typescript":"~5.8.2"}}