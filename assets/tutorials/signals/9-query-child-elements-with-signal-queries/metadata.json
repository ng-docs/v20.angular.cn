{"type":"editor","openFiles":["src/app/app.ts","src/app/product-card.ts","src/app/cart-summary.ts","src/app/app.css"],"allFiles":["BUILD.bazel","angular.json","package-lock.json","package.json.template","tsconfig.app.json","tsconfig.json","src/favicon.ico","src/index.html","src/main.ts","src/styles.css","src/assets/angular.svg","src/app/app.config.ts","package.json","idx/dev.nix","config.json","src/app/app.css","src/app/app.ts","src/app/cart-summary.ts","src/app/product-card.ts","answer/src/app/app.css","answer/src/app/app.ts","answer/src/app/cart-summary.ts","answer/src/app/product-card.ts"],"tutorialFiles":{"src/app/app.ts":"// TODO: Import viewChild from @angular/core\nimport {Component, signal, computed, ChangeDetectionStrategy} from '@angular/core';\nimport {CartSummary} from './cart-summary';\nimport {ProductCard} from './product-card';\n\n@Component({\n  selector: 'app-root',\n  imports: [ProductCard, CartSummary],\n  template: `\n    <div class=\"shopping-app\">\n      <h1>Advanced Shopping Cart</h1>\n\n      <div class=\"controls\">\n        <button (click)=\"showFirstProductDetails()\">Show First Product Details</button>\n        <button (click)=\"initiateCheckout()\">Initiate Checkout</button>\n      </div>\n\n      <div class=\"products\">\n        <product-card\n          [name]=\"'Laptop'\"\n          [price]=\"999\"\n          [description]=\"'High-performance laptop'\"\n          [available]=\"true\"\n          [productId]=\"'LAP001'\"\n          [category]=\"'Electronics'\">\n        </product-card>\n      </div>\n\n      <div class=\"cart-section\">\n        <cart-summary\n          [itemCount]=\"cartQuantity()\"\n          [total]=\"totalPrice()\">\n        </cart-summary>\n\n        <div class=\"cart-controls\">\n          <label>Quantity:</label>\n          <button (click)=\"updateQuantity(-1)\" [disabled]=\"cartQuantity() <= 0\">-</button>\n          <span class=\"quantity\">{{ cartQuantity() }}</span>\n          <button (click)=\"updateQuantity(1)\" [disabled]=\"cartQuantity() >= 10\">+</button>\n        </div>\n      </div>\n    </div>\n  `,\n  styleUrl: './app.css',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class App {\n  cartQuantity = signal(2);\n\n  // TODO: Create viewChild queries to access child components\n  // firstProduct = viewChild(ProductCard);\n  // cartSummary = viewChild(CartSummary);\n\n  totalPrice = computed(() => {\n    return this.cartQuantity() * 999;\n  });\n\n  updateQuantity(change: number) {\n    const newQuantity = this.cartQuantity() + change;\n    if (newQuantity >= 0 && newQuantity <= 10) {\n      this.cartQuantity.set(newQuantity);\n    }\n  }\n\n  showFirstProductDetails() {\n    // TODO: Get the first product using viewChild and call its highlight() method\n    console.log('TODO: Implement show first product details');\n  }\n\n  initiateCheckout() {\n    // TODO: Get the cart summary using viewChild and call its initiateCheckout() method\n    console.log('TODO: Implement initiate checkout');\n  }\n}\n","src/app/product-card.ts":"import {Component, input, signal, ChangeDetectionStrategy} from '@angular/core';\n\n@Component({\n  selector: 'product-card',\n  template: `\n    <div class=\"product-card\" #cardElement>\n      <h3 #productTitle>{{ name() }}</h3>\n      <p class=\"price\">\\${{ price() }}</p>\n      <p class=\"description\">{{ description() }}</p>\n      <div class=\"actions\">\n        <button (click)=\"toggleDetails()\">\n          @if (showDetails()) {\n            Hide\n          } @else {\n            Show\n          } Details\n        </button>\n      </div>\n      @if (showDetails()) {\n        <div class=\"details\">\n          <p>Product ID: {{ productId() }}</p>\n          <p>Category: {{ category() }}</p>\n        </div>\n      }\n    </div>\n  `,\n  styleUrl: './app.css',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductCard {\n  name = input.required();\n  price = input.required<number>();\n  description = input('');\n  available = input(true);\n  productId = input('');\n  category = input('');\n\n  showDetails = signal(false);\n\n  toggleDetails() {\n    this.showDetails.set(!this.showDetails());\n  }\n\n  // Public methods for parent interaction\n  highlight() {\n    this.showDetails.set(true);\n  }\n}\n","src/app/cart-summary.ts":"import {\n  Component,\n  DestroyRef,\n  inject,\n  input,\n  signal,\n  OnDestroy,\n  ChangeDetectionStrategy,\n} from '@angular/core';\n\n@Component({\n  selector: 'cart-summary',\n  template: `\n    <div class=\"cart-summary\" [style.background]=\"isAnimating() ? '#e8f5e8' : ''\">\n      <h3>Cart Summary {{ isAnimating() ? 'ðŸŽ‰' : '' }}</h3>\n      <p>Items: {{ itemCount() }}</p>\n      <p>Total: \\${{ total() }}</p>\n      @if (isAnimating()) {\n        <p style=\"color: green; font-weight: bold;\">Processing checkout...</p>\n      }\n    </div>\n  `,\n  styleUrl: './app.css',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CartSummary implements OnDestroy {\n  itemCount = input.required<number>();\n  total = input.required<number>();\n\n  isAnimating = signal(false);\n\n  private timeoutId?: ReturnType<typeof setTimeout>;\n  private destroyRef = inject(DestroyRef);\n\n  // Public method for parent interaction\n  initiateCheckout() {\n    this.isAnimating.set(true);\n    const timeoutId = setTimeout(() => this.isAnimating.set(false), 2000);\n    this.destroyRef.onDestroy(() => clearTimeout(this.timeoutId));\n  }\n}\n","src/app/app.css":"/* ProductCard Component Styles */\n.product-card {\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  padding: 16px;\n  margin: 8px;\n  background: #f9f9f9;\n}\n\n.price {\n  font-size: 1.2em;\n  font-weight: bold;\n  color: #2e7d32;\n}\n\n.description {\n  color: #666;\n  margin: 8px 0;\n}\n\n.actions {\n  margin-top: 12px;\n}\n\n.details {\n  margin-top: 12px;\n  padding: 8px;\n  background: #e8f5e8;\n  border-radius: 4px;\n}\n\n.product-card button {\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  background: #1976d2;\n  color: white;\n  margin-right: 8px;\n}\n\n.product-card button:disabled {\n  background: #ccc;\n  cursor: not-allowed;\n}\n\n/* CartSummary Component Styles */\n.cart-summary {\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  padding: 16px;\n  background: #f0f8ff;\n}\n\n.cart-summary .actions {\n  margin-top: 12px;\n}\n\n.cart-summary button {\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  background: #1976d2;\n  color: white;\n  margin-right: 8px;\n}\n\n.cart-summary button:disabled {\n  background: #ccc;\n  cursor: not-allowed;\n}\n\n/* App Component Styles */\n.shopping-app {\n  max-width: 1000px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: Arial, sans-serif;\n}\n\n.controls {\n  margin: 20px 0;\n}\n\n.products {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 16px;\n  margin: 20px 0;\n}\n\n.cart-section {\n  border-top: 1px solid #ddd;\n  padding-top: 20px;\n  margin-top: 20px;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 20px;\n}\n\n.cart-controls {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.quantity {\n  min-width: 30px;\n  text-align: center;\n  font-weight: bold;\n}\n\n.shopping-app button {\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  background: #1976d2;\n  color: white;\n  margin-right: 8px;\n}\n\n.shopping-app button:disabled {\n  background: #ccc;\n  cursor: not-allowed;\n}"},"answerFiles":{"src/app/app.css":"/* ProductCard Component Styles */\n.product-card {\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  padding: 16px;\n  margin: 8px;\n  background: #f9f9f9;\n}\n\n.price {\n  font-size: 1.2em;\n  font-weight: bold;\n  color: #2e7d32;\n}\n\n.description {\n  color: #666;\n  margin: 8px 0;\n}\n\n.actions {\n  margin-top: 12px;\n}\n\n.details {\n  margin-top: 12px;\n  padding: 8px;\n  background: #e8f5e8;\n  border-radius: 4px;\n}\n\n.product-card button {\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  background: #1976d2;\n  color: white;\n  margin-right: 8px;\n}\n\n.product-card button:disabled {\n  background: #ccc;\n  cursor: not-allowed;\n}\n\n/* CartSummary Component Styles */\n.cart-summary {\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  padding: 16px;\n  background: #f0f8ff;\n}\n\n.cart-summary .actions {\n  margin-top: 12px;\n}\n\n.cart-summary button {\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  background: #1976d2;\n  color: white;\n  margin-right: 8px;\n}\n\n.cart-summary button:disabled {\n  background: #ccc;\n  cursor: not-allowed;\n}\n\n/* App Component Styles */\n.shopping-app {\n  max-width: 1000px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: Arial, sans-serif;\n}\n\n.controls {\n  margin: 20px 0;\n}\n\n.products {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n  gap: 16px;\n  margin: 20px 0;\n}\n\n.cart-section {\n  border-top: 1px solid #ddd;\n  padding-top: 20px;\n  margin-top: 20px;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 20px;\n}\n\n.cart-controls {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.quantity {\n  min-width: 30px;\n  text-align: center;\n  font-weight: bold;\n}\n\n.shopping-app button {\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  background: #1976d2;\n  color: white;\n  margin-right: 8px;\n}\n\n.shopping-app button:disabled {\n  background: #ccc;\n  cursor: not-allowed;\n}","src/app/app.ts":"import {Component, signal, computed, viewChild, ChangeDetectionStrategy} from '@angular/core';\nimport {CartSummary} from './cart-summary';\nimport {ProductCard} from './product-card';\n\n@Component({\n  selector: 'app-root',\n  imports: [ProductCard, CartSummary],\n  template: `\n    <div class=\"shopping-app\">\n      <h1>Advanced Shopping Cart</h1>\n\n      <div class=\"controls\">\n        <button (click)=\"showFirstProductDetails()\">Show First Product Details</button>\n        <button (click)=\"initiateCheckout()\">Initiate Checkout</button>\n      </div>\n\n      <div class=\"products\">\n        <product-card\n          [name]=\"'Laptop'\"\n          [price]=\"999\"\n          [description]=\"'High-performance laptop'\"\n          [available]=\"true\"\n          [productId]=\"'LAP001'\"\n          [category]=\"'Electronics'\">\n        </product-card>\n      </div>\n\n      <div class=\"cart-section\">\n        <cart-summary\n          [itemCount]=\"cartQuantity()\"\n          [total]=\"totalPrice()\">\n        </cart-summary>\n\n        <div class=\"cart-controls\">\n          <label>Quantity:</label>\n          <button (click)=\"updateQuantity(-1)\" [disabled]=\"cartQuantity() <= 0\">-</button>\n          <span class=\"quantity\">{{ cartQuantity() }}</span>\n          <button (click)=\"updateQuantity(1)\" [disabled]=\"cartQuantity() >= 10\">+</button>\n        </div>\n      </div>\n    </div>\n  `,\n  styleUrl: './app.css',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class App {\n  cartQuantity = signal(2);\n\n  // Query APIs to access child components\n  firstProduct = viewChild(ProductCard);\n  allProducts = viewChild.required(ProductCard, {read: ProductCard});\n  cartSummary = viewChild(CartSummary);\n\n  totalPrice = computed(() => {\n    return this.cartQuantity() * 999;\n  });\n\n  updateQuantity(change: number) {\n    const newQuantity = this.cartQuantity() + change;\n    if (newQuantity >= 0 && newQuantity <= 10) {\n      this.cartQuantity.set(newQuantity);\n    }\n  }\n\n  showFirstProductDetails() {\n    const product = this.firstProduct();\n    if (product) {\n      product.highlight();\n    }\n  }\n\n  initiateCheckout() {\n    const summary = this.cartSummary();\n    if (summary) {\n      summary.initiateCheckout();\n    }\n  }\n}\n","src/app/cart-summary.ts":"import {Component, input, signal, OnDestroy, ChangeDetectionStrategy} from '@angular/core';\n\n@Component({\n  selector: 'cart-summary',\n  template: `\n    <div class=\"cart-summary\" [style.background]=\"isAnimating() ? '#e8f5e8' : ''\">\n      <h3>Cart Summary {{ isAnimating() ? 'ðŸŽ‰' : '' }}</h3>\n      <p>Items: {{ itemCount() }}</p>\n      <p>Total: \\${{ total() }}</p>\n      @if (isAnimating()) {\n        <p style=\"color: green; font-weight: bold;\">Processing checkout...</p>\n      }\n    </div>\n  `,\n  styleUrl: './app.css',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CartSummary implements OnDestroy {\n  itemCount = input.required<number>();\n  total = input.required<number>();\n\n  isAnimating = signal(false);\n\n  private timeoutId?: ReturnType<typeof setTimeout>;\n\n  // Public method for parent interaction\n  initiateCheckout() {\n    this.isAnimating.set(true);\n    this.timeoutId = setTimeout(() => this.isAnimating.set(false), 2000);\n  }\n\n  ngOnDestroy() {\n    if (this.timeoutId) {\n      clearTimeout(this.timeoutId);\n    }\n  }\n}\n","src/app/product-card.ts":"import {Component, input, signal, ChangeDetectionStrategy} from '@angular/core';\n\n@Component({\n  selector: 'product-card',\n  template: `\n    <div class=\"product-card\" #cardElement>\n      <h3 #productTitle>{{ name() }}</h3>\n      <p class=\"price\">\\${{ price() }}</p>\n      <p class=\"description\">{{ description() }}</p>\n      <div class=\"actions\">\n        <button (click)=\"toggleDetails()\">\n          @if (showDetails()) {\n            Hide\n          } @else {\n            Show\n          } Details\n        </button>\n      </div>\n      @if (showDetails()) {\n        <div class=\"details\">\n          <p>Product ID: {{ productId() }}</p>\n          <p>Category: {{ category() }}</p>\n        </div>\n      }\n    </div>\n  `,\n  styleUrl: './app.css',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductCard {\n  name = input.required();\n  price = input.required<number>();\n  description = input('');\n  available = input(true);\n  productId = input('');\n  category = input('');\n\n  showDetails = signal(false);\n\n  toggleDetails() {\n    this.showDetails.set(!this.showDetails());\n  }\n\n  // Public methods for parent interaction\n  highlight() {\n    this.showDetails.set(true);\n  }\n}\n"},"hiddenFiles":["BUILD.bazel","angular.json","package-lock.json","package.json.template","tsconfig.app.json","tsconfig.json","src/favicon.ico","src/index.html","src/main.ts","src/styles.css","src/assets/angular.svg","src/app/app.config.ts","package.json","idx/dev.nix","config.json","answer/src/app/app.css","answer/src/app/app.ts","answer/src/app/cart-summary.ts","answer/src/app/product-card.ts"],"dependencies":{"@angular/common":"^20.1.0-next","@angular/compiler":"^20.1.0-next","@angular/core":"^20.1.0-next","@angular/forms":"^20.1.0-next","@angular/platform-browser":"^20.1.0-next","@angular/router":"^20.1.0-next","rxjs":"~7.8.0","tslib":"^2.3.0","zone.js":"~0.15.1","@angular/build":"^20.1.0-next","@angular/cli":"^20.1.0-next","@angular/compiler-cli":"^20.1.0-next","typescript":"~5.8.2"}}