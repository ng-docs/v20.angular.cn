{"type":"editor","openFiles":["src/app/app.ts","src/app/product-card.ts","src/app/quantity-selector.ts","src/app/app.css"],"allFiles":["BUILD.bazel","angular.json","package-lock.json","package.json.template","tsconfig.app.json","tsconfig.json","src/favicon.ico","src/index.html","src/main.ts","src/styles.css","src/assets/angular.svg","src/app/app.config.ts","package.json","idx/dev.nix","config.json","src/app/app.css","src/app/app.ts","src/app/product-card.ts","answer/src/app/app.css","answer/src/app/app.ts","answer/src/app/product-card.ts"],"tutorialFiles":{"src/app/app.ts":"// TODO: Import signal from @angular/core\nimport {Component, ChangeDetectionStrategy} from '@angular/core';\nimport {ProductCard} from './product-card';\n\n@Component({\n  selector: 'app-root',\n  imports: [ProductCard],\n  template: `\n    <div class=\"shopping-app\">\n      <h1>Input Signals Demo</h1>\n\n      <div class=\"demo-section\">\n        <h2>Signal Inputs (Parent → Child)</h2>\n        <p>Data flows down from parent to child via signal inputs:</p>\n\n        <!-- TODO: Change from static values to dynamic signal values -->\n        <product-card\n          name=\"Static Product\"\n          price=\"99\"\n          available=\"true\"\n        />\n\n        <!-- TODO: Add controls to test reactive updates -->\n        <div class=\"controls\">\n          <!-- Add buttons to update product data and toggle availability -->\n        </div>\n      </div>\n    </div>\n  `,\n  styleUrl: './app.css',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class App {\n  // TODO: Create parent signals for product data\n  // productName = signal('Demo Product');\n  // productPrice = signal(99);\n  // productAvailable = signal(true);\n  // TODO: Add methods to update parent signals\n  // updateProduct() {\n  //   this.productName.set('Updated Product');\n  //   this.productPrice.set(149);\n  // }\n  // toggleAvailability() {\n  //   this.productAvailable.set(!this.productAvailable());\n  // }\n}\n","src/app/product-card.ts":"import {Component, ChangeDetectionStrategy} from '@angular/core';\n\n// TODO: Import input from @angular/core\n\n@Component({\n  selector: 'product-card',\n  template: `\n    <div class=\"product-card\">\n      <!-- TODO: Display signal input values -->\n      <h3>Product Name</h3>\n      <p class=\"price\">$0</p>\n      <p class=\"status\">Status: Available</p>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductCard {\n  // TODO: Create signal inputs for name, price, and available\n  // name = input.required<string>();\n  // price = input.required<number>();\n  // available = input<boolean>(true);\n}\n","src/app/app.css":"/* ProductCard Component Styles */\n.product-card {\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  padding: 16px;\n  margin: 8px;\n  background: #f9f9f9;\n}\n\n.price {\n  font-size: 1.2em;\n  font-weight: bold;\n  color: #2e7d32;\n}\n\n.description {\n  color: #666;\n  margin: 8px 0;\n}\n\n.product-card button {\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  background: #1976d2;\n  color: white;\n}\n\n.status {\n  margin: 8px 0;\n}\n\n.available {\n  color: #4caf50;\n  font-weight: bold;\n}\n\n.unavailable {\n  color: #f44336;\n  font-weight: bold;\n}\n\n/* QuantitySelector Component Styles */\n.quantity-selector {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin: 8px 0;\n}\n\n.quantity {\n  min-width: 30px;\n  text-align: center;\n  font-weight: bold;\n}\n\n.quantity-selector button {\n  width: 32px;\n  height: 32px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  background: white;\n  cursor: pointer;\n}\n\n.quantity-selector button:disabled {\n  background: #f5f5f5;\n  cursor: not-allowed;\n}\n\n/* App Component Styles */\n.shopping-app {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: Arial, sans-serif;\n}\n\n.products {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 16px;\n  margin: 20px 0;\n}\n\n.cart-section {\n  border-top: 1px solid #ddd;\n  padding-top: 20px;\n  margin-top: 20px;\n}\n\n.cart-info {\n  margin: 16px 0;\n  padding: 16px;\n  background: #f0f8ff;\n  border-radius: 4px;\n}\n\n.shopping-app button {\n  margin-right: 8px;\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  background: #1976d2;\n  color: white;\n}"},"answerFiles":{"src/app/app.css":"/* ProductCard Component Styles */\n.product-card {\n  border: 1px solid #ddd;\n  border-radius: 8px;\n  padding: 16px;\n  margin: 8px;\n  background: #f9f9f9;\n}\n\n.price {\n  font-size: 1.2em;\n  font-weight: bold;\n  color: #2e7d32;\n}\n\n.description {\n  color: #666;\n  margin: 8px 0;\n}\n\n.product-card button {\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  background: #1976d2;\n  color: white;\n}\n\n.status {\n  margin: 8px 0;\n}\n\n.available {\n  color: #4caf50;\n  font-weight: bold;\n}\n\n.unavailable {\n  color: #f44336;\n  font-weight: bold;\n}\n\n/* QuantitySelector Component Styles */\n.quantity-selector {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin: 8px 0;\n}\n\n.quantity {\n  min-width: 30px;\n  text-align: center;\n  font-weight: bold;\n}\n\n.quantity-selector button {\n  width: 32px;\n  height: 32px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  background: white;\n  cursor: pointer;\n}\n\n.quantity-selector button:disabled {\n  background: #f5f5f5;\n  cursor: not-allowed;\n}\n\n/* App Component Styles */\n.shopping-app {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: Arial, sans-serif;\n}\n\n.products {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 16px;\n  margin: 20px 0;\n}\n\n.cart-section {\n  border-top: 1px solid #ddd;\n  padding-top: 20px;\n  margin-top: 20px;\n}\n\n.cart-info {\n  margin: 16px 0;\n  padding: 16px;\n  background: #f0f8ff;\n  border-radius: 4px;\n}\n\n.shopping-app button {\n  margin-right: 8px;\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  background: #1976d2;\n  color: white;\n}","src/app/app.ts":"import {Component, signal, ChangeDetectionStrategy} from '@angular/core';\nimport {ProductCard} from './product-card';\n\n@Component({\n  selector: 'app-root',\n  imports: [ProductCard],\n  template: `\n    <div class=\"shopping-app\">\n      <h1>Input Signals Demo</h1>\n\n      <div class=\"demo-section\">\n        <h2>Signal Inputs (Parent → Child)</h2>\n        <p>Data flows down from parent to child via signal inputs:</p>\n\n        <product-card\n          [name]=\"productName()\"\n          [price]=\"productPrice()\"\n          [available]=\"productAvailable()\"\n        />\n\n        <div class=\"controls\">\n          <button (click)=\"updateProduct()\">Update Product Data</button>\n          <button (click)=\"toggleAvailability()\">Toggle Availability</button>\n        </div>\n      </div>\n    </div>\n  `,\n  styleUrl: './app.css',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class App {\n  // Signal inputs data\n  productName = signal('Demo Product');\n  productPrice = signal(99);\n  productAvailable = signal(true);\n\n  updateProduct() {\n    this.productName.set(`Product ${Math.floor(Math.random() * 100)}`);\n    this.productPrice.set(Math.floor(Math.random() * 500) + 50);\n  }\n\n  toggleAvailability() {\n    this.productAvailable.set(!this.productAvailable());\n  }\n}\n","src/app/product-card.ts":"import {Component, input, ChangeDetectionStrategy} from '@angular/core';\n\n@Component({\n  selector: 'product-card',\n  template: `\n    <div class=\"product-card\">\n      <h3>{{ name() }}</h3>\n      <p class=\"price\">\\${{ price() }}</p>\n      <p class=\"status\">\n        Status: \n        @if (available()) {\n          <span class=\"available\">Available</span>\n        } @else {\n          <span class=\"unavailable\">Out of Stock</span>\n        }\n      </p>\n    </div>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ProductCard {\n  // Signal inputs - receive data from parent\n  name = input.required<string>();\n  price = input.required<number>();\n  available = input<boolean>(true);\n}\n"},"hiddenFiles":["BUILD.bazel","angular.json","package-lock.json","package.json.template","tsconfig.app.json","tsconfig.json","src/favicon.ico","src/index.html","src/main.ts","src/styles.css","src/assets/angular.svg","src/app/app.config.ts","package.json","idx/dev.nix","config.json","answer/src/app/app.css","answer/src/app/app.ts","answer/src/app/product-card.ts"],"dependencies":{"@angular/common":"^20.1.0-next","@angular/compiler":"^20.1.0-next","@angular/core":"^20.1.0-next","@angular/forms":"^20.1.0-next","@angular/platform-browser":"^20.1.0-next","@angular/router":"^20.1.0-next","rxjs":"~7.8.0","tslib":"^2.3.0","zone.js":"~0.15.1","@angular/build":"^20.1.0-next","@angular/cli":"^20.1.0-next","@angular/compiler-cli":"^20.1.0-next","typescript":"~5.8.2"}}