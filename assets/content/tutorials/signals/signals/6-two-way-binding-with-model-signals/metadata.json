{"type":"editor","openFiles":["src/app/app.ts","src/app/custom-checkbox.ts","src/app/app.css"],"allFiles":["BUILD.bazel","angular.json","package-lock.json","package.json.template","tsconfig.app.json","tsconfig.json","src/favicon.ico","src/index.html","src/main.ts","src/styles.css","src/assets/angular.svg","src/app/app.config.ts","package.json","idx/dev.nix","config.json","src/app/app.css","src/app/app.ts","src/app/custom-checkbox.ts","answer/src/app/app.css","answer/src/app/app.ts","answer/src/app/custom-checkbox.ts"],"tutorialFiles":{"src/app/app.ts":"// TODO: Import model from @angular/core\nimport {Component, ChangeDetectionStrategy} from '@angular/core';\nimport {CustomCheckbox} from './custom-checkbox';\n\n@Component({\n  selector: 'app-root',\n  imports: [CustomCheckbox],\n  template: `\n    <div class=\"shopping-app\">\n      <h1>Custom Checkbox Example</h1>\n\n      <div class=\"demo-section\">\n        <!-- TODO: Uncomment and add [(checked)] two-way binding -->\n        <!--\n        <custom-checkbox\n          ___ADD_TWO_WAY_BINDING___\n          label=\"I agree to the terms\"\n        />\n\n        <custom-checkbox\n          ___ADD_TWO_WAY_BINDING___\n          label=\"Enable notifications\"\n        />\n        -->\n\n        <div class=\"controls\">\n          <p>Terms agreed:\n            <!-- TODO: Replace with @if block using agreedToTerms() -->\n            ???\n          </p>\n          <p>Notifications:\n            <!-- TODO: Replace with @if block using enableNotifications() -->\n            ???\n          </p>\n          <!-- TODO: Add (click) handlers -->\n          <button>Toggle Terms from Parent</button>\n          <button>Reset All</button>\n        </div>\n      </div>\n    </div>\n  `,\n  styleUrl: './app.css',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class App {\n  // TODO: Add parent signal models\n  // agreedToTerms = model(false);\n  // enableNotifications = model(true);\n  // TODO: Add methods to test two-way binding\n  // toggleTermsFromParent() {\n  //   this.agreedToTerms.set(!this.agreedToTerms());\n  // }\n  // resetAll() {\n  //   this.agreedToTerms.set(false);\n  //   this.enableNotifications.set(false);\n  // }\n}\n","src/app/custom-checkbox.ts":"import {Component, ChangeDetectionStrategy} from '@angular/core';\n\n// TODO: Import model and input from @angular/core\n\n@Component({\n  selector: 'custom-checkbox',\n  template: `\n    <label class=\"custom-checkbox\">\n      <!-- TODO: Add checkbox input with [checked] binding and (change) event -->\n      <span class=\"checkmark\"></span>\n      <!-- TODO: Display label -->\n    </label>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CustomCheckbox {\n  // TODO: Add model signal for two-way binding\n  // checked = model.required<boolean>();\n  // TODO: Add optional input for label\n  // label = input<string>('');\n  // TODO: Add toggle method\n  // toggle() {\n  //   this.checked.set(!this.checked());\n  // }\n}\n","src/app/app.css":"/* CustomCheckbox Component Styles */\n.custom-checkbox {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin: 12px 0;\n  cursor: pointer;\n  user-select: none;\n}\n\n.custom-checkbox input[type='checkbox'] {\n  margin: 0;\n}\n\n.checkmark {\n  width: 18px;\n  height: 18px;\n  border: 2px solid #ddd;\n  border-radius: 3px;\n  display: inline-block;\n  position: relative;\n}\n\n.custom-checkbox input[type='checkbox']:checked + .checkmark {\n  background-color: #4caf50;\n  border-color: #4caf50;\n}\n\n.custom-checkbox input[type='checkbox']:checked + .checkmark::after {\n  content: '✓';\n  position: absolute;\n  color: white;\n  font-size: 14px;\n  top: -2px;\n  left: 2px;\n}\n\n/* App Component Styles */\n.shopping-app {\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: Arial, sans-serif;\n}\n\n.demo-section {\n  margin: 20px 0;\n  padding: 20px;\n  border: 1px solid #e0e0e0;\n  border-radius: 8px;\n  background: #fafafa;\n}\n\n.controls {\n  margin: 20px 0;\n  padding: 16px;\n  background: #f0f8ff;\n  border-radius: 8px;\n  border-left: 4px solid #007bff;\n}\n\n.controls p {\n  margin: 8px 0;\n  font-weight: bold;\n}\n\nbutton {\n  margin-right: 8px;\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  background: #1976d2;\n  color: white;\n  font-weight: bold;\n  transition: background-color 0.2s;\n}\n\nbutton:hover {\n  background: #1565c0;\n}\n"},"answerFiles":{"src/app/app.css":"/* CustomCheckbox Component Styles */\n.custom-checkbox {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin: 12px 0;\n  cursor: pointer;\n  user-select: none;\n}\n\n.custom-checkbox input[type='checkbox'] {\n  margin: 0;\n}\n\n.checkmark {\n  width: 18px;\n  height: 18px;\n  border: 2px solid #ddd;\n  border-radius: 3px;\n  display: inline-block;\n  position: relative;\n}\n\n.custom-checkbox input[type='checkbox']:checked + .checkmark {\n  background-color: #4caf50;\n  border-color: #4caf50;\n}\n\n.custom-checkbox input[type='checkbox']:checked + .checkmark::after {\n  content: '✓';\n  position: absolute;\n  color: white;\n  font-size: 14px;\n  top: -2px;\n  left: 2px;\n}\n\n/* App Component Styles */\n.shopping-app {\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: Arial, sans-serif;\n}\n\n.demo-section {\n  margin: 20px 0;\n  padding: 20px;\n  border: 1px solid #e0e0e0;\n  border-radius: 8px;\n  background: #fafafa;\n}\n\n.controls {\n  margin: 20px 0;\n  padding: 16px;\n  background: #f0f8ff;\n  border-radius: 8px;\n  border-left: 4px solid #007bff;\n}\n\n.controls p {\n  margin: 8px 0;\n  font-weight: bold;\n}\n\nbutton {\n  margin-right: 8px;\n  padding: 8px 16px;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  background: #1976d2;\n  color: white;\n  font-weight: bold;\n  transition: background-color 0.2s;\n}\n\nbutton:hover {\n  background: #1565c0;\n}\n","src/app/app.ts":"import {Component, model, ChangeDetectionStrategy} from '@angular/core';\nimport {CustomCheckbox} from './custom-checkbox';\n\n@Component({\n  selector: 'app-root',\n  imports: [CustomCheckbox],\n  template: `\n    <div class=\"shopping-app\">\n      <h1>Custom Checkbox Example</h1>\n\n\n      <div class=\"demo-section\">\n        <!-- Two-way binding with custom components -->\n        <custom-checkbox\n          [(checked)]=\"agreedToTerms\"\n          label=\"I agree to the terms\"\n        />\n\n        <custom-checkbox\n          [(checked)]=\"enableNotifications\"\n          label=\"Enable notifications\"\n        />\n\n        <!-- Controls to test two-way binding -->\n        <div class=\"controls\">\n          <p>Terms agreed:\n            @if (agreedToTerms()) {\n              Yes\n            } @else {\n              No\n            }\n          </p>\n          <p>Notifications:\n            @if (enableNotifications()) {\n              Enabled\n            } @else {\n              Disabled\n            }\n          </p>\n          <button (click)=\"toggleTermsFromParent()\">Toggle Terms from Parent</button>\n          <button (click)=\"resetAll()\">Reset All</button>\n        </div>\n      </div>\n    </div>\n  `,\n  styleUrl: './app.css',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class App {\n  // Parent signal models\n  agreedToTerms = model(false);\n  enableNotifications = model(true);\n\n  // Methods to test two-way binding\n  toggleTermsFromParent() {\n    this.agreedToTerms.set(!this.agreedToTerms());\n  }\n\n  resetAll() {\n    this.agreedToTerms.set(false);\n    this.enableNotifications.set(false);\n  }\n}\n","src/app/custom-checkbox.ts":"import {Component, model, input, ChangeDetectionStrategy} from '@angular/core';\n\n@Component({\n  selector: 'custom-checkbox',\n  template: `\n    <label class=\"custom-checkbox\">\n      <input \n        type=\"checkbox\" \n        [checked]=\"checked()\" \n        (change)=\"toggle()\">\n      <span class=\"checkmark\"></span>\n      {{ label() }}\n    </label>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CustomCheckbox {\n  // Model signal for two-way binding\n  checked = model.required<boolean>();\n\n  // Optional input for label\n  label = input<string>('');\n\n  toggle() {\n    // This updates BOTH the component's state AND the parent's model!\n    this.checked.set(!this.checked());\n  }\n}\n"},"hiddenFiles":["BUILD.bazel","angular.json","package-lock.json","package.json.template","tsconfig.app.json","tsconfig.json","src/favicon.ico","src/index.html","src/main.ts","src/styles.css","src/assets/angular.svg","src/app/app.config.ts","package.json","idx/dev.nix","config.json","answer/src/app/app.css","answer/src/app/app.ts","answer/src/app/custom-checkbox.ts"],"dependencies":{"@angular/common":"^20.1.0-next","@angular/compiler":"^20.1.0-next","@angular/core":"^20.1.0-next","@angular/forms":"^20.1.0-next","@angular/platform-browser":"^20.1.0-next","@angular/router":"^20.1.0-next","rxjs":"~7.8.0","tslib":"^2.3.0","zone.js":"~0.15.1","@angular/build":"^20.1.0-next","@angular/cli":"^20.1.0-next","@angular/compiler-cli":"^20.1.0-next","typescript":"~5.8.2"}}