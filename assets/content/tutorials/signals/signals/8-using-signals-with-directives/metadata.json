{"type":"editor","openFiles":["src/app/app.ts","src/app/highlight-directive.ts","src/app/app.css"],"allFiles":["BUILD.bazel","angular.json","package-lock.json","package.json.template","tsconfig.app.json","tsconfig.json","src/favicon.ico","src/index.html","src/main.ts","src/styles.css","src/assets/angular.svg","src/app/app.config.ts","package.json","idx/dev.nix","config.json","src/app/app.css","src/app/app.ts","src/app/highlight-directive.ts","answer/src/app/app.css","answer/src/app/app.ts","answer/src/app/highlight-directive.ts"],"tutorialFiles":{"src/app/app.ts":"import {Component, ChangeDetectionStrategy} from '@angular/core';\nimport {HighlightDirective} from './highlight-directive';\n\n@Component({\n  selector: 'app-root',\n  imports: [HighlightDirective],\n  template: `\n    <div>\n      <h1>Directive with Signals</h1>\n\n      <div highlight color=\"blue\" intensity=\"0.2\">\n        Hover me - Blue highlight\n      </div>\n\n      <div highlight color=\"green\" intensity=\"0.4\">\n        Hover me - Green highlight\n      </div>\n\n      <div highlight color=\"yellow\" intensity=\"0.6\">\n        Hover me - Yellow highlight\n      </div>\n    </div>\n  `,\n  styleUrl: './app.css',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class App {}\n","src/app/highlight-directive.ts":"import {Directive, HostBinding, HostListener} from '@angular/core';\n\n// TODO: Import input, signal, and computed from @angular/core\n\n@Directive({\n  selector: '[highlight]',\n})\nexport class HighlightDirective {\n  // TODO: Create signal input for color with default 'yellow'\n\n  // TODO: Create signal input for intensity with default 0.3\n\n  // TODO: Create internal signal for hover state (private isHovered)\n\n  // TODO: Create computed signal for background style\n\n  @HostBinding('style.backgroundColor')\n  get backgroundColor() {\n    return 'transparent'; // TODO: Use computed signal\n  }\n\n  @HostListener('mouseenter')\n  onMouseEnter() {\n    // TODO: Set isHovered to true\n  }\n\n  @HostListener('mouseleave')\n  onMouseLeave() {\n    // TODO: Set isHovered to false\n  }\n}\n","src/app/app.css":".highlight-demo {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: Arial, sans-serif;\n}\n\n.demo-section {\n  margin-bottom: 40px;\n  padding: 20px;\n  border: 1px solid #e5e7eb;\n  border-radius: 8px;\n}\n\n.card-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 20px;\n  margin: 20px 0;\n}\n\n.product-card {\n  padding: 20px;\n  border: 1px solid #e5e7eb;\n  border-radius: 8px;\n  cursor: pointer;\n}\n\n.price {\n  font-size: 1.2em;\n  font-weight: bold;\n  color: #059669;\n  margin: 8px 0;\n}\n\n.intensity {\n  font-size: 0.9em;\n  color: #6b7280;\n  font-style: italic;\n}\n\n.text-examples {\n  margin: 20px 0;\n}\n\n.text-examples p {\n  padding: 12px;\n  margin: 16px 0;\n  border-radius: 4px;\n}\n\n.text-examples button {\n  padding: 12px 24px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  background: white;\n  cursor: pointer;\n  font-size: 16px;\n  margin: 16px 8px;\n}\n\n.info-box {\n  padding: 20px;\n  border: 1px solid #d1d5db;\n  border-radius: 8px;\n  margin: 16px 0;\n}\n\n.info-box h4 {\n  margin-top: 0;\n  color: #374151;\n}\n\nh1, h2, h3 {\n  color: #111827;\n  margin-top: 0;\n}\n\np {\n  color: #6b7280;\n  line-height: 1.5;\n}"},"answerFiles":{"src/app/app.css":".highlight-demo {\n  max-width: 1200px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: Arial, sans-serif;\n}\n\n.demo-section {\n  margin-bottom: 40px;\n  padding: 20px;\n  border: 1px solid #e5e7eb;\n  border-radius: 8px;\n}\n\n.card-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 20px;\n  margin: 20px 0;\n}\n\n.product-card {\n  padding: 20px;\n  border: 1px solid #e5e7eb;\n  border-radius: 8px;\n  cursor: pointer;\n}\n\n.price {\n  font-size: 1.2em;\n  font-weight: bold;\n  color: #059669;\n  margin: 8px 0;\n}\n\n.intensity {\n  font-size: 0.9em;\n  color: #6b7280;\n  font-style: italic;\n}\n\n.text-examples {\n  margin: 20px 0;\n}\n\n.text-examples p {\n  padding: 12px;\n  margin: 16px 0;\n  border-radius: 4px;\n}\n\n.text-examples button {\n  padding: 12px 24px;\n  border: 1px solid #d1d5db;\n  border-radius: 6px;\n  background: white;\n  cursor: pointer;\n  font-size: 16px;\n  margin: 16px 8px;\n}\n\n.info-box {\n  padding: 20px;\n  border: 1px solid #d1d5db;\n  border-radius: 8px;\n  margin: 16px 0;\n}\n\n.info-box h4 {\n  margin-top: 0;\n  color: #374151;\n}\n\nh1, h2, h3 {\n  color: #111827;\n  margin-top: 0;\n}\n\np {\n  color: #6b7280;\n  line-height: 1.5;\n}","src/app/app.ts":"import {Component, ChangeDetectionStrategy} from '@angular/core';\nimport {HighlightDirective} from './highlight-directive';\n\n@Component({\n  selector: 'app-root',\n  imports: [HighlightDirective],\n  template: `\n    <div>\n      <h1>Directive with Signals</h1>\n\n      <div highlight color=\"blue\" [intensity]=\"0.2\">\n        Hover me - Blue highlight\n      </div>\n\n      <div highlight color=\"green\" [intensity]=\"0.4\">\n        Hover me - Green highlight\n      </div>\n\n      <div highlight color=\"yellow\" [intensity]=\"0.6\">\n        Hover me - Yellow highlight\n      </div>\n    </div>\n  `,\n  styleUrl: './app.css',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class App {}\n","src/app/highlight-directive.ts":"import {Directive, input, computed, signal} from '@angular/core';\n\n@Directive({\n  selector: '[highlight]',\n  host: {\n    '[style.backgroundColor]': 'backgroundStyle()',\n    '(mouseenter)': 'onMouseEnter()',\n    '(mouseleave)': 'onMouseLeave()',\n  },\n})\nexport class HighlightDirective {\n  // Signal inputs\n  color = input<string>('yellow');\n  intensity = input<number>(0.3);\n\n  // Internal signal state\n  private isHovered = signal(false);\n\n  // Computed signal for background style\n  backgroundStyle = computed(() => {\n    const baseColor = this.color();\n    const alpha = this.isHovered() ? this.intensity() : this.intensity() * 0.5;\n\n    // Simple color mapping\n    const colorMap: Record<string, string> = {\n      'yellow': `rgba(255, 255, 0, ${alpha})`,\n      'blue': `rgba(0, 100, 255, ${alpha})`,\n      'green': `rgba(0, 200, 0, ${alpha})`,\n      'red': `rgba(255, 0, 0, ${alpha})`,\n    };\n\n    return colorMap[baseColor] || colorMap['yellow'];\n  });\n\n  onMouseEnter() {\n    this.isHovered.set(true);\n  }\n\n  onMouseLeave() {\n    this.isHovered.set(false);\n  }\n}\n"},"hiddenFiles":["BUILD.bazel","angular.json","package-lock.json","package.json.template","tsconfig.app.json","tsconfig.json","src/favicon.ico","src/index.html","src/main.ts","src/styles.css","src/assets/angular.svg","src/app/app.config.ts","package.json","idx/dev.nix","config.json","answer/src/app/app.css","answer/src/app/app.ts","answer/src/app/highlight-directive.ts"],"dependencies":{"@angular/common":"^20.1.0-next","@angular/compiler":"^20.1.0-next","@angular/core":"^20.1.0-next","@angular/forms":"^20.1.0-next","@angular/platform-browser":"^20.1.0-next","@angular/router":"^20.1.0-next","rxjs":"~7.8.0","tslib":"^2.3.0","zone.js":"~0.15.1","@angular/build":"^20.1.0-next","@angular/cli":"^20.1.0-next","@angular/compiler-cli":"^20.1.0-next","typescript":"~5.8.2"}}