{
  "version": 3,
  "sources": ["src/content/examples/structural-directives/src/app/if-loaded.directive.ts", "src/content/examples/structural-directives/src/app/hero.ts", "src/content/examples/structural-directives/src/app/hero.component.ts"],
  "sourcesContent": ["import {Directive, effect, input, TemplateRef, ViewContainerRef} from '@angular/core';\n\nimport {Loaded, LoadingState} from './loading-state';\n\n@Directive({\n  selector: '[appIfLoaded]',\n})\nexport class IfLoadedDirective<T> {\n  private isViewCreated = false;\n\n  state = input.required<LoadingState<T>>({alias: 'appIfLoaded'});\n\n  constructor(\n    private readonly viewContainerRef: ViewContainerRef,\n    private readonly templateRef: TemplateRef<unknown>,\n  ) {\n    effect(() => {\n      if (!this.isViewCreated && this.state().type === 'loaded') {\n        this.viewContainerRef.createEmbeddedView(this.templateRef);\n        this.isViewCreated = true;\n      } else if (this.isViewCreated && this.state().type !== 'loaded') {\n        this.viewContainerRef.clear();\n        this.isViewCreated = false;\n      }\n    });\n  }\n\n  static ngTemplateGuard_appIfLoaded<T>(\n    dir: IfLoadedDirective<T>,\n    state: LoadingState<T>,\n  ): state is Loaded<T> {\n    return true;\n  }\n}\n", "// #docregion\nexport interface Hero {\n  id: number;\n  name: string;\n  emotion?: string;\n}\n\nexport const heroes: Hero[] = [\n  {id: 1, name: 'Dr. Nice', emotion: 'happy'},\n  {id: 2, name: 'RubberMan', emotion: 'sad'},\n  {id: 3, name: 'Windstorm', emotion: 'confused'},\n  {id: 4, name: 'Magneta'},\n];\n", "import {Component} from '@angular/core';\nimport {JsonPipe} from '@angular/common';\n\nimport {IfLoadedDirective} from './if-loaded.directive';\n\nimport {LoadingState} from './loading-state';\nimport {Hero, heroes} from './hero';\n\n@Component({\n  selector: 'app-hero',\n  template: `\n    <button (click)=\"onLoadHero()\">Load Hero</button>\n    <p *appIfLoaded=\"heroLoadingState\">{{ heroLoadingState.data | json }}</p>\n  `,\n  imports: [IfLoadedDirective, JsonPipe],\n})\nexport class HeroComponent {\n  heroLoadingState: LoadingState<Hero> = {type: 'loading'};\n\n  onLoadHero(): void {\n    this.heroLoadingState = {type: 'loaded', data: heroes[0]};\n  }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAOM,IAAO,qBAAP,MAAO,mBAAiB;EAMT;EACA;EANX,gBAAgB;EAExB,QAAQ,MAAM,SAAQ,GAAA,YAAA,CAAA,EAAA,WAAA,SAAmB,OAAO,cAAa,CAAA,IAAA,CAArB,EAAC,OAAO,cAAa,CAAC,CAAA;EAE9D,YACmB,kBACA,aAAiC;AADjC,SAAA,mBAAA;AACA,SAAA,cAAA;AAEjB,WAAO,MAAK;AACV,UAAI,CAAC,KAAK,iBAAiB,KAAK,MAAK,EAAG,SAAS,UAAU;AACzD,aAAK,iBAAiB,mBAAmB,KAAK,WAAW;AACzD,aAAK,gBAAgB;MACvB,WAAW,KAAK,iBAAiB,KAAK,MAAK,EAAG,SAAS,UAAU;AAC/D,aAAK,iBAAiB,MAAK;AAC3B,aAAK,gBAAgB;MACvB;IACF,CAAC;EACH;EAEA,OAAO,4BACL,KACA,OAAsB;AAEtB,WAAO;EACT;;AAzB4B;cAAjB;mCAAA,oBAAiB,4BAAA,gBAAA,GAAA,4BAAA,WAAA,CAAA;AAAA;cAAjB,qFAAA,oBAAiB,WAAA,CAAA,CAAA,IAAA,eAAA,EAAA,CAAA,GAAA,QAAA,EAAA,OAAA,CAAA,GAAA,eAAA,OAAA,EAAA,EAAA,CAAA;AAAxB,IAAO,oBAAP;;sEAAO,mBAAiB,CAAA;UAH7B;WAAU;MACT,UAAU;KACX;;;;;ACCM,IAAM,SAAiB;EAC5B,EAAC,IAAI,GAAG,MAAM,YAAY,SAAS,QAAO;EAC1C,EAAC,IAAI,GAAG,MAAM,aAAa,SAAS,MAAK;EACzC,EAAC,IAAI,GAAG,MAAM,aAAa,SAAS,WAAU;EAC9C,EAAC,IAAI,GAAG,MAAM,UAAS;;;;;;ACCrB,IAAA,yBAAA,GAAA,GAAA;AAAmC,IAAA,iBAAA,CAAA;;AAAkC,IAAA,uBAAA;;;;AAAlC,IAAA,oBAAA;AAAA,IAAA,4BAAA,sBAAA,GAAA,GAAA,OAAA,iBAAA,IAAA,CAAA;;;;AAIjC,IAAO,iBAAP,MAAO,eAAa;EACxB,mBAAuC,EAAC,MAAM,UAAS;EAEvD,aAAU;AACR,SAAK,mBAAmB,EAAC,MAAM,UAAU,MAAM,OAAO,CAAC,EAAC;EAC1D;;AALwB;cAAb;mCAAA,gBAAa;AAAA;cAAb,iFAAA,gBAAa,WAAA,CAAA,CAAA,UAAA,CAAA,GAAA,OAAA,GAAA,MAAA,GAAA,QAAA,CAAA,CAAA,GAAA,OAAA,GAAA,CAAA,GAAA,aAAA,CAAA,GAAA,UAAA,gCAAA,uBAAA,IAAA,KAAA;AAAA,MAAA,KAAA,GAAA;AALtB,IAAA,yBAAA,GAAA,UAAA,CAAA;AAAQ,IAAA,qBAAA,SAAA,gCAAA,iDAAA;AAAA,aAAS,IAAA,WAAA;IAAY,GAArB,iDAAqB;AAAE,IAAA,iBAAA,GAAA,WAAA;AAAS,IAAA,uBAAA;AACxC,IAAA,qBAAA,GAAA,4BAAA,GAAA,GAAA,KAAA,CAAA;;;AAAI,IAAA,oBAAA,CAAA;AAAA,IAAA,qBAAA,eAAA,IAAA,gBAAA;;GAIkB,0CAFd,mBAAmB,QAAQ,GAAA,eAAA,EAAA,CAAA;AAEjC,IAAO,gBAAP;;sEAAO,eAAa,CAAA;UARzB;WAAU;MACT,UAAU;MACV,UAAU;;;;MAIV,SAAS,CAAC,mBAAmB,QAAQ;KACtC;;;;6EACY,eAAa,EAAA,WAAA,iBAAA,UAAA,wEAAA,YAAA,GAAA,CAAA;AAAA,GAAA;",
  "names": []
}
