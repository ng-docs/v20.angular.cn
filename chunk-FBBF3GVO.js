import {
  PAGE_PREFIX
} from "./chunk-XUJDBDVC.js";
import {
  contentResolver
} from "./chunk-FSDA2DZH.js";
import {
  __name,
  __spreadValues
} from "./chunk-2CX5BJWG.js";

// src/assets/api/manifest.json
var manifest_default = [{ moduleName: "@angular/animations", normalizedModuleName: "angular_animations", moduleLabel: "@angular/animations", entries: [{ name: "animate", type: "function", deprecated: { version: "20.2" }, stable: {} }, { name: "animateChild", type: "function", deprecated: { version: "20.2" }, stable: {} }, { name: "AnimateChildOptions", type: "interface", deprecated: { version: "20.2" }, stable: {} }, { name: "AnimateTimings", type: "type_alias", deprecated: { version: "20.2" }, stable: {} }, { name: "animation", type: "function", deprecated: { version: "20.2" }, stable: {} }, { name: "AnimationAnimateChildMetadata", type: "interface", deprecated: { version: "20.2" }, stable: {} }, { name: "AnimationAnimateMetadata", type: "interface", deprecated: { version: "20.2" }, stable: {} }, { name: "AnimationAnimateRefMetadata", type: "interface", deprecated: { version: "20.2" }, stable: {} }, { name: "AnimationBuilder", type: "undecorated_class", deprecated: { version: "20.2" }, stable: {} }, { name: "AnimationEvent", type: "interface", deprecated: { version: "20.2" }, stable: {} }, { name: "AnimationFactory", type: "undecorated_class", deprecated: { version: "20.2" }, stable: {} }, { name: "AnimationGroupMetadata", type: "interface", deprecated: { version: "20.2" }, stable: {} }, { name: "AnimationKeyframesSequenceMetadata", type: "interface", deprecated: { version: "20.2" }, stable: {} }, { name: "AnimationMetadata", type: "interface", deprecated: { version: "20.2" }, stable: {} }, { name: "AnimationMetadataType", type: "enum", deprecated: { version: "20.2" }, stable: {} }, { name: "AnimationOptions", type: "interface", deprecated: { version: "20.2" }, stable: {} }, { name: "AnimationPlayer", type: "interface", deprecated: { version: "20.2" }, stable: {} }, { name: "AnimationQueryMetadata", type: "interface", deprecated: { version: "20.2" }, stable: {} }, { name: "AnimationQueryOptions", type: "interface", deprecated: { version: "20.2" }, stable: {} }, { name: "AnimationReferenceMetadata", type: "interface", deprecated: { version: "20.2" }, stable: {} }, { name: "AnimationSequenceMetadata", type: "interface", deprecated: { version: "20.2" }, stable: {} }, { name: "AnimationStaggerMetadata", type: "interface", deprecated: { version: "20.2" }, stable: {} }, { name: "AnimationStateMetadata", type: "interface", deprecated: { version: "20.2" }, stable: {} }, { name: "AnimationStyleMetadata", type: "interface", deprecated: { version: "20.2" }, stable: {} }, { name: "AnimationTransitionMetadata", type: "interface", deprecated: { version: "20.2" }, stable: {} }, { name: "AnimationTriggerMetadata", type: "interface", deprecated: { version: "20.2" }, stable: {} }, { name: "AUTO_STYLE", type: "constant", deprecated: { version: "20.2" }, stable: {} }, { name: "group", type: "function", deprecated: { version: "20.2" }, stable: {} }, { name: "keyframes", type: "function", deprecated: { version: "20.2" }, stable: {} }, { name: "NoopAnimationPlayer", type: "undecorated_class", deprecated: { version: "20.2" }, stable: {} }, { name: "query", type: "function", deprecated: { version: "20.2" }, stable: {} }, { name: "sequence", type: "function", deprecated: { version: "20.2" }, stable: {} }, { name: "stagger", type: "function", deprecated: { version: "20.2" }, stable: {} }, { name: "state", type: "function", deprecated: { version: "20.2" }, stable: {} }, { name: "style", type: "function", deprecated: { version: "20.2" }, stable: {} }, { name: "transition", type: "function", deprecated: { version: "20.2" }, stable: {} }, { name: "trigger", type: "function", deprecated: { version: "20.2" }, stable: {} }, { name: "useAnimation", type: "function", deprecated: { version: "20.2" }, stable: {} }] }, { moduleName: "@angular/animations/browser", normalizedModuleName: "angular_animations_browser", moduleLabel: "@angular/animations/browser", entries: [{ name: "AnimationDriver", type: "undecorated_class", deprecated: { version: "20.2" }, stable: {} }, { name: "NoopAnimationDriver", type: "undecorated_class", deprecated: { version: "20.2" }, stable: {} }] }, { moduleName: "@angular/animations/browser/testing", normalizedModuleName: "angular_animations_browser_testing", moduleLabel: "@angular/animations/browser/testing", entries: [{ name: "MockAnimationDriver", type: "undecorated_class", deprecated: { version: "20.2" }, stable: {} }, { name: "MockAnimationPlayer", type: "undecorated_class", deprecated: { version: "20.2" }, stable: {} }] }, { moduleName: "@angular/cdk/drag-drop", normalizedModuleName: "angular_cdk_drag-drop", moduleLabel: "@angular/cdk/drag-drop", entries: [{ name: "CDK_DRAG_CONFIG", type: "constant" }, { name: "CDK_DRAG_HANDLE", type: "constant" }, { name: "CDK_DRAG_PLACEHOLDER", type: "constant" }, { name: "CDK_DRAG_PREVIEW", type: "constant" }, { name: "CDK_DROP_LIST", type: "constant" }, { name: "CDK_DROP_LIST_GROUP", type: "constant" }, { name: "CdkDrag", type: "undecorated_class" }, { name: "CdkDragDrop", type: "interface" }, { name: "CdkDragEnd", type: "interface" }, { name: "CdkDragEnter", type: "interface" }, { name: "CdkDragExit", type: "interface" }, { name: "CdkDragHandle", type: "undecorated_class" }, { name: "CdkDragMove", type: "interface" }, { name: "CdkDragPlaceholder", type: "directive" }, { name: "CdkDragPreview", type: "undecorated_class" }, { name: "CdkDragRelease", type: "interface" }, { name: "CdkDragSortEvent", type: "interface" }, { name: "CdkDragStart", type: "interface" }, { name: "CdkDropList", type: "undecorated_class" }, { name: "CdkDropListGroup", type: "undecorated_class" }, { name: "copyArrayItem", type: "function" }, { name: "DragAxis", type: "type_alias" }, { name: "DragConstrainPosition", type: "type_alias" }, { name: "DragDrop", type: "undecorated_class" }, { name: "DragDropConfig", type: "interface" }, { name: "DragDropModule", type: "undecorated_class" }, { name: "DragRef", type: "undecorated_class" }, { name: "DragRefConfig", type: "interface" }, { name: "DragStartDelay", type: "type_alias" }, { name: "DropListOrientation", type: "type_alias" }, { name: "DropListRef", type: "undecorated_class" }, { name: "moveItemInArray", type: "function" }, { name: "Point", type: "interface" }, { name: "PreviewContainer", type: "type_alias" }, { name: "transferArrayItem", type: "function" }] }, { moduleName: "@angular/cdk/testing", normalizedModuleName: "angular_cdk_testing", moduleLabel: "@angular/cdk/testing", entries: [{ name: "AsyncOptionPredicate", type: "type_alias" }, { name: "AsyncPredicate", type: "type_alias" }, { name: "AutoChangeDetectionStatus", type: "interface" }, { name: "BaseHarnessFilters", type: "interface" }, { name: "ComponentHarness", type: "undecorated_class" }, { name: "ComponentHarnessConstructor", type: "interface" }, { name: "ContentContainerComponentHarness", type: "undecorated_class" }, { name: "ElementDimensions", type: "interface" }, { name: "EventData", type: "type_alias" }, { name: "handleAutoChangeDetectionStatus", type: "function" }, { name: "HarnessEnvironment", type: "undecorated_class" }, { name: "HarnessLoader", type: "interface" }, { name: "HarnessPredicate", type: "undecorated_class" }, { name: "HarnessQuery", type: "type_alias" }, { name: "LocatorFactory", type: "interface" }, { name: "LocatorFnResult", type: "type_alias" }, { name: "manualChangeDetection", type: "function" }, { name: "ModifierKeys", type: "interface" }, { name: "parallel", type: "function" }, { name: "stopHandlingAutoChangeDetectionStatus", type: "function" }, { name: "TestElement", type: "interface" }, { name: "TestKey", type: "enum" }, { name: "TextOptions", type: "interface" }] }, { moduleName: "@angular/cdk/testing/protractor", normalizedModuleName: "angular_cdk_testing_protractor", moduleLabel: "@angular/cdk/testing/protractor", entries: [{ name: "ProtractorElement", type: "undecorated_class", deprecated: {} }, { name: "ProtractorHarnessEnvironment", type: "undecorated_class", deprecated: { version: "13.0" } }, { name: "ProtractorHarnessEnvironmentOptions", type: "interface", deprecated: {} }] }, { moduleName: "@angular/cdk/testing/selenium-webdriver", normalizedModuleName: "angular_cdk_testing_selenium-webdriver", moduleLabel: "@angular/cdk/testing/selenium-webdriver", entries: [{ name: "SeleniumWebDriverElement", type: "undecorated_class" }, { name: "SeleniumWebDriverHarnessEnvironment", type: "undecorated_class" }, { name: "waitForAngularReady", type: "function" }, { name: "WebDriverHarnessEnvironmentOptions", type: "interface" }] }, { moduleName: "@angular/cdk/testing/testbed", normalizedModuleName: "angular_cdk_testing_testbed", moduleLabel: "@angular/cdk/testing/testbed", entries: [{ name: "TestbedHarnessEnvironment", type: "undecorated_class" }, { name: "TestbedHarnessEnvironmentOptions", type: "interface" }, { name: "UnitTestElement", type: "undecorated_class" }] }, { moduleName: "@angular/common", normalizedModuleName: "angular_common", moduleLabel: "@angular/common", entries: [{ name: "APP_BASE_HREF", type: "constant", stable: {} }, { name: "AsyncPipe", type: "pipe", stable: {} }, { name: "BrowserPlatformLocation", type: "undecorated_class", stable: {} }, { name: "CommonModule", type: "ng_module", stable: {} }, { name: "CurrencyPipe", type: "pipe", stable: {} }, { name: "DATE_PIPE_DEFAULT_OPTIONS", type: "constant" }, { name: "DATE_PIPE_DEFAULT_TIMEZONE", type: "constant", deprecated: {} }, { name: "DatePipe", type: "pipe", stable: {} }, { name: "DatePipeConfig", type: "interface", stable: {} }, { name: "DecimalPipe", type: "pipe", stable: {} }, { name: "DOCUMENT", type: "constant", stable: {} }, { name: "formatCurrency", type: "function", stable: {} }, { name: "formatDate", type: "function", stable: {} }, { name: "formatNumber", type: "function", stable: {} }, { name: "formatPercent", type: "function", stable: {} }, { name: "FormatWidth", type: "enum", deprecated: { version: "18.0" }, stable: {} }, { name: "FormStyle", type: "enum", deprecated: {}, stable: {} }, { name: "getCurrencySymbol", type: "function", deprecated: { version: "18" }, stable: {} }, { name: "getLocaleCurrencyCode", type: "function", deprecated: { version: "4217" }, stable: {} }, { name: "getLocaleCurrencyName", type: "function", deprecated: {}, stable: {} }, { name: "getLocaleCurrencySymbol", type: "function", deprecated: {}, stable: {} }, { name: "getLocaleDateFormat", type: "function", deprecated: { version: "18" }, stable: {} }, { name: "getLocaleDateTimeFormat", type: "function", deprecated: { version: "18" }, stable: {} }, { name: "getLocaleDayNames", type: "function", deprecated: { version: "18" }, stable: {} }, { name: "getLocaleDayPeriods", type: "function", deprecated: { version: "18" }, stable: {} }, { name: "getLocaleDirection", type: "function", deprecated: { version: "18" }, stable: {} }, { name: "getLocaleEraNames", type: "function", deprecated: { version: "18" }, stable: {} }, { name: "getLocaleExtraDayPeriodRules", type: "function", deprecated: { version: "18" }, stable: {} }, { name: "getLocaleExtraDayPeriods", type: "function", deprecated: { version: "18" }, stable: {} }, { name: "getLocaleFirstDayOfWeek", type: "function", deprecated: { version: "18" }, stable: {} }, { name: "getLocaleId", type: "function", deprecated: { version: "18" }, stable: {} }, { name: "getLocaleMonthNames", type: "function", deprecated: { version: "18" }, stable: {} }, { name: "getLocaleNumberFormat", type: "function", deprecated: { version: "18" }, stable: {} }, { name: "getLocaleNumberSymbol", type: "function", deprecated: { version: "18" }, stable: {} }, { name: "getLocalePluralCase", type: "constant", deprecated: { version: "18" }, stable: {} }, { name: "getLocaleTimeFormat", type: "function", deprecated: { version: "18" }, stable: {} }, { name: "getLocaleWeekEndRange", type: "function", deprecated: { version: "18" }, stable: {} }, { name: "getNumberOfCurrencyDigits", type: "function", deprecated: { version: "18" }, stable: {} }, { name: "HashLocationStrategy", type: "undecorated_class", stable: {} }, { name: "I18nPluralPipe", type: "pipe", stable: {} }, { name: "I18nSelectPipe", type: "pipe", stable: {} }, { name: "IMAGE_CONFIG", type: "constant", stable: {} }, { name: "IMAGE_LOADER", type: "constant", stable: {} }, { name: "ImageConfig", type: "type_alias", stable: {} }, { name: "ImageLoader", type: "type_alias", stable: {} }, { name: "ImageLoaderConfig", type: "interface", stable: {} }, { name: "ImagePlaceholderConfig", type: "interface", stable: {} }, { name: "isPlatformBrowser", type: "function", stable: {} }, { name: "isPlatformServer", type: "function", stable: {} }, { name: "JsonPipe", type: "pipe", stable: {} }, { name: "KeyValue", type: "interface", stable: {} }, { name: "KeyValuePipe", type: "pipe", stable: {} }, { name: "Location", type: "undecorated_class", stable: {} }, { name: "LOCATION_INITIALIZED", type: "constant", stable: {} }, { name: "LocationChangeEvent", type: "interface", stable: {} }, { name: "LocationChangeListener", type: "interface", stable: {} }, { name: "LocationStrategy", type: "undecorated_class", stable: {} }, { name: "LowerCasePipe", type: "pipe", stable: {} }, { name: "NgClass", type: "directive", stable: {} }, { name: "NgComponentOutlet", type: "directive", stable: {} }, { name: "NgFor", type: "directive", deprecated: { version: "20.0" }, stable: {} }, { name: "NgForOf", type: "directive", deprecated: { version: "20.0" }, stable: {} }, { name: "NgForOfContext", type: "undecorated_class", deprecated: { version: "20.0" }, stable: {} }, { name: "NgIf", type: "directive", deprecated: { version: "20.0" }, stable: {} }, { name: "NgIfContext", type: "undecorated_class", deprecated: { version: "20.0" }, stable: {} }, { name: "NgLocaleLocalization", type: "undecorated_class", stable: {} }, { name: "NgLocalization", type: "undecorated_class", stable: {} }, { name: "NgOptimizedImage", type: "directive", stable: {} }, { name: "NgPlural", type: "directive", stable: {} }, { name: "NgPluralCase", type: "directive", stable: {} }, { name: "NgStyle", type: "directive", stable: {} }, { name: "NgSwitch", type: "directive", deprecated: { version: "20.0" }, stable: {} }, { name: "NgSwitchCase", type: "directive", deprecated: { version: "20.0" }, stable: {} }, { name: "NgSwitchDefault", type: "directive", deprecated: { version: "20.0" }, stable: {} }, { name: "NgTemplateOutlet", type: "directive", stable: {} }, { name: "NumberFormatStyle", type: "enum", deprecated: {}, stable: {} }, { name: "NumberSymbol", type: "enum", deprecated: {}, stable: {} }, { name: "PathLocationStrategy", type: "undecorated_class", stable: {} }, { name: "PercentPipe", type: "pipe", stable: {} }, { name: "PlatformLocation", type: "undecorated_class", stable: {} }, { name: "Plural", type: "enum", deprecated: {}, stable: {} }, { name: "PopStateEvent", type: "interface", stable: {} }, { name: "PRECONNECT_CHECK_BLOCKLIST", type: "constant", stable: {} }, { name: "provideCloudflareLoader", type: "constant", stable: {} }, { name: "provideCloudinaryLoader", type: "constant", stable: {} }, { name: "provideImageKitLoader", type: "constant", stable: {} }, { name: "provideImgixLoader", type: "constant", stable: {} }, { name: "provideNetlifyLoader", type: "function", stable: {} }, { name: "registerLocaleData", type: "function", stable: {} }, { name: "SlicePipe", type: "pipe", stable: {} }, { name: "Time", type: "type_alias", deprecated: {}, stable: {} }, { name: "TitleCasePipe", type: "pipe", stable: {} }, { name: "TranslationWidth", type: "enum", deprecated: {}, stable: {} }, { name: "UpperCasePipe", type: "pipe", stable: {} }, { name: "VERSION", type: "constant", stable: {} }, { name: "ViewportScroller", type: "undecorated_class", stable: {} }, { name: "WeekDay", type: "enum", deprecated: {}, stable: {} }, { name: "XhrFactory", type: "undecorated_class", stable: {} }] }, { moduleName: "@angular/common/http", normalizedModuleName: "angular_common_http", moduleLabel: "@angular/common/http", entries: [{ name: "FetchBackend", type: "undecorated_class", stable: {} }, { name: "HTTP_INTERCEPTORS", type: "constant", stable: {} }, { name: "HTTP_TRANSFER_CACHE_ORIGIN_MAP", type: "constant", stable: {} }, { name: "HttpBackend", type: "undecorated_class", stable: {} }, { name: "HttpClient", type: "undecorated_class", stable: {} }, { name: "HttpClientJsonpModule", type: "ng_module", deprecated: {}, stable: {} }, { name: "HttpClientModule", type: "ng_module", deprecated: {}, stable: {} }, { name: "HttpClientXsrfModule", type: "ng_module", deprecated: {}, stable: {} }, { name: "HttpContext", type: "undecorated_class", stable: {} }, { name: "HttpContextToken", type: "undecorated_class", stable: {} }, { name: "HttpDownloadProgressEvent", type: "interface", stable: {} }, { name: "HttpErrorResponse", type: "undecorated_class", stable: {} }, { name: "HttpEvent", type: "type_alias", stable: {} }, { name: "HttpEventType", type: "enum", stable: {} }, { name: "HttpFeature", type: "interface", stable: {} }, { name: "HttpFeatureKind", type: "enum", stable: {} }, { name: "HttpHandler", type: "undecorated_class", stable: {} }, { name: "HttpHandlerFn", type: "type_alias", stable: {} }, { name: "HttpHeaderResponse", type: "undecorated_class", stable: {} }, { name: "HttpHeaders", type: "undecorated_class", stable: {} }, { name: "HttpInterceptor", type: "interface", stable: {} }, { name: "HttpInterceptorFn", type: "type_alias" }, { name: "HttpParameterCodec", type: "interface", stable: {} }, { name: "HttpParams", type: "undecorated_class", stable: {} }, { name: "HttpParamsOptions", type: "interface", stable: {} }, { name: "HttpProgressEvent", type: "interface", stable: {} }, { name: "HttpRequest", type: "undecorated_class", stable: {} }, { name: "httpResource", type: "initializer_api_function", experimental: { version: "19.2" } }, { name: "HttpResourceFn", type: "interface", experimental: { version: "19.2" } }, { name: "HttpResourceOptions", type: "interface", experimental: { version: "19.2" } }, { name: "HttpResourceRef", type: "interface", experimental: { version: "19.2" } }, { name: "HttpResourceRequest", type: "interface", experimental: { version: "19.2" } }, { name: "HttpResponse", type: "undecorated_class", stable: {} }, { name: "HttpResponseBase", type: "undecorated_class", stable: {} }, { name: "HttpSentEvent", type: "interface", stable: {} }, { name: "HttpStatusCode", type: "enum", stable: {} }, { name: "HttpTransferCacheOptions", type: "type_alias", stable: {} }, { name: "HttpUploadProgressEvent", type: "interface", stable: {} }, { name: "HttpUrlEncodingCodec", type: "undecorated_class", stable: {} }, { name: "HttpUserEvent", type: "interface", stable: {} }, { name: "HttpXhrBackend", type: "undecorated_class", stable: {} }, { name: "HttpXsrfTokenExtractor", type: "undecorated_class", stable: {} }, { name: "JsonpClientBackend", type: "undecorated_class", stable: {} }, { name: "JsonpInterceptor", type: "undecorated_class", stable: {} }, { name: "provideHttpClient", type: "function" }, { name: "withFetch", type: "function", stable: {} }, { name: "withInterceptors", type: "function", stable: {} }, { name: "withInterceptorsFromDi", type: "function" }, { name: "withJsonpSupport", type: "function" }, { name: "withNoXsrfProtection", type: "function" }, { name: "withRequestsMadeViaParent", type: "function", stable: { version: "19.0" } }, { name: "withXsrfConfiguration", type: "function" }] }, { moduleName: "@angular/common/http/testing", normalizedModuleName: "angular_common_http_testing", moduleLabel: "@angular/common/http/testing", entries: [{ name: "HttpClientTestingModule", type: "ng_module", deprecated: {}, stable: {} }, { name: "HttpTestingController", type: "undecorated_class", stable: {} }, { name: "provideHttpClientTesting", type: "function" }, { name: "RequestMatch", type: "interface", stable: {} }, { name: "TestRequest", type: "undecorated_class", stable: {} }] }, { moduleName: "@angular/common/testing", normalizedModuleName: "angular_common_testing", moduleLabel: "@angular/common/testing", entries: [{ name: "MOCK_PLATFORM_LOCATION_CONFIG", type: "constant", stable: {} }, { name: "MockLocationStrategy", type: "undecorated_class", stable: {} }, { name: "MockPlatformLocation", type: "undecorated_class", stable: {} }, { name: "MockPlatformLocationConfig", type: "interface", stable: {} }, { name: "provideLocationMocks", type: "function", stable: {} }, { name: "SpyLocation", type: "undecorated_class", stable: {} }] }, { moduleName: "@angular/common/upgrade", normalizedModuleName: "angular_common_upgrade", moduleLabel: "@angular/common/upgrade", entries: [{ name: "$locationShim", type: "undecorated_class", stable: {} }, { name: "$locationShimProvider", type: "undecorated_class", stable: {} }, { name: "AngularJSUrlCodec", type: "undecorated_class", stable: {} }, { name: "LOCATION_UPGRADE_CONFIGURATION", type: "constant", stable: {} }, { name: "LocationUpgradeConfig", type: "interface", stable: {} }, { name: "LocationUpgradeModule", type: "ng_module", stable: {} }, { name: "UrlCodec", type: "undecorated_class", stable: {} }] }, { moduleName: "@angular/core", normalizedModuleName: "angular_core", moduleLabel: "@angular/core", entries: [{ name: "@defer", type: "block" }, { name: "@for", type: "block" }, { name: "@if", type: "block" }, { name: "@let", type: "block" }, { name: "@switch", type: "block" }, { name: "AbstractType", type: "interface", stable: {} }, { name: "AfterContentChecked", type: "interface", stable: {} }, { name: "AfterContentInit", type: "interface", stable: {} }, { name: "afterEveryRender", type: "function", stable: { version: "20.0" } }, { name: "afterNextRender", type: "function", stable: { version: "20.0" } }, { name: "afterRenderEffect", type: "function", stable: {} }, { name: "AfterRenderOptions", type: "interface", stable: { version: "20.0" } }, { name: "AfterRenderRef", type: "interface", stable: {} }, { name: "AfterViewChecked", type: "interface", stable: {} }, { name: "AfterViewInit", type: "interface", stable: {} }, { name: "ANIMATION_MODULE_TYPE", type: "constant", stable: {} }, { name: "AnimationCallbackEvent", type: "type_alias", stable: { version: "20.2" } }, { name: "AnimationFunction", type: "type_alias", stable: { version: "20.2" } }, { name: "APP_BOOTSTRAP_LISTENER", type: "constant", stable: {} }, { name: "APP_ID", type: "constant", stable: {} }, { name: "APP_INITIALIZER", type: "constant", deprecated: { version: "19.0" }, stable: {} }, { name: "ApplicationConfig", type: "interface", stable: {} }, { name: "ApplicationInitStatus", type: "undecorated_class", stable: {} }, { name: "ApplicationModule", type: "ng_module", stable: {} }, { name: "ApplicationRef", type: "undecorated_class", stable: {} }, { name: "asNativeElements", type: "function", stable: {} }, { name: "assertInInjectionContext", type: "function", stable: {} }, { name: "assertNotInReactiveContext", type: "function", stable: {} }, { name: "assertPlatform", type: "function", stable: {} }, { name: "Attribute", type: "decorator" }, { name: "BaseResourceOptions", type: "interface", experimental: {} }, { name: "Binding", type: "interface" }, { name: "booleanAttribute", type: "function", stable: {} }, { name: "BootstrapOptions", type: "interface", deprecated: { version: "20.2" }, stable: {} }, { name: "ChangeDetectionStrategy", type: "enum", stable: {} }, { name: "ChangeDetectorRef", type: "undecorated_class", stable: {} }, { name: "ClassProvider", type: "interface", stable: {} }, { name: "ClassSansProvider", type: "interface", stable: {} }, { name: "Compiler", type: "undecorated_class", deprecated: {}, stable: {} }, { name: "COMPILER_OPTIONS", type: "constant", stable: {} }, { name: "CompilerFactory", type: "undecorated_class", deprecated: {}, stable: {} }, { name: "CompilerOptions", type: "type_alias", stable: {} }, { name: "Component", type: "decorator" }, { name: "ComponentFactory", type: "undecorated_class", deprecated: {}, stable: {} }, { name: "ComponentFactoryResolver", type: "undecorated_class", deprecated: {}, stable: {} }, { name: "ComponentMirror", type: "interface", stable: {} }, { name: "ComponentRef", type: "undecorated_class", stable: {} }, { name: "computed", type: "function" }, { name: "ConstructorProvider", type: "interface", stable: {} }, { name: "ConstructorSansProvider", type: "interface", stable: {} }, { name: "contentChild", type: "initializer_api_function", stable: { version: "19.0" } }, { name: "ContentChild", type: "decorator" }, { name: "contentChildren", type: "initializer_api_function", stable: { version: "19.0" } }, { name: "ContentChildren", type: "decorator" }, { name: "createComponent", type: "function", stable: {} }, { name: "CreateComputedOptions", type: "interface" }, { name: "CreateEffectOptions", type: "interface", stable: { version: "20.0" } }, { name: "createEnvironmentInjector", type: "function", stable: {} }, { name: "createNgModule", type: "function", stable: {} }, { name: "createNgModuleRef", type: "constant", deprecated: {} }, { name: "createPlatform", type: "function", stable: {} }, { name: "createPlatformFactory", type: "function", stable: {} }, { name: "CreateSignalOptions", type: "interface" }, { name: "CSP_NONCE", type: "constant", stable: {} }, { name: "CUSTOM_ELEMENTS_SCHEMA", type: "constant", stable: {} }, { name: "DebugElement", type: "undecorated_class", stable: {} }, { name: "DebugEventListener", type: "undecorated_class", stable: {} }, { name: "DebugNode", type: "undecorated_class", stable: {} }, { name: "DEFAULT_CURRENCY_CODE", type: "constant", stable: {} }, { name: "DefaultIterableDiffer", type: "undecorated_class", deprecated: { version: "4.0" }, stable: {} }, { name: "defineInjectable", type: "constant", deprecated: { version: "8" }, stable: {} }, { name: "DestroyableInjector", type: "interface", stable: {} }, { name: "destroyPlatform", type: "function", stable: {} }, { name: "DestroyRef", type: "undecorated_class", stable: {} }, { name: "Directive", type: "decorator" }, { name: "DoBootstrap", type: "interface", stable: {} }, { name: "DoCheck", type: "interface", stable: {} }, { name: "DOCUMENT", type: "constant", stable: {} }, { name: "effect", type: "function", stable: { version: "20.0" } }, { name: "EffectCleanupFn", type: "type_alias", stable: { version: "20.0" } }, { name: "EffectCleanupRegisterFn", type: "type_alias", stable: { version: "20.0" } }, { name: "EffectRef", type: "interface", stable: { version: "20.0" } }, { name: "ElementRef", type: "undecorated_class", stable: {} }, { name: "EmbeddedViewRef", type: "undecorated_class", stable: {} }, { name: "enableProdMode", type: "function", stable: {} }, { name: "enableProfiling", type: "function", experimental: {} }, { name: "ENVIRONMENT_INITIALIZER", type: "constant", deprecated: { version: "19.0" }, stable: {} }, { name: "EnvironmentInjector", type: "undecorated_class", stable: {} }, { name: "EnvironmentProviders", type: "type_alias", stable: {} }, { name: "ErrorHandler", type: "undecorated_class", stable: {} }, { name: "EventEmitter", type: "constant", stable: {} }, { name: "ExistingProvider", type: "interface", stable: {} }, { name: "ExistingSansProvider", type: "interface", stable: {} }, { name: "FactoryProvider", type: "interface", stable: {} }, { name: "FactorySansProvider", type: "interface", stable: {} }, { name: "forwardRef", type: "function", stable: {} }, { name: "ForwardRefFn", type: "interface", stable: {} }, { name: "getDebugNode", type: "function", stable: {} }, { name: "getModuleFactory", type: "function", deprecated: {}, stable: {} }, { name: "getNgModuleById", type: "function", stable: {} }, { name: "getPlatform", type: "function", stable: {} }, { name: "GetTestability", type: "interface", stable: {} }, { name: "Host", type: "decorator" }, { name: "HOST_TAG_NAME", type: "constant", stable: {} }, { name: "HostAttributeToken", type: "undecorated_class", stable: {} }, { name: "HostBinding", type: "decorator" }, { name: "HostListener", type: "decorator" }, { name: "ImportedNgModuleProviders", type: "type_alias", deprecated: {}, stable: {} }, { name: "importProvidersFrom", type: "function", stable: {} }, { name: "ImportProvidersSource", type: "type_alias", stable: {} }, { name: "inject", type: "function", stable: {} }, { name: "Inject", type: "decorator" }, { name: "Injectable", type: "decorator" }, { name: "InjectableProvider", type: "type_alias", stable: {} }, { name: "InjectableType", type: "interface", stable: {} }, { name: "InjectionToken", type: "undecorated_class", stable: {} }, { name: "InjectOptions", type: "interface", stable: {} }, { name: "Injector", type: "undecorated_class", stable: {} }, { name: "INJECTOR", type: "constant", stable: {} }, { name: "InjectorType", type: "interface", stable: {} }, { name: "input", type: "initializer_api_function" }, { name: "Input", type: "decorator" }, { name: "inputBinding", type: "function" }, { name: "InputOptions", type: "interface" }, { name: "InputOptionsWithoutTransform", type: "type_alias", stable: { version: "19.0" } }, { name: "InputOptionsWithTransform", type: "type_alias" }, { name: "InputSignal", type: "interface", stable: { version: "19.0" } }, { name: "InputSignalWithTransform", type: "interface", stable: { version: "19.0" } }, { name: "isDevMode", type: "function", stable: {} }, { name: "isSignal", type: "function", stable: { version: "17.0" } }, { name: "isStandalone", type: "function", stable: {} }, { name: "IterableChangeRecord", type: "interface", stable: {} }, { name: "IterableChanges", type: "interface", stable: {} }, { name: "IterableDiffer", type: "interface", stable: {} }, { name: "IterableDifferFactory", type: "interface", stable: {} }, { name: "IterableDiffers", type: "undecorated_class", stable: {} }, { name: "KeyValueChangeRecord", type: "interface", stable: {} }, { name: "KeyValueChanges", type: "interface", stable: {} }, { name: "KeyValueDiffer", type: "interface", stable: {} }, { name: "KeyValueDifferFactory", type: "interface", stable: {} }, { name: "KeyValueDiffers", type: "undecorated_class", stable: {} }, { name: "linkedSignal", type: "function", stable: { version: "20.0" } }, { name: "ListenerOptions", type: "interface", stable: {} }, { name: "LOCALE_ID", type: "constant", stable: {} }, { name: "makeEnvironmentProviders", type: "function", stable: {} }, { name: "makeStateKey", type: "function", stable: {} }, { name: "MAX_ANIMATION_TIMEOUT", type: "constant", stable: { version: "20.2" } }, { name: "mergeApplicationConfig", type: "function", stable: {} }, { name: "MissingTranslationStrategy", type: "enum", stable: {} }, { name: "model", type: "initializer_api_function", stable: { version: "19.0" } }, { name: "ModelOptions", type: "interface" }, { name: "ModelSignal", type: "interface" }, { name: "ModuleWithComponentFactories", type: "undecorated_class", deprecated: {}, stable: {} }, { name: "ModuleWithProviders", type: "interface", stable: {} }, { name: "ng-container", type: "element" }, { name: "ng-content", type: "element" }, { name: "ng-template", type: "element" }, { name: "NgIterable", type: "type_alias", stable: {} }, { name: "NgModule", type: "decorator" }, { name: "NgModuleFactory", type: "undecorated_class", deprecated: {}, stable: {} }, { name: "NgModuleRef", type: "undecorated_class", stable: {} }, { name: "NgProbeToken", type: "undecorated_class", deprecated: {}, stable: {} }, { name: "NgZone", type: "undecorated_class", stable: {} }, { name: "NgZoneOptions", type: "interface", stable: {} }, { name: "NO_ERRORS_SCHEMA", type: "constant", stable: {} }, { name: "numberAttribute", type: "function", stable: {} }, { name: "OnChanges", type: "interface", stable: {} }, { name: "OnDestroy", type: "interface", stable: {} }, { name: "OnInit", type: "interface", stable: {} }, { name: "Optional", type: "decorator" }, { name: "output", type: "initializer_api_function", stable: { version: "19.0" } }, { name: "Output", type: "decorator" }, { name: "outputBinding", type: "function" }, { name: "OutputEmitterRef", type: "undecorated_class" }, { name: "OutputOptions", type: "interface", stable: { version: "19.0" } }, { name: "OutputRef", type: "interface" }, { name: "OutputRefSubscription", type: "interface" }, { name: "PACKAGE_ROOT_URL", type: "constant", deprecated: {}, stable: {} }, { name: "PendingTasks", type: "undecorated_class", stable: { version: "20.0" } }, { name: "Pipe", type: "decorator" }, { name: "PipeTransform", type: "interface", stable: {} }, { name: "PLATFORM_ID", type: "constant", stable: {} }, { name: "PLATFORM_INITIALIZER", type: "constant", deprecated: { version: "19.0" }, stable: {} }, { name: "platformCore", type: "constant", stable: {} }, { name: "PlatformRef", type: "undecorated_class", stable: {} }, { name: "Predicate", type: "type_alias", stable: {} }, { name: "PromiseResourceOptions", type: "interface", experimental: {} }, { name: "provideAppInitializer", type: "function", stable: {} }, { name: "provideBrowserGlobalErrorListeners", type: "function", stable: {} }, { name: "provideCheckNoChangesConfig", type: "function", developerPreview: { version: "20.0" } }, { name: "provideEnvironmentInitializer", type: "function", stable: {} }, { name: "provideNgReflectAttributes", type: "function", stable: {} }, { name: "providePlatformInitializer", type: "function", stable: {} }, { name: "Provider", type: "type_alias", stable: {} }, { name: "ProviderToken", type: "type_alias", stable: {} }, { name: "provideZoneChangeDetection", type: "function", stable: {} }, { name: "provideZonelessChangeDetection", type: "function", stable: { version: "20.2" } }, { name: "Query", type: "undecorated_class", stable: {} }, { name: "QueryList", type: "undecorated_class", stable: {} }, { name: "reflectComponentType", type: "function", stable: {} }, { name: "Renderer2", type: "undecorated_class", stable: {} }, { name: "RendererFactory2", type: "undecorated_class", stable: {} }, { name: "RendererStyleFlags2", type: "enum", stable: {} }, { name: "RendererType2", type: "interface", stable: {} }, { name: "REQUEST", type: "constant", stable: {} }, { name: "REQUEST_CONTEXT", type: "constant", stable: {} }, { name: "resolveForwardRef", type: "function", stable: {} }, { name: "resource", type: "function", experimental: { version: "19.0" } }, { name: "Resource", type: "interface", experimental: {} }, { name: "ResourceLoader", type: "type_alias", experimental: {} }, { name: "ResourceLoaderParams", type: "interface", experimental: {} }, { name: "ResourceOptions", type: "type_alias", experimental: {} }, { name: "ResourceRef", type: "interface", experimental: {} }, { name: "ResourceStatus", type: "type_alias", experimental: {} }, { name: "ResourceStreamingLoader", type: "type_alias", experimental: {} }, { name: "ResourceStreamItem", type: "type_alias", experimental: {} }, { name: "RESPONSE_INIT", type: "constant", stable: {} }, { name: "runInInjectionContext", type: "function", stable: {} }, { name: "Sanitizer", type: "undecorated_class", stable: {} }, { name: "SchemaMetadata", type: "interface", stable: {} }, { name: "SecurityContext", type: "enum", stable: {} }, { name: "Self", type: "decorator" }, { name: "setTestabilityGetter", type: "function", stable: {} }, { name: "signal", type: "function" }, { name: "Signal", type: "type_alias", stable: { version: "17.0" } }, { name: "SimpleChange", type: "undecorated_class", stable: {} }, { name: "SimpleChanges", type: "interface", stable: {} }, { name: "SkipSelf", type: "decorator" }, { name: "StateKey", type: "type_alias", stable: {} }, { name: "StaticClassProvider", type: "interface", stable: {} }, { name: "StaticClassSansProvider", type: "interface", stable: {} }, { name: "StaticProvider", type: "type_alias", stable: {} }, { name: "StreamingResourceOptions", type: "interface", experimental: {} }, { name: "TemplateRef", type: "undecorated_class", stable: {} }, { name: "Testability", type: "undecorated_class", stable: {} }, { name: "TestabilityRegistry", type: "undecorated_class", stable: {} }, { name: "TrackByFunction", type: "interface", stable: {} }, { name: "TransferState", type: "undecorated_class", stable: {} }, { name: "TRANSLATIONS", type: "constant", stable: {} }, { name: "TRANSLATIONS_FORMAT", type: "constant", stable: {} }, { name: "twoWayBinding", type: "function" }, { name: "Type", type: "constant", stable: {} }, { name: "TypeProvider", type: "interface", stable: {} }, { name: "untracked", type: "function" }, { name: "ValueEqualityFn", type: "type_alias" }, { name: "ValueProvider", type: "interface", stable: {} }, { name: "ValueSansProvider", type: "interface", stable: {} }, { name: "Version", type: "undecorated_class", stable: {} }, { name: "VERSION", type: "constant", stable: {} }, { name: "viewChild", type: "initializer_api_function", stable: { version: "19.0" } }, { name: "ViewChild", type: "decorator" }, { name: "viewChildren", type: "initializer_api_function", stable: { version: "19.0" } }, { name: "ViewChildren", type: "decorator" }, { name: "ViewContainerRef", type: "undecorated_class", stable: {} }, { name: "ViewEncapsulation", type: "enum", stable: {} }, { name: "ViewRef", type: "undecorated_class", stable: {} }, { name: "WritableResource", type: "interface", experimental: {} }, { name: "WritableSignal", type: "interface", stable: { version: "17.0" } }] }, { moduleName: "@angular/core/rxjs-interop", normalizedModuleName: "angular_core_rxjs-interop", moduleLabel: "@angular/core/rxjs-interop", entries: [{ name: "outputFromObservable", type: "function", stable: { version: "19.0" } }, { name: "outputToObservable", type: "function", stable: { version: "19.0" } }, { name: "pendingUntilEvent", type: "function", developerPreview: { version: "20.0" } }, { name: "rxResource", type: "function", experimental: {} }, { name: "RxResourceOptions", type: "interface", experimental: {} }, { name: "takeUntilDestroyed", type: "function", stable: { version: "19.0" } }, { name: "toObservable", type: "function", stable: { version: "20.0" } }, { name: "ToObservableOptions", type: "interface", stable: { version: "20.0" } }, { name: "toSignal", type: "function" }, { name: "ToSignalOptions", type: "interface", stable: { version: "20.0" } }] }, { moduleName: "@angular/core/testing", normalizedModuleName: "angular_core_testing", moduleLabel: "@angular/core/testing", entries: [{ name: "ComponentFixture", type: "undecorated_class", stable: {} }, { name: "ComponentFixtureAutoDetect", type: "constant", stable: {} }, { name: "ComponentFixtureNoNgZone", type: "constant", stable: {} }, { name: "DeferBlockBehavior", type: "enum", stable: {} }, { name: "DeferBlockFixture", type: "undecorated_class", stable: {} }, { name: "DeferBlockState", type: "enum", stable: {} }, { name: "discardPeriodicTasks", type: "function", stable: {} }, { name: "fakeAsync", type: "function", stable: {} }, { name: "flush", type: "function", stable: {} }, { name: "flushMicrotasks", type: "function", stable: {} }, { name: "getTestBed", type: "function", stable: {} }, { name: "inject", type: "function", stable: {} }, { name: "InjectSetupWrapper", type: "undecorated_class", stable: {} }, { name: "MetadataOverride", type: "type_alias", stable: {} }, { name: "ModuleTeardownOptions", type: "interface", stable: {} }, { name: "resetFakeAsyncZone", type: "function", stable: {} }, { name: "TestBed", type: "constant", stable: {} }, { name: "TestBedStatic", type: "interface", stable: {} }, { name: "TestComponentOptions", type: "interface", stable: {} }, { name: "TestComponentRenderer", type: "undecorated_class", stable: {} }, { name: "TestEnvironmentOptions", type: "interface", stable: {} }, { name: "TestModuleMetadata", type: "interface", stable: {} }, { name: "tick", type: "function", stable: {} }, { name: "waitForAsync", type: "function", stable: {} }, { name: "withModule", type: "function", stable: {} }] }, { moduleName: "@angular/elements", normalizedModuleName: "angular_elements", moduleLabel: "@angular/elements", entries: [{ name: "createCustomElement", type: "function", stable: {} }, { name: "NgElement", type: "undecorated_class", stable: {} }, { name: "NgElementConfig", type: "interface", stable: {} }, { name: "NgElementConstructor", type: "interface", stable: {} }, { name: "NgElementStrategy", type: "interface", stable: {} }, { name: "NgElementStrategyEvent", type: "interface", stable: {} }, { name: "NgElementStrategyFactory", type: "interface", stable: {} }, { name: "VERSION", type: "constant", stable: {} }, { name: "WithProperties", type: "type_alias", stable: {} }] }, { moduleName: "@angular/forms", normalizedModuleName: "angular_forms", moduleLabel: "@angular/forms", entries: [{ name: "AbstractControl", type: "undecorated_class", stable: {} }, { name: "AbstractControlDirective", type: "undecorated_class", stable: {} }, { name: "AbstractControlOptions", type: "interface", stable: {} }, { name: "AbstractFormGroupDirective", type: "directive", stable: {} }, { name: "AsyncValidator", type: "interface", stable: {} }, { name: "AsyncValidatorFn", type: "interface", stable: {} }, { name: "CheckboxControlValueAccessor", type: "directive", stable: {} }, { name: "CheckboxRequiredValidator", type: "directive", stable: {} }, { name: "COMPOSITION_BUFFER_MODE", type: "constant", stable: {} }, { name: "ControlConfig", type: "type_alias", stable: {} }, { name: "ControlContainer", type: "undecorated_class", stable: {} }, { name: "ControlEvent", type: "undecorated_class", stable: {} }, { name: "ControlValueAccessor", type: "interface", stable: {} }, { name: "DefaultValueAccessor", type: "directive", stable: {} }, { name: "EmailValidator", type: "directive", stable: {} }, { name: "Form", type: "interface", stable: {} }, { name: "FormArray", type: "undecorated_class", stable: {} }, { name: "FormArrayName", type: "directive", stable: {} }, { name: "FormBuilder", type: "undecorated_class", stable: {} }, { name: "FormControl", type: "interface", stable: {} }, { name: "FormControlDirective", type: "directive", stable: {} }, { name: "FormControlName", type: "directive", stable: {} }, { name: "FormControlOptions", type: "interface", stable: {} }, { name: "FormControlState", type: "interface", stable: {} }, { name: "FormControlStatus", type: "type_alias", stable: {} }, { name: "FormGroup", type: "undecorated_class", stable: {} }, { name: "FormGroupDirective", type: "directive", stable: {} }, { name: "FormGroupName", type: "directive", stable: {} }, { name: "FormRecord", type: "undecorated_class", stable: {} }, { name: "FormResetEvent", type: "undecorated_class", stable: {} }, { name: "FormsModule", type: "ng_module", stable: {} }, { name: "FormSubmittedEvent", type: "undecorated_class", stable: {} }, { name: "isFormArray", type: "constant", stable: {} }, { name: "isFormControl", type: "constant", stable: {} }, { name: "isFormGroup", type: "constant", stable: {} }, { name: "isFormRecord", type: "constant", stable: {} }, { name: "MaxLengthValidator", type: "directive", stable: {} }, { name: "MaxValidator", type: "directive", stable: {} }, { name: "MinLengthValidator", type: "directive", stable: {} }, { name: "MinValidator", type: "directive", stable: {} }, { name: "NG_ASYNC_VALIDATORS", type: "constant", stable: {} }, { name: "NG_VALIDATORS", type: "constant", stable: {} }, { name: "NG_VALUE_ACCESSOR", type: "constant", stable: {} }, { name: "NgControl", type: "undecorated_class", stable: {} }, { name: "NgControlStatus", type: "directive", stable: {} }, { name: "NgControlStatusGroup", type: "directive", stable: {} }, { name: "NgForm", type: "directive", stable: {} }, { name: "NgModel", type: "directive", stable: {} }, { name: "NgModelGroup", type: "directive", stable: {} }, { name: "NgSelectOption", type: "directive", stable: {} }, { name: "NonNullableFormBuilder", type: "undecorated_class", stable: {} }, { name: "NumberValueAccessor", type: "directive", stable: {} }, { name: "PatternValidator", type: "directive", stable: {} }, { name: "PristineChangeEvent", type: "undecorated_class", stable: {} }, { name: "RadioControlValueAccessor", type: "directive", stable: {} }, { name: "RangeValueAccessor", type: "directive", stable: {} }, { name: "ReactiveFormsModule", type: "ng_module", stable: {} }, { name: "RequiredValidator", type: "directive", stable: {} }, { name: "SelectControlValueAccessor", type: "directive", stable: {} }, { name: "SelectMultipleControlValueAccessor", type: "directive", stable: {} }, { name: "SetDisabledStateOption", type: "type_alias", stable: {} }, { name: "StatusChangeEvent", type: "undecorated_class", stable: {} }, { name: "TouchedChangeEvent", type: "undecorated_class", stable: {} }, { name: "UntypedFormArray", type: "constant" }, { name: "UntypedFormBuilder", type: "undecorated_class" }, { name: "UntypedFormControl", type: "constant" }, { name: "UntypedFormGroup", type: "constant" }, { name: "ValidationErrors", type: "type_alias", stable: {} }, { name: "Validator", type: "interface", stable: {} }, { name: "ValidatorFn", type: "interface", stable: {} }, { name: "Validators", type: "undecorated_class", stable: {} }, { name: "ValueChangeEvent", type: "undecorated_class", stable: {} }, { name: "VERSION", type: "constant", stable: {} }] }, { moduleName: "@angular/localize", normalizedModuleName: "angular_localize", moduleLabel: "@angular/localize", entries: [{ name: "clearTranslations", type: "function", stable: {} }, { name: "loadTranslations", type: "function", stable: {} }, { name: "MessageId", type: "type_alias", stable: {} }, { name: "TargetMessage", type: "type_alias", stable: {} }] }, { moduleName: "@angular/localize/init", normalizedModuleName: "angular_localize_init", moduleLabel: "@angular/localize/init", entries: [{ name: "$localize", type: "constant", stable: {} }] }, { moduleName: "@angular/platform-browser", normalizedModuleName: "angular_platform-browser", moduleLabel: "@angular/platform-browser", entries: [{ name: "ApplicationConfig", type: "type_alias", deprecated: {}, stable: {} }, { name: "bootstrapApplication", type: "function", stable: {} }, { name: "BootstrapContext", type: "interface", stable: {} }, { name: "BrowserModule", type: "ng_module", stable: {} }, { name: "By", type: "undecorated_class", stable: {} }, { name: "createApplication", type: "function", stable: {} }, { name: "disableDebugTools", type: "function", stable: {} }, { name: "DomSanitizer", type: "undecorated_class", stable: {} }, { name: "enableDebugTools", type: "function", stable: {} }, { name: "EVENT_MANAGER_PLUGINS", type: "constant", stable: {} }, { name: "EventManager", type: "undecorated_class", stable: {} }, { name: "EventManagerPlugin", type: "undecorated_class", stable: {} }, { name: "HAMMER_GESTURE_CONFIG", type: "constant", deprecated: {}, stable: {} }, { name: "HAMMER_LOADER", type: "constant", deprecated: {}, stable: {} }, { name: "HammerGestureConfig", type: "undecorated_class", deprecated: {}, stable: {} }, { name: "HammerLoader", type: "type_alias", deprecated: {}, stable: {} }, { name: "HammerModule", type: "ng_module", deprecated: {}, stable: {} }, { name: "HydrationFeature", type: "interface", stable: {} }, { name: "HydrationFeatureKind", type: "enum", stable: {} }, { name: "Meta", type: "undecorated_class", stable: {} }, { name: "MetaDefinition", type: "type_alias", stable: {} }, { name: "platformBrowser", type: "constant", stable: {} }, { name: "provideClientHydration", type: "function", stable: { version: "17.0" } }, { name: "provideProtractorTestingSupport", type: "function", stable: {} }, { name: "REMOVE_STYLES_ON_COMPONENT_DESTROY", type: "constant", stable: {} }, { name: "SafeHtml", type: "interface", stable: {} }, { name: "SafeResourceUrl", type: "interface", stable: {} }, { name: "SafeScript", type: "interface", stable: {} }, { name: "SafeStyle", type: "interface", stable: {} }, { name: "SafeUrl", type: "interface", stable: {} }, { name: "SafeValue", type: "interface", stable: {} }, { name: "Title", type: "undecorated_class", stable: {} }, { name: "VERSION", type: "constant", stable: {} }, { name: "withEventReplay", type: "function", stable: {} }, { name: "withHttpTransferCacheOptions", type: "function", stable: {} }, { name: "withI18nSupport", type: "function", stable: { version: "20.0" } }, { name: "withIncrementalHydration", type: "function", stable: { version: "20.0" } }, { name: "withNoHttpTransferCache", type: "function", stable: {} }] }, { moduleName: "@angular/platform-browser-dynamic", normalizedModuleName: "angular_platform-browser-dynamic", moduleLabel: "@angular/platform-browser-dynamic", entries: [{ name: "JitCompilerFactory", type: "undecorated_class", deprecated: {}, stable: {} }, { name: "platformBrowserDynamic", type: "constant", deprecated: {} }, { name: "VERSION", type: "constant", stable: {} }] }, { moduleName: "@angular/platform-browser-dynamic/testing", normalizedModuleName: "angular_platform-browser-dynamic_testing", moduleLabel: "@angular/platform-browser-dynamic/testing", entries: [{ name: "BrowserDynamicTestingModule", type: "undecorated_class", deprecated: {} }, { name: "platformBrowserDynamicTesting", type: "constant", deprecated: {} }] }, { moduleName: "@angular/platform-browser/animations", normalizedModuleName: "angular_platform-browser_animations", moduleLabel: "@angular/platform-browser/animations", entries: [{ name: "ANIMATION_MODULE_TYPE", type: "constant", stable: {} }, { name: "BrowserAnimationsModule", type: "ng_module", deprecated: { version: "20.2" }, stable: {} }, { name: "BrowserAnimationsModuleConfig", type: "interface", deprecated: { version: "20.2" }, stable: {} }, { name: "NoopAnimationsModule", type: "ng_module", deprecated: { version: "20.2" }, stable: {} }, { name: "provideAnimations", type: "function", deprecated: { version: "20.2" }, stable: {} }, { name: "provideNoopAnimations", type: "function", deprecated: { version: "20.2" }, stable: {} }] }, { moduleName: "@angular/platform-browser/animations/async", normalizedModuleName: "angular_platform-browser_animations_async", moduleLabel: "@angular/platform-browser/animations/async", entries: [{ name: "provideAnimationsAsync", type: "function", deprecated: { version: "20.2" }, stable: {} }] }, { moduleName: "@angular/platform-browser/testing", normalizedModuleName: "angular_platform-browser_testing", moduleLabel: "@angular/platform-browser/testing", entries: [{ name: "BrowserTestingModule", type: "ng_module", stable: {} }, { name: "platformBrowserTesting", type: "constant", stable: {} }] }, { moduleName: "@angular/platform-server", normalizedModuleName: "angular_platform-server", moduleLabel: "@angular/platform-server", entries: [{ name: "BEFORE_APP_SERIALIZED", type: "constant", stable: {} }, { name: "INITIAL_CONFIG", type: "constant", stable: {} }, { name: "PlatformConfig", type: "interface", stable: {} }, { name: "platformServer", type: "function", stable: {} }, { name: "PlatformState", type: "undecorated_class", stable: {} }, { name: "provideServerRendering", type: "function", stable: {} }, { name: "renderApplication", type: "function", stable: {} }, { name: "renderModule", type: "function", stable: {} }, { name: "ServerModule", type: "ng_module", stable: {} }, { name: "VERSION", type: "constant", stable: {} }] }, { moduleName: "@angular/platform-server/testing", normalizedModuleName: "angular_platform-server_testing", moduleLabel: "@angular/platform-server/testing", entries: [{ name: "platformServerTesting", type: "constant", deprecated: { version: "20.0" }, stable: {} }, { name: "ServerTestingModule", type: "undecorated_class", deprecated: { version: "20.0" }, stable: {} }] }, { moduleName: "@angular/router", normalizedModuleName: "angular_router", moduleLabel: "@angular/router", entries: [{ name: "ActivatedRoute", type: "undecorated_class", stable: {} }, { name: "ActivatedRouteSnapshot", type: "undecorated_class", stable: {} }, { name: "ActivationEnd", type: "undecorated_class", stable: {} }, { name: "ActivationStart", type: "undecorated_class", stable: {} }, { name: "BaseRouteReuseStrategy", type: "undecorated_class", stable: {} }, { name: "CanActivate", type: "interface", stable: {} }, { name: "CanActivateChild", type: "interface", stable: {} }, { name: "CanActivateChildFn", type: "type_alias", stable: {} }, { name: "CanActivateFn", type: "type_alias", stable: {} }, { name: "CanDeactivate", type: "interface", stable: {} }, { name: "CanDeactivateFn", type: "type_alias", stable: {} }, { name: "CanLoad", type: "interface", deprecated: {}, stable: {} }, { name: "CanLoadFn", type: "type_alias", deprecated: {}, stable: {} }, { name: "CanMatch", type: "interface", stable: {} }, { name: "CanMatchFn", type: "type_alias", stable: {} }, { name: "ChildActivationEnd", type: "undecorated_class", stable: {} }, { name: "ChildActivationStart", type: "undecorated_class", stable: {} }, { name: "ChildrenOutletContexts", type: "undecorated_class", stable: {} }, { name: "ComponentInputBindingFeature", type: "type_alias", stable: {} }, { name: "convertToParamMap", type: "function", stable: {} }, { name: "createUrlTreeFromSnapshot", type: "function", stable: {} }, { name: "Data", type: "type_alias", stable: {} }, { name: "DebugTracingFeature", type: "type_alias", stable: {} }, { name: "DefaultExport", type: "interface", stable: {} }, { name: "DefaultTitleStrategy", type: "undecorated_class" }, { name: "defaultUrlMatcher", type: "function", stable: {} }, { name: "DefaultUrlSerializer", type: "undecorated_class", stable: {} }, { name: "DeprecatedGuard", type: "type_alias", deprecated: {}, stable: {} }, { name: "DeprecatedResolve", type: "type_alias", deprecated: {}, stable: {} }, { name: "DetachedRouteHandle", type: "type_alias", stable: {} }, { name: "DisabledInitialNavigationFeature", type: "type_alias", stable: {} }, { name: "EnabledBlockingInitialNavigationFeature", type: "type_alias", stable: {} }, { name: "Event", type: "type_alias", stable: {} }, { name: "EventType", type: "enum", stable: {} }, { name: "ExtraOptions", type: "interface", stable: {} }, { name: "GuardResult", type: "type_alias", stable: {} }, { name: "GuardsCheckEnd", type: "undecorated_class", stable: {} }, { name: "GuardsCheckStart", type: "undecorated_class", stable: {} }, { name: "InitialNavigation", type: "type_alias", stable: {} }, { name: "InitialNavigationFeature", type: "type_alias", stable: {} }, { name: "InMemoryScrollingFeature", type: "type_alias", stable: {} }, { name: "InMemoryScrollingOptions", type: "interface", stable: {} }, { name: "IsActiveMatchOptions", type: "interface", stable: {} }, { name: "LoadChildren", type: "type_alias", stable: {} }, { name: "LoadChildrenCallback", type: "type_alias", stable: {} }, { name: "mapToCanActivate", type: "function", stable: {} }, { name: "mapToCanActivateChild", type: "function", stable: {} }, { name: "mapToCanDeactivate", type: "function", stable: {} }, { name: "mapToCanMatch", type: "function", stable: {} }, { name: "mapToResolve", type: "function", stable: {} }, { name: "MaybeAsync", type: "type_alias", stable: {} }, { name: "Navigation", type: "interface", stable: {} }, { name: "NavigationBehaviorOptions", type: "interface", stable: {} }, { name: "NavigationCancel", type: "undecorated_class", stable: {} }, { name: "NavigationCancellationCode", type: "enum", stable: {} }, { name: "NavigationEnd", type: "undecorated_class", stable: {} }, { name: "NavigationError", type: "undecorated_class", stable: {} }, { name: "NavigationErrorHandlerFeature", type: "type_alias", stable: {} }, { name: "NavigationExtras", type: "interface", stable: {} }, { name: "NavigationSkipped", type: "undecorated_class", stable: {} }, { name: "NavigationSkippedCode", type: "enum", stable: {} }, { name: "NavigationStart", type: "undecorated_class", stable: {} }, { name: "NoPreloading", type: "undecorated_class", stable: {} }, { name: "OnSameUrlNavigation", type: "type_alias", stable: {} }, { name: "OutletContext", type: "undecorated_class", stable: {} }, { name: "ParamMap", type: "interface", stable: {} }, { name: "Params", type: "type_alias", stable: {} }, { name: "PreloadAllModules", type: "undecorated_class", stable: {} }, { name: "PreloadingFeature", type: "type_alias", stable: {} }, { name: "PreloadingStrategy", type: "undecorated_class", stable: {} }, { name: "PRIMARY_OUTLET", type: "constant", stable: {} }, { name: "provideRouter", type: "function", stable: {} }, { name: "provideRoutes", type: "function", deprecated: {}, stable: {} }, { name: "QueryParamsHandling", type: "type_alias", stable: {} }, { name: "RedirectCommand", type: "undecorated_class", stable: {} }, { name: "RedirectFunction", type: "type_alias", stable: {} }, { name: "Resolve", type: "interface", stable: {} }, { name: "ResolveData", type: "type_alias", stable: {} }, { name: "ResolveEnd", type: "undecorated_class", stable: {} }, { name: "ResolveFn", type: "type_alias", stable: {} }, { name: "ResolveStart", type: "undecorated_class", stable: {} }, { name: "Route", type: "interface", stable: {} }, { name: "RouteConfigLoadEnd", type: "undecorated_class", stable: {} }, { name: "RouteConfigLoadStart", type: "undecorated_class", stable: {} }, { name: "Router", type: "undecorated_class", stable: {} }, { name: "ROUTER_CONFIGURATION", type: "constant", stable: {} }, { name: "ROUTER_INITIALIZER", type: "constant", stable: {} }, { name: "ROUTER_OUTLET_DATA", type: "constant", stable: {} }, { name: "RouterConfigOptions", type: "interface", stable: {} }, { name: "RouterConfigurationFeature", type: "type_alias", stable: {} }, { name: "RouteReuseStrategy", type: "undecorated_class", stable: {} }, { name: "RouterEvent", type: "undecorated_class", stable: {} }, { name: "RouterFeature", type: "interface", stable: {} }, { name: "RouterFeatures", type: "type_alias", stable: {} }, { name: "RouterHashLocationFeature", type: "type_alias", stable: {} }, { name: "RouterLink", type: "directive", stable: {} }, { name: "RouterLinkActive", type: "directive", stable: {} }, { name: "RouterLinkWithHref", type: "directive", stable: {} }, { name: "RouterModule", type: "ng_module", stable: {} }, { name: "RouterOutlet", type: "directive", stable: {} }, { name: "RouterOutletContract", type: "interface", stable: {} }, { name: "RouterPreloader", type: "undecorated_class", stable: {} }, { name: "RouterState", type: "undecorated_class", stable: {} }, { name: "RouterStateSnapshot", type: "undecorated_class", stable: {} }, { name: "Routes", type: "type_alias", stable: {} }, { name: "ROUTES", type: "constant", stable: {} }, { name: "RoutesRecognized", type: "undecorated_class", stable: {} }, { name: "RunGuardsAndResolvers", type: "type_alias", stable: {} }, { name: "Scroll", type: "undecorated_class", stable: {} }, { name: "TitleStrategy", type: "undecorated_class", stable: {} }, { name: "UrlCreationOptions", type: "interface", stable: {} }, { name: "UrlHandlingStrategy", type: "undecorated_class", stable: {} }, { name: "UrlMatcher", type: "type_alias", stable: {} }, { name: "UrlMatchResult", type: "type_alias", stable: {} }, { name: "UrlSegment", type: "undecorated_class", stable: {} }, { name: "UrlSegmentGroup", type: "undecorated_class", stable: {} }, { name: "UrlSerializer", type: "undecorated_class", stable: {} }, { name: "UrlTree", type: "undecorated_class", stable: {} }, { name: "VERSION", type: "constant", stable: {} }, { name: "ViewTransitionInfo", type: "interface", developerPreview: { version: "20.0" } }, { name: "ViewTransitionsFeature", type: "type_alias", stable: {} }, { name: "ViewTransitionsFeatureOptions", type: "interface", developerPreview: { version: "20.0" } }, { name: "withComponentInputBinding", type: "function" }, { name: "withDebugTracing", type: "function", stable: {} }, { name: "withDisabledInitialNavigation", type: "function", stable: {} }, { name: "withEnabledBlockingInitialNavigation", type: "function", stable: {} }, { name: "withHashLocation", type: "function", stable: {} }, { name: "withInMemoryScrolling", type: "function", stable: {} }, { name: "withNavigationErrorHandler", type: "function", stable: {} }, { name: "withPreloading", type: "function", stable: {} }, { name: "withRouterConfig", type: "function", stable: {} }, { name: "withViewTransitions", type: "function", developerPreview: { version: "19.0" } }] }, { moduleName: "@angular/router/testing", normalizedModuleName: "angular_router_testing", moduleLabel: "@angular/router/testing", entries: [{ name: "RouterTestingHarness", type: "undecorated_class", stable: {} }, { name: "RouterTestingModule", type: "undecorated_class", deprecated: {}, stable: {} }] }, { moduleName: "@angular/router/upgrade", normalizedModuleName: "angular_router_upgrade", moduleLabel: "@angular/router/upgrade", entries: [{ name: "locationSyncBootstrapListener", type: "function" }, { name: "RouterUpgradeInitializer", type: "constant", stable: {} }, { name: "setUpLocationSync", type: "function", stable: {} }] }, { moduleName: "@angular/service-worker", normalizedModuleName: "angular_service-worker", moduleLabel: "@angular/service-worker", entries: [{ name: "NoNewVersionDetectedEvent", type: "interface", stable: {} }, { name: "provideServiceWorker", type: "function", stable: {} }, { name: "ServiceWorkerModule", type: "ng_module", stable: {} }, { name: "SwPush", type: "undecorated_class", stable: {} }, { name: "SwRegistrationOptions", type: "undecorated_class", stable: {} }, { name: "SwUpdate", type: "undecorated_class", stable: {} }, { name: "UnrecoverableStateEvent", type: "interface", stable: {} }, { name: "VersionDetectedEvent", type: "interface", stable: {} }, { name: "VersionEvent", type: "type_alias", stable: {} }, { name: "VersionInstallationFailedEvent", type: "interface", stable: {} }, { name: "VersionReadyEvent", type: "interface", stable: {} }] }, { moduleName: "@angular/ssr", normalizedModuleName: "angular_ssr", moduleLabel: "@angular/ssr", entries: [{ name: "AngularAppEngine", type: "undecorated_class" }, { name: "createRequestHandler", type: "function" }, { name: "PrerenderFallback", type: "enum" }, { name: "provideServerRendering", type: "function" }, { name: "RenderMode", type: "enum" }, { name: "RequestHandlerFunction", type: "type_alias" }, { name: "ServerRoute", type: "type_alias" }, { name: "ServerRouteClient", type: "interface" }, { name: "ServerRouteCommon", type: "interface" }, { name: "ServerRoutePrerender", type: "interface" }, { name: "ServerRoutePrerenderWithParams", type: "interface" }, { name: "ServerRouteServer", type: "interface" }, { name: "withAppShell", type: "function" }, { name: "withRoutes", type: "function" }] }, { moduleName: "@angular/ssr/node", normalizedModuleName: "angular_ssr_node", moduleLabel: "@angular/ssr/node", entries: [{ name: "AngularNodeAppEngine", type: "undecorated_class" }, { name: "CommonEngine", type: "undecorated_class" }, { name: "CommonEngineOptions", type: "interface" }, { name: "CommonEngineRenderOptions", type: "interface" }, { name: "createNodeRequestHandler", type: "function" }, { name: "createWebRequestFromNodeRequest", type: "function" }, { name: "isMainModule", type: "function" }, { name: "NodeRequestHandlerFunction", type: "type_alias" }, { name: "writeResponseToNodeResponse", type: "function" }] }, { moduleName: "@angular/upgrade", normalizedModuleName: "angular_upgrade", moduleLabel: "@angular/upgrade", entries: [{ name: "UpgradeAdapter", type: "undecorated_class", deprecated: { version: "5" }, stable: {} }, { name: "UpgradeAdapterRef", type: "undecorated_class", deprecated: { version: "5" }, stable: {} }] }, { moduleName: "@angular/upgrade/static", normalizedModuleName: "angular_upgrade_static", moduleLabel: "@angular/upgrade/static", entries: [{ name: "downgradeComponent", type: "function", stable: {} }, { name: "downgradeInjectable", type: "function", stable: {} }, { name: "downgradeModule", type: "function", stable: {} }, { name: "getAngularJSGlobal", type: "function", stable: {} }, { name: "getAngularLib", type: "function", deprecated: {}, stable: {} }, { name: "setAngularJSGlobal", type: "function", stable: {} }, { name: "setAngularLib", type: "function", deprecated: {}, stable: {} }, { name: "UpgradeComponent", type: "directive", stable: {} }, { name: "UpgradeModule", type: "ng_module", stable: {} }, { name: "VERSION", type: "constant", stable: {} }] }, { moduleName: "@angular/upgrade/static/testing", normalizedModuleName: "angular_upgrade_static_testing", moduleLabel: "@angular/upgrade/static/testing", entries: [{ name: "createAngularJSTestingModule", type: "function", stable: {} }, { name: "createAngularTestingModule", type: "function", stable: {} }] }, { moduleName: "@angular/core/globals", normalizedModuleName: "angular_core_globals", moduleLabel: "window.ng globals", entries: [{ name: "applyChanges", type: "function", stable: {} }, { name: "DirectiveDebugMetadata", type: "type_alias" }, { name: "enableProfiling", type: "function", experimental: {} }, { name: "getComponent", type: "function", stable: {} }, { name: "getContext", type: "function", stable: {} }, { name: "getDirectiveMetadata", type: "function", stable: {} }, { name: "getDirectives", type: "function", stable: {} }, { name: "getHostElement", type: "function", stable: {} }, { name: "getInjector", type: "function", stable: {} }, { name: "getListeners", type: "function", stable: {} }, { name: "getOwningComponent", type: "function", stable: {} }, { name: "getRootComponents", type: "function", stable: {} }, { name: "Listener", type: "interface", stable: {} }] }];

// src/app/features/references/helpers/manifest.helper.ts
var manifest = manifest_default;
function mapApiManifestToRoutes() {
  const apiRoutes = [];
  for (const packageEntry of manifest) {
    for (const api of packageEntry.entries) {
      apiRoutes.push(__spreadValues({
        path: getApiUrl(packageEntry, api.name),
        loadComponent: /* @__PURE__ */ __name(() => import("./chunk-GCA7HXZF.js"), "loadComponent"),
        resolve: {
          docContent: contentResolver(`api/${getNormalizedFilename(packageEntry, api)}`)
        },
        data: {
          label: api.name,
          displaySecondaryNav: true
        }
      }, false ? { \u0275entryName: "src/app/features/references/api-reference-details-page/api-reference-details-page.component.ts" } : {}));
    }
  }
  return apiRoutes;
}
__name(mapApiManifestToRoutes, "mapApiManifestToRoutes");
function getApiNavigationItems() {
  const apiNavigationItems = [];
  for (const packageEntry of manifest) {
    const packageNavigationItem = {
      label: packageEntry.moduleLabel,
      children: packageEntry.entries.map((api) => ({
        path: getApiUrl(packageEntry, api.name),
        label: api.name
      }))
    };
    apiNavigationItems.push(packageNavigationItem);
  }
  return apiNavigationItems;
}
__name(getApiNavigationItems, "getApiNavigationItems");
function getApiUrl(packageEntry, apiName) {
  const packageName = packageEntry.normalizedModuleName.replace("angular_", "").replaceAll("_", "/");
  return `${PAGE_PREFIX.API}/${packageName}/${apiName}`;
}
__name(getApiUrl, "getApiUrl");
function getNormalizedFilename(manifestPackage, entry) {
  return `${manifestPackage.normalizedModuleName}_${entry.name}_${entry.type}.html`;
}
__name(getNormalizedFilename, "getNormalizedFilename");

export {
  manifest_default,
  mapApiManifestToRoutes,
  getApiNavigationItems,
  getApiUrl
};
/*!
 * @license
 * Copyright Google LLC All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://angular.dev/license
 */
//# sourceMappingURL=chunk-FBBF3GVO.js.map
