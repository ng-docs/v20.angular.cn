{
  "version": 3,
  "sources": ["src/content/examples/pipes/src/app/flying-heroes.pipe.ts", "src/content/examples/pipes/src/app/heroes.ts", "src/content/examples/pipes/src/app/flying-heroes.component.ts", "src/content/examples/pipes/src/app/flying-heroes.component.html", "src/content/examples/pipes/src/app/flying-heroes-impure.component.html"],
  "sourcesContent": ["// #docregion\n// #docregion pure\nimport {Pipe, PipeTransform} from '@angular/core';\n\nimport {Hero} from './heroes';\n\n@Pipe({\n  name: 'flyingHeroes',\n})\nexport class FlyingHeroesPipe implements PipeTransform {\n  transform(allHeroes: Hero[]) {\n    // #docregion filter\n    return allHeroes.filter((hero) => hero.canFly);\n    // #enddocregion filter\n  }\n}\n// #enddocregion pure\n\n/////// Identical except for the pure flag\n// #docregion impure\n// #docregion pipe-decorator\n@Pipe({\n  name: 'flyingHeroesImpure',\n  pure: false,\n})\n// #enddocregion pipe-decorator\nexport class FlyingHeroesImpurePipe extends FlyingHeroesPipe {}\n// #enddocregion impure\n", "export interface Hero {\n  name: string;\n  canFly: boolean;\n}\nexport const HEROES: Hero[] = [\n  {name: 'Windstorm', canFly: true},\n  {name: 'Bombasto', canFly: false},\n  {name: 'Magneto', canFly: false},\n  {name: 'Tornado', canFly: true},\n];\n", "// #docplaster\n// #docregion\nimport {Component} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {FormsModule} from '@angular/forms';\n\nimport {FlyingHeroesPipe, FlyingHeroesImpurePipe} from './flying-heroes.pipe';\nimport {HEROES} from './heroes';\n\n@Component({\n  selector: 'app-flying-heroes',\n  templateUrl: './flying-heroes.component.html',\n  imports: [CommonModule, FormsModule, FlyingHeroesPipe],\n  styles: [\n    `\n    #flyers, #all {font-style: italic}\n    button {display: block}\n    input {margin: .25rem .25rem .5rem 0;}\n  `,\n  ],\n})\n// #docregion v1\nexport class FlyingHeroesComponent {\n  heroes: any[] = [];\n  canFly = true;\n  // #enddocregion v1\n  mutate = true;\n  title = 'Flying Heroes (pure pipe)';\n\n  // #docregion v1\n  constructor() {\n    this.reset();\n  }\n\n  addHero(name: string) {\n    name = name.trim();\n    if (!name) {\n      return;\n    }\n    const hero = {name, canFly: this.canFly};\n    // #enddocregion v1\n    if (this.mutate) {\n      // Pure pipe won't update display because heroes array reference is unchanged\n      // Impure pipe will display\n      // #docregion v1\n      // #docregion push\n      this.heroes.push(hero);\n      // #enddocregion push\n      // #enddocregion v1\n    } else {\n      // Pipe updates display because heroes array is a new object\n      this.heroes = this.heroes.concat(hero);\n    }\n    // #docregion v1\n  }\n\n  reset() {\n    this.heroes = HEROES.slice();\n  }\n}\n// #enddocregion v1\n\n////// Identical except for impure pipe //////\n@Component({\n  selector: 'app-flying-heroes-impure',\n  templateUrl: './flying-heroes-impure.component.html',\n  imports: [CommonModule, FormsModule, FlyingHeroesImpurePipe],\n  styles: [\n    '#flyers, #all {font-style: italic}',\n    'button {display: block}',\n    'input {margin: .25rem .25rem .5rem 0;}',\n  ],\n})\nexport class FlyingHeroesImpureComponent extends FlyingHeroesComponent {\n  override title = 'Flying Heroes (impure pipe)';\n}\n", "<!-- #docplaster-->\n<!-- #docregion -->\n<h2>{{ title }}</h2>\n<p>Create a new hero and press enter to add it to the list. </p>\n<!-- #docregion template-1 -->\n<label for=\"hero-name\">New hero name: </label>\n<input type=\"text\" #box id=\"hero-name\" (keyup.enter)=\"addHero(box.value); box.value=''\" placeholder=\"hero name\">\n<!-- #enddocregion template-1 -->\n<div>\n  <input id=\"can-fly\" type=\"checkbox\" [(ngModel)]=\"canFly\">\n  <label for=\"can-fly\">Hero can fly</label>\n</div>\n<div>\n  <input id=\"mutate\" type=\"checkbox\" [(ngModel)]=\"mutate\">\n  <label for=\"mutate\">Mutate array</label>\n  <!-- #docregion template-1 -->\n  <button type=\"button\" (click)=\"reset()\">Reset list of heroes</button>\n    <!-- #enddocregion template-1 -->\n</div>\n\n<h3>Heroes who fly (piped)</h3>\n<div id=\"flyers\">\n  <!-- #docregion template-flying-heroes -->\n  @for (hero of (heroes | flyingHeroes); track hero) {\n    <div>{{ hero.name }}</div>\n  }\n  <!-- #enddocregion template-flying-heroes -->\n</div>\n\n<h3>All Heroes (no pipe)</h3>\n<div id=\"all\">\n  <!-- #docregion template-1 -->\n  @for (hero of heroes; track hero) {\n    <div>{{ hero.name }}</div>\n  }\n  <!-- #enddocregion template-1 -->\n</div>\n", "<!-- #docplaster-->\n<!-- #docregion -->\n<h2>{{ title }}</h2>\n\n<label for=\"hero-name\">New hero: </label>\n<input type=\"text\" id=\"hero-name\" #box (keyup.enter)=\"addHero(box.value); box.value=''\" placeholder=\"hero name\">\n<div>\n  <input id=\"can-fly\" type=\"checkbox\" [(ngModel)]=\"canFly\">\n  <label for=\"can-fly\">can fly</label>\n</div>\n\n<div>\n  <input id=\"mutate\" type=\"checkbox\" [(ngModel)]=\"mutate\">Mutate array\n  <button type=\"button\" (click)=\"reset()\">Reset</button>\n</div>\n\n<h3>Heroes who fly (piped)</h3>\n<div id=\"flyers\">\n  <!-- #docregion template-flying-heroes -->\n  @for (hero of (heroes | flyingHeroesImpure); track hero) {\n    <div>{{ hero.name }}</div>\n  }\n  <!-- #enddocregion template-flying-heroes -->\n</div>\n\n<h3>All Heroes (no pipe)</h3>\n<div id=\"all\">\n  @for (hero of heroes; track hero) {\n    <div>{{ hero.name }}</div>\n  }\n</div>\n"],
  "mappings": "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",
  "names": []
}
