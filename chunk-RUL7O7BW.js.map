{
  "version": 3,
  "sources": ["src/content/examples/drag-drop/src/connected-sorting/app/app.component.ts", "src/content/examples/drag-drop/src/connected-sorting/app/app.component.html"],
  "sourcesContent": ["import {\n  CdkDrag,\n  CdkDragDrop,\n  CdkDropList,\n  moveItemInArray,\n  transferArrayItem,\n} from '@angular/cdk/drag-drop';\nimport {Component} from '@angular/core';\n\n/**\n * @title Drag&Drop connected sorting\n */\n@Component({\n  selector: 'cdk-drag-drop-connected-sorting-example',\n  templateUrl: 'app.component.html',\n  styleUrl: 'app.component.css',\n  standalone: true,\n  imports: [CdkDropList, CdkDrag],\n})\nexport class CdkDragDropConnectedSortingExample {\n  todo = ['Get to work', 'Pick up groceries', 'Go home', 'Fall asleep'];\n\n  done = ['Get up', 'Brush teeth', 'Take a shower', 'Check e-mail', 'Walk dog'];\n\n  drop(event: CdkDragDrop<string[]>) {\n    if (event.previousContainer === event.container) {\n      moveItemInArray(event.container.data, event.previousIndex, event.currentIndex);\n    } else {\n      transferArrayItem(\n        event.previousContainer.data,\n        event.container.data,\n        event.previousIndex,\n        event.currentIndex,\n      );\n    }\n  }\n}\n", "<div class=\"example-container\">\n  <h2>To do</h2>\n\n  <div\n    cdkDropList\n    #todoList=\"cdkDropList\"\n    [cdkDropListData]=\"todo\"\n    [cdkDropListConnectedTo]=\"[doneList]\"\n    class=\"example-list\"\n    (cdkDropListDropped)=\"drop($event)\">\n    @for (item of todo; track item) {\n      <div class=\"example-box\" cdkDrag>{{item}}</div>\n    }\n  </div>\n</div>\n\n<div class=\"example-container\">\n  <h2>Done</h2>\n\n  <div\n    cdkDropList\n    #doneList=\"cdkDropList\"\n    [cdkDropListData]=\"done\"\n    [cdkDropListConnectedTo]=\"[todoList]\"\n    class=\"example-list\"\n    (cdkDropListDropped)=\"drop($event)\">\n    @for (item of done; track item) {\n      <div class=\"example-box\" cdkDrag>{{item}}</div>\n    }\n  </div>\n</div>\n"],
  "mappings": "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",
  "names": []
}
