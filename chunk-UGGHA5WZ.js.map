{
  "version": 3,
  "sources": ["src/app/features/tutorial/split-resizer-handler.service.ts", "src/app/features/tutorial/tutorial.component.ts", "src/app/features/tutorial/tutorial.component.html"],
  "sourcesContent": ["/*!\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {FocusMonitor} from '@angular/cdk/a11y';\nimport {DOCUMENT} from '@angular/common';\nimport {DestroyRef, ElementRef, Injectable, inject, signal} from '@angular/core';\nimport {takeUntilDestroyed} from '@angular/core/rxjs-interop';\nimport {fromEvent, combineLatest} from 'rxjs';\nimport {map, filter, finalize} from 'rxjs/operators';\n\ninterface ResizingData {\n  isProgress: boolean;\n  initialContentContainerWidthInPercentage: number;\n  initialDividerPosition: number;\n  initialEditorContainerWidthInPercentage: number;\n}\n\ninterface MouseEventAndEditor {\n  event: MouseEvent;\n  editor: ElementRef<HTMLDivElement>;\n}\n\nconst MIN_WIDTH_OF_CONTENT_IN_PX = 300;\nconst MAX_WIDTH_OF_CONTENT_IN_PX = 800;\n\n@Injectable()\nexport class SplitResizerHandler {\n  private readonly destroyRef = inject(DestroyRef);\n  private readonly document = inject(DOCUMENT);\n  private readonly focusMonitor = inject(FocusMonitor);\n\n  private container!: ElementRef<any>;\n  private content!: ElementRef<HTMLDivElement>;\n  private editor: ElementRef<HTMLDivElement> | undefined;\n  private resizer!: ElementRef<HTMLDivElement>;\n\n  private readonly resizeData = signal<ResizingData>({\n    initialContentContainerWidthInPercentage: 0,\n    initialDividerPosition: 0,\n    initialEditorContainerWidthInPercentage: 0,\n    isProgress: false,\n  });\n\n  init(\n    container: ElementRef<unknown>,\n    content: ElementRef<HTMLDivElement>,\n    resizer: ElementRef<HTMLDivElement>,\n    editor?: ElementRef<HTMLDivElement>,\n  ): void {\n    this.container = container;\n    this.content = content;\n    this.resizer = resizer;\n    this.editor = editor;\n\n    this.listenToResizeStart();\n\n    this.listenToResize();\n\n    this.listenToResizeEnd();\n\n    this.resizeContainersUsingKeyArrows();\n  }\n\n  private listenToResizeStart(): void {\n    fromEvent<MouseEvent>(this.resizer.nativeElement, 'mousedown')\n      .pipe(\n        map((event) => ({editor: this.editor, event})),\n        filter(\n          (eventAndEditor): eventAndEditor is MouseEventAndEditor =>\n            !!eventAndEditor.editor?.nativeElement,\n        ),\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe(({event}) => {\n        const contentWidthInPercentage = this.getCurrentContainerWidth(this.content.nativeElement);\n        const editorWidthInPercentage = this.getCurrentContainerWidth(this.editor!.nativeElement);\n\n        this.content.nativeElement.style.minWidth = `${MIN_WIDTH_OF_CONTENT_IN_PX}px`;\n\n        this.resizeData.update((data) => {\n          data.initialDividerPosition = event.pageX;\n          data.isProgress = true;\n          data.initialContentContainerWidthInPercentage = contentWidthInPercentage;\n          data.initialEditorContainerWidthInPercentage = editorWidthInPercentage;\n          return {...data};\n        });\n      });\n  }\n\n  private listenToResize(): void {\n    fromEvent<MouseEvent>(this.document, 'mousemove')\n      .pipe(\n        map((event) => ({editor: this.editor, event})),\n        filter(\n          (eventAndEditor): eventAndEditor is MouseEventAndEditor =>\n            !!eventAndEditor.editor?.nativeElement,\n        ),\n        takeUntilDestroyed(this.destroyRef),\n      )\n      .subscribe(({event}) => {\n        if (this.resizeData().isProgress) {\n          const newDividerPosition = event.pageX;\n          const containerWidth = this.getParentContainerWidth();\n          const shift =\n            ((newDividerPosition - this.resizeData().initialDividerPosition) / containerWidth) *\n            100;\n          const newContentWidthInPercentage =\n            this.resizeData().initialContentContainerWidthInPercentage + shift;\n          const newEditorWidthInPercentage =\n            this.resizeData().initialEditorContainerWidthInPercentage - shift;\n          this.setWidthOfTheContainers(newContentWidthInPercentage, newEditorWidthInPercentage);\n        }\n      });\n  }\n\n  private listenToResizeEnd(): void {\n    fromEvent(this.document, 'mouseup')\n      .pipe(takeUntilDestroyed(this.destroyRef))\n      .subscribe(() => {\n        if (this.resizeData().isProgress) {\n          this.content.nativeElement.style.minWidth = `${MIN_WIDTH_OF_CONTENT_IN_PX}px`;\n\n          this.resizeData.update((data) => {\n            data.isProgress = false;\n            data.initialDividerPosition = 0;\n            data.initialContentContainerWidthInPercentage = 0;\n            data.initialEditorContainerWidthInPercentage = 0;\n            return {...data};\n          });\n        }\n      });\n  }\n\n  // When resizer bar is focused, resize containers when user presses key arrows.\n  private resizeContainersUsingKeyArrows(): void {\n    combineLatest([\n      this.focusMonitor.monitor(this.resizer),\n      fromEvent<KeyboardEvent>(this.document, 'keydown'),\n    ])\n      .pipe(\n        filter(\n          ([origin, keyEvent]) =>\n            !!origin && (keyEvent.key === 'ArrowLeft' || keyEvent.key === 'ArrowRight'),\n        ),\n        takeUntilDestroyed(this.destroyRef),\n        finalize(() => this.focusMonitor.stopMonitoring(this.resizer)),\n      )\n      .subscribe(([_, keyEvent]) => {\n        const shift = keyEvent.key === 'ArrowLeft' ? -1 : 1;\n\n        const contentWidth = this.getCurrentContainerWidth(this.content.nativeElement);\n        const editorWidth = this.getCurrentContainerWidth(this.editor!.nativeElement);\n        this.setWidthOfTheContainers(contentWidth + shift, editorWidth - shift);\n      });\n  }\n\n  private setWidthOfTheContainers(\n    newContentWidthInPercentage: number,\n    newEditorWidthInPercentage: number,\n  ) {\n    const containerWidth = this.container.nativeElement.offsetWidth;\n    const newContentWidthInPx = (containerWidth * newContentWidthInPercentage) / 100;\n\n    if (\n      newContentWidthInPx > MIN_WIDTH_OF_CONTENT_IN_PX &&\n      newContentWidthInPx < MAX_WIDTH_OF_CONTENT_IN_PX &&\n      this.editor\n    ) {\n      this.content.nativeElement.style.width = `${newContentWidthInPercentage}%`;\n      this.editor.nativeElement.style.width = `${newEditorWidthInPercentage}%`;\n    }\n  }\n\n  private getCurrentContainerWidth(element: HTMLDivElement): number {\n    const savedWidth = Number(element.style.width.replace('%', ''));\n    return savedWidth > 0\n      ? savedWidth\n      : (element.offsetWidth / this.getParentContainerWidth()) * 100;\n  }\n\n  private getParentContainerWidth(): number {\n    return (\n      this.resizer.nativeElement.offsetWidth +\n      this.content.nativeElement.offsetWidth +\n      this.editor!.nativeElement.offsetWidth\n    );\n  }\n}\n", "/*!\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.dev/license\n */\n\nimport {isPlatformBrowser, NgComponentOutlet, NgTemplateOutlet} from '@angular/common';\nimport {\n  afterNextRender,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  computed,\n  DestroyRef,\n  ElementRef,\n  EnvironmentInjector,\n  inject,\n  PLATFORM_ID,\n  Signal,\n  signal,\n  Type,\n  viewChild,\n} from '@angular/core';\nimport {takeUntilDestroyed} from '@angular/core/rxjs-interop';\nimport {\n  ClickOutside,\n  DocContent,\n  DocViewer,\n  IconComponent,\n  NavigationItem,\n  NavigationList,\n  TutorialType,\n  TutorialNavigationData,\n  TutorialNavigationItem,\n} from '@angular/docs';\nimport {ActivatedRoute, RouterLink} from '@angular/router';\nimport {from} from 'rxjs';\nimport {filter} from 'rxjs/operators';\n\nimport {\n  EmbeddedTutorialManager,\n  LoadingStep,\n  NodeRuntimeState,\n  EmbeddedEditor,\n  injectNodeRuntimeSandbox,\n} from '../../editor/index';\nimport {SplitResizerHandler} from './split-resizer-handler.service';\nimport {PAGE_PREFIX} from '../../core/constants/pages';\n\nconst INTRODUCTION_LABEL = '简介';\n\n@Component({\n  selector: 'adev-tutorial',\n  imports: [\n    NgComponentOutlet,\n    NgTemplateOutlet,\n    DocViewer,\n    NavigationList,\n    ClickOutside,\n    RouterLink,\n    IconComponent,\n  ],\n  templateUrl: './tutorial.component.html',\n  styleUrls: [\n    './tutorial.component.scss',\n    './tutorial-navigation.scss',\n    './tutorial-navigation-list.scss',\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [SplitResizerHandler],\n})\nexport default class Tutorial {\n  readonly content = viewChild<ElementRef<HTMLDivElement>>('content');\n  readonly editor = viewChild<ElementRef<HTMLDivElement>>('editor');\n  readonly resizer = viewChild.required<ElementRef<HTMLDivElement>>('resizer');\n  readonly revealAnswerButton = viewChild<ElementRef<HTMLButtonElement>>('revealAnswerButton');\n\n  private readonly changeDetectorRef = inject(ChangeDetectorRef);\n  private readonly environmentInjector = inject(EnvironmentInjector);\n  private readonly elementRef = inject(ElementRef<unknown>);\n  private readonly embeddedTutorialManager = inject(EmbeddedTutorialManager);\n  private readonly nodeRuntimeState = inject(NodeRuntimeState);\n  private readonly route = inject(ActivatedRoute);\n  private readonly splitResizerHandler = inject(SplitResizerHandler);\n  private readonly isBrowser = isPlatformBrowser(inject(PLATFORM_ID));\n\n  readonly documentContent = signal<string | null>(null);\n  readonly localTutorialZipUrl = signal<string | undefined>(undefined);\n\n  readonly nextTutorialPath = signal<string | null>(null);\n  readonly stepName = signal<string | null>(null);\n  readonly tutorialName = signal<string | null>(null);\n  readonly tutorialNavigationItems = signal<NavigationItem[]>([]);\n  readonly showNavigationDropdown = signal<boolean>(false);\n\n  readonly shouldRenderContent = signal<boolean>(false);\n  readonly shouldRenderEmbeddedEditor = signal<boolean>(false);\n  readonly shouldRenderRevealAnswer = signal<boolean>(false);\n  readonly restrictedMode = signal<boolean>(false);\n\n  nextStepPath: string | undefined;\n  previousStepPath: string | undefined;\n\n  embeddedEditorComponent?: Type<unknown>;\n\n  canRevealAnswer: Signal<boolean> = signal(false);\n  readonly answerRevealed = signal<boolean>(false);\n\n  constructor() {\n    this.route.data\n      .pipe(\n        filter(() =>\n          Boolean(this.route?.routeConfig?.path?.startsWith(`${PAGE_PREFIX.TUTORIALS}/`)),\n        ),\n        takeUntilDestroyed(),\n      )\n      .subscribe((data) => {\n        const docContent = (data['docContent'] as DocContent | undefined)?.contents ?? null;\n        this.documentContent.set(docContent);\n        this.setTutorialData(data as TutorialNavigationItem);\n      });\n\n    const destroyRef = inject(DestroyRef);\n    afterNextRender(() => {\n      this.splitResizerHandler.init(\n        this.elementRef,\n        this.content()!,\n        this.resizer(),\n        this.editor(),\n      );\n\n      from(this.loadEmbeddedEditorComponent())\n        .pipe(takeUntilDestroyed(destroyRef))\n        .subscribe((editorComponent) => {\n          this.embeddedEditorComponent = editorComponent;\n          this.changeDetectorRef.markForCheck();\n        });\n    });\n  }\n\n  toggleNavigationDropdown($event: MouseEvent): void {\n    // Stop propagation required to avoid detecting click inside ClickOutside\n    // directive.\n    $event.stopPropagation();\n    this.showNavigationDropdown.update((state) => !state);\n  }\n\n  hideNavigationDropdown(): void {\n    this.showNavigationDropdown.set(false);\n  }\n\n  async handleRevealAnswer() {\n    if (!this.canRevealAnswer()) return;\n\n    this.embeddedTutorialManager.revealAnswer();\n\n    const nodeRuntimeSandbox = await injectNodeRuntimeSandbox(this.environmentInjector);\n\n    await Promise.all(\n      Object.entries(this.embeddedTutorialManager.answerFiles()).map(([path, contents]) =>\n        nodeRuntimeSandbox.writeFile(path, contents as string | Uint8Array),\n      ),\n    );\n\n    this.answerRevealed.set(true);\n  }\n\n  async handleResetAnswer() {\n    if (!this.canRevealAnswer()) return;\n\n    this.embeddedTutorialManager.resetRevealAnswer();\n\n    const nodeRuntimeSandbox = await injectNodeRuntimeSandbox(this.environmentInjector);\n\n    await Promise.all(\n      Object.entries(this.embeddedTutorialManager.tutorialFiles()).map(([path, contents]) =>\n        nodeRuntimeSandbox.writeFile(path, contents as string | Uint8Array),\n      ),\n    );\n\n    this.answerRevealed.set(false);\n  }\n\n  /**\n   * Set tutorial data based on current tutorial\n   */\n  private async setTutorialData(tutorialNavigationItem: TutorialNavigationItem): Promise<void> {\n    this.showNavigationDropdown.set(false);\n    this.answerRevealed.set(false);\n    this.restrictedMode.set(tutorialNavigationItem.tutorialData.restrictedMode);\n\n    this.setRouteData(tutorialNavigationItem);\n\n    const {tutorialData: routeData} = tutorialNavigationItem;\n\n    if (routeData.type === TutorialType.LOCAL) {\n      this.setLocalTutorialData(routeData);\n    } else if (\n      (routeData.type === TutorialType.EDITOR || routeData.type === TutorialType.CLI) &&\n      this.isBrowser\n    ) {\n      await this.setEditorTutorialData(\n        tutorialNavigationItem.path.replace(`${PAGE_PREFIX.TUTORIALS}/`, ''),\n      );\n    }\n  }\n\n  /**\n   * Set tutorial data from route data\n   */\n  private setRouteData(tutorialNavigationItem: TutorialNavigationItem) {\n    const {tutorialData: routeData} = tutorialNavigationItem;\n\n    const tutorialName = tutorialNavigationItem.parent\n      ? tutorialNavigationItem.parent.label\n      : tutorialNavigationItem.label;\n\n    const stepName = routeData.title === tutorialName ? INTRODUCTION_LABEL : routeData.title;\n\n    this.tutorialName.set(tutorialName);\n    this.stepName.set(stepName);\n\n    this.tutorialNavigationItems.set(\n      tutorialNavigationItem.parent\n        ? [{...tutorialNavigationItem.parent, label: INTRODUCTION_LABEL}]\n        : [{...tutorialNavigationItem, label: INTRODUCTION_LABEL}],\n    );\n\n    this.shouldRenderContent.set(routeData.type !== TutorialType.EDITOR_ONLY);\n\n    this.nextStepPath = routeData.nextStep ? `/${routeData.nextStep}` : undefined;\n    this.previousStepPath = routeData.previousStep ? `/${routeData.previousStep}` : undefined;\n\n    this.nextTutorialPath.set(routeData.nextTutorial ? `/${routeData.nextTutorial}` : null);\n  }\n\n  /**\n   * Set values for tutorials that do not use the embedded editor\n   */\n  private setLocalTutorialData(routeData: TutorialNavigationData) {\n    this.localTutorialZipUrl.set(routeData.sourceCodeZipPath);\n\n    this.shouldRenderEmbeddedEditor.set(false);\n    this.shouldRenderRevealAnswer.set(false);\n  }\n\n  /**\n   * Set values for tutorials that use the embedded editor\n   */\n  private async setEditorTutorialData(tutorialPath: string) {\n    this.shouldRenderEmbeddedEditor.set(true);\n\n    const currentTutorial = tutorialPath.replace(`${PAGE_PREFIX.TUTORIALS}/`, '');\n\n    await this.embeddedTutorialManager.fetchAndSetTutorialFiles(currentTutorial);\n\n    const hasAnswers = Object.keys(this.embeddedTutorialManager.answerFiles()).length > 0;\n    this.shouldRenderRevealAnswer.set(hasAnswers);\n\n    await this.loadEmbeddedEditor();\n  }\n\n  private async loadEmbeddedEditor() {\n    const nodeRuntimeSandbox = await injectNodeRuntimeSandbox(this.environmentInjector);\n\n    this.canRevealAnswer = computed(() => this.nodeRuntimeState.loadingStep() > LoadingStep.BOOT);\n\n    await nodeRuntimeSandbox.init();\n  }\n\n  private async loadEmbeddedEditorComponent(): Promise<typeof EmbeddedEditor> {\n    return await import('../../editor/index').then((c) => c.EmbeddedEditor);\n  }\n}\n", "<div class=\"adev-page-content\" [class.adev-nav-open]=\"showNavigationDropdown()\">\n  <ng-container *ngTemplateOutlet=\"tutorialNav\" />\n  @if (shouldRenderContent()) {\n    <div #content class=\"docs-tutorial-content\" [class.adev-nav-open]=\"showNavigationDropdown()\">\n      <!-- Tutorial Nav: Current Tutorial Title and Nav Buttons -->\n      <ng-container *ngTemplateOutlet=\"tutorialNav\" />\n\n      <!-- Tutorial Content -->\n      @if (documentContent(); as documentContent) {\n        <main docsViewer\n          [docContent]=\"documentContent\"\n          class=\"docs-viewer docs-viewer-scroll-margin-large\"></main>\n      }\n    </div>\n  }\n\n  <!-- Split View Resizer -->\n  <button\n    role=\"separator\"\n    #resizer\n    class=\"adev-tutorial-resizer\"\n    [class.adev-tutorial-resizer-hidden]=\"!shouldRenderEmbeddedEditor() || !shouldRenderContent()\"\n  ></button>\n\n  <!-- Embedded Editor -->\n  @if (shouldRenderEmbeddedEditor()) {\n    <div #editor class=\"docs-tutorial-editor\" [class.adev-split-tutorial]=\"shouldRenderContent()\">\n      @if (embeddedEditorComponent) {\n        <ng-container\n          *ngComponentOutlet=\"embeddedEditorComponent; inputs:{restrictedMode:restrictedMode()}\"\n        />\n      }\n    </div>\n  }\n</div>\n\n<!-- Tutorial Nav Template -->\n<ng-template #tutorialNav>\n  <div class=\"adev-tutorial-nav-container\">\n    <div class=\"adev-tutorial-nav\" [class.adev-nav-open]=\"showNavigationDropdown()\">\n      <!-- Toggle Nav Button -->\n      <button class=\"adev-unfold-button\" (click)=\"toggleNavigationDropdown($event)\">\n        <docs-icon>unfold_more</docs-icon>\n        <div class=\"adev-current-tutorial\">\n          <span>{{ tutorialName() }}</span>\n          <span>{{ stepName() }}</span>\n        </div>\n      </button>\n\n      <!-- Reveal Answer Button -->\n      @if (shouldRenderRevealAnswer()) {\n        <button\n          #revealAnswerButton\n          (click)=\"answerRevealed() ? handleResetAnswer() : handleRevealAnswer()\"\n          [disabled]=\"!canRevealAnswer()\"\n          class=\"docs-reveal-answer-button adev-reveal-desktop-button docs-primary-btn\"\n          [attr.text]=\"answerRevealed() ? '重置' : '显示答案'\"\n          [attr.aria-label]=\"answerRevealed() ? '重置' : '显示答案'\"\n          [class.adev-reset-answer-button]=\"answerRevealed()\"\n        >\n          {{ answerRevealed() ? '重置' : '显示答案' }}\n        </button>\n      }\n\n      <!-- Download code -->\n      @if (localTutorialZipUrl()) {\n        <a [download]=\"stepName() + '.zip'\" [href]=\"localTutorialZipUrl()\">\n          <button class=\"adev-download-button docs-primary-btn\">\n            <docs-icon>download</docs-icon>\n          </button>\n        </a>\n      }\n\n      <div class=\"adev-nav-arrows\">\n        @if (previousStepPath) {\n          <a [routerLink]=\"previousStepPath\">\n            <button class=\"docs-primary-btn\">\n              <docs-icon>chevron_left</docs-icon>\n            </button>\n          </a>\n        }\n        @if (!previousStepPath) {\n          <button class=\"docs-primary-btn\" disabled>\n            <docs-icon>chevron_left</docs-icon>\n          </button>\n        }\n\n        @if (nextStepPath) {\n          <a [routerLink]=\"nextStepPath\">\n            <button class=\"docs-primary-btn\">\n              <docs-icon>chevron_right</docs-icon>\n            </button>\n          </a>\n        }\n        @if (!nextStepPath) {\n          <button class=\"docs-primary-btn\" disabled>\n            <docs-icon>chevron_right</docs-icon>\n          </button>\n        }\n      </div>\n\n      <!-- Reveal Answer Button: for smaller container -->\n      <div class=\"adev-reveal-mobile-button-container\">\n        @if (shouldRenderRevealAnswer()) {\n          <button\n            #revealAnswerButton\n            (click)=\"answerRevealed() ? handleResetAnswer() : handleRevealAnswer()\"\n            [disabled]=\"!canRevealAnswer()\"\n            class=\"docs-reveal-answer-button adev-reveal-mobile-button docs-primary-btn\"\n            [attr.text]=\"answerRevealed() ? '重置' : '显示答案'\"\n            [attr.aria-label]=\"answerRevealed() ? '重置' : '显示答案'\"\n            [class.adev-reset-answer-button]=\"answerRevealed()\"\n          >\n            {{ answerRevealed() ? '重置' : '显示答案' }}\n          </button>\n        }\n      </div>\n\n      <!-- Tutorial Nav: List -->\n      @if (showNavigationDropdown()) {\n        <div class=\"adev-tutorial-nav-list-dropdown\" (docsClickOutside)=\"hideNavigationDropdown()\">\n          <docs-navigation-list\n            [isDropdownView]=\"true\"\n            [navigationItems]=\"tutorialNavigationItems()\"\n            class=\"adev-nav-list\"\n          />\n          @if (nextTutorialPath()) {\n            <a [routerLink]=\"'/' + nextTutorialPath()\">下一个教程</a>\n          }\n        </div>\n      }\n    </div>\n  </div>\n</ng-template>\n"],
  "mappings": "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",
  "names": []
}
